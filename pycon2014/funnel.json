{
  "proposals": [
    {
      "links": "http://engineering.hackerearth.com/\r\n\r\nhttp://hck.re/vivekprakash",
      "proposer": "Vivek Prakash",
      "votes_count": null,
      "comments": 3,
      "id": 256,
      "votes": 74,
      "requirements": "",
      "title": "Scaling Python/Django to millions of unique visitors and page-views (HackerEarth)",
      "section": "Web Development",
      "votes_groups": null,
      "speaker": "Vivek Prakash",
      "objective": "<p>The audience will get to learn about what it takes to build a highly fault-tolerant and distributed web application which can tolerate high load, offers minimal latency and is surprisingly fast. I will dive into the discussion of such an architecture including optimizations at application level (Python/Django), database (MySQL), Apache, rabbitmq, celery, memcached, Tornado and HAProxy.  </p>",
      "type": "",
      "email": null,
      "bio": "<p>I am the CTO &amp; Co-founder of HackerEarth, a platform for developers to solve programming challenges and connect with each other. I started building HackerEarth about an year back which has quickly become a large production environment, throwing challenges everyday to smoothly scale it up. I will share the experiences and learning I had while building it, some of them very little known in the open but most important to build any good product.  </p>\n<p>I am 23 years old, and graduated in 2013 from IIT Roorkee.</p>",
      "description": "<p>Scaling up a web application is one of the hardest part while handling huge traffic and load bursts. At <a href=\"\">HackerEarth</a>, we are big fan of Python &amp; Django. We have served up to million unique visitors and tens of millions of pageviews in just over an year, including our Code-Evaluation servers which has served over three million requests. I will talk about how to scale up fast and without failing most of the times.  </p>\n<p><strong>Python/Django</strong></p>\n<p>There are so many lesser-known optimizations that can be done at the application level, including steps to reduce queries, writing code which takes O(1) time irrespective of the size of data, and managing the process memory efficiently. I will talk about some of them in detail.  </p>\n<p><strong>Apache web-server</strong></p>\n<p>we use Apache with mod_wsgi for hosting the application. There is a general complaint that Apache sucks when it comes to hosting Python web applications. It\u2019s said that it\u2019s slow, bloated, uses lots of memory and doesn\u2019t perform very well. It\u2019s also said that it doesn\u2019t handle a high number of concurrent requests.<br>\nAll that is true if you are not running the Python application in the right way. If configured properly, Apache works fantastically and is usually never the reason of slowness. That is almost always due to the application bottlenecks and database latency. I will talk about how to setup mod_wsgi and Apache properly to handle traffic bursts.  </p>\n<p><strong>MySQL (Database)</strong></p>\n<p>With the growing data and number of requests/sec, it turns out that the database becomes the major bottlneck to scale the application dynamically. At this point if you are thinking that there are mythical (cloud) providers who can handle the growing need of your application, you can\u2019t be more wrong. To make the problem even harder, you can\u2019t spin a new database whenever you want to just like your frontend servers. To achieve a horizontal scalability at all levels, it requires massive rearchitecture of the system while being completely transparent to the end user. I will talk about how to scale up the database beautifully.  </p>\n<p>I will cover other components like Memcached, celery &amp; rabbitmq in  brief detail, mostly focusing on how to leverage them for faster response time and using the concept of \u2018deferred processing\u2019 for most of the tasks.  </p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "256-scaling-python-django-to-millions-of-unique-visitors-and-page-views-hackerearth",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/256-scaling-python-django-to-millions-of-unique-visitors-and-page-views-hackerearth",
      "submitted": "2014-05-30T19:20:21.456205Z"
    },
    {
      "links": "https://github.com/hasgeek/lastuser\r\nhttps://auth.hasgeek.com/",
      "proposer": "Kiran Jonnalagadda",
      "votes_count": null,
      "comments": 2,
      "id": 255,
      "votes": 16,
      "requirements": "",
      "title": "Auth as a service with Lastuser",
      "section": "Web Development",
      "votes_groups": null,
      "speaker": "Kiran Jonnalagadda",
      "objective": "<p>Understanding the challenges with auth as a service, using the Lastuser service</p>",
      "type": "",
      "email": null,
      "bio": "<p>Kiran Jonnalagadda created Lastuser alongside a bunch of other nifty and not-so-nifty things.</p>",
      "description": "<p>At Pycon India 2011, I presented Lastuser, which provides authentication as a service, aggregating multiple social profiles into a single application-facing profile. Lastuser has since been adopted by PyCon India for its own proposal submission process.  </p>\n<p>It's been three years since, so I'd like to revisit how Lastuser has developed since then and what I've learnt about authentication and building such apps using Python.</p>",
      "confirmed": true,
      "slides": "",
      "phone": null,
      "name": "255-auth-as-a-service-with-lastuser",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/255-auth-as-a-service-with-lastuser",
      "submitted": "2014-05-30T18:36:44.599818Z"
    },
    {
      "links": "Scripts will be uploaded progressively.\r\n\r\nhttps://twitter.com/yamakira_\r\n\r\n\r\nLibraries/Modules\r\n\r\nMost of the packages could be installed simply using Python Package Index(PIP)\r\nscapy                                           www.secdev.org/projects/scapy/\r\ndnspython                                     www.dnspython.org/\r\nimpacket                                       code.google.com/p/impacket/\r\nssl                                                https://docs.python.org/dev/library/ssl.html\r\nbackports.ssl_match_hostname       https://pypi.python.org/pypi/backports.ssl_match_hostname\r\nlogging                                          https://docs.python.org/2/library/logging.html\r\nmechanize                                    https://pypi.python.org/pypi/mechanize/\r\nmem-cached                                 https://pypi.python.org/pypi/python-memcached/1.53\r\npymaltego                                     code.google.com/p/pymaltego/\r\nshodan                                         https://github.com/achillean/shodan-python\r\n",
      "proposer": "Bharath",
      "votes_count": null,
      "comments": 3,
      "id": 254,
      "votes": 21,
      "requirements": "<p>Prerequisites  </p>\n<ul>\n<li>\n<p>Absolute <em>basic</em> Python or some programming experience in some high level language is a must(C preferred). You need to know what's on \"Google's Python classes\"</p>\n</li>\n<li>\n<p>Basics of Networking concepts is desired but some essential networking concepts are covered in the talk(depending on the crowd). We'll cover little more than Beej's guide.</p>\n</li>\n<li>\n<p>Survival command line skills on *nix platform desired or just bring a cheat sheet. We will learn necessary commands as we go though.</p>\n</li>\n</ul>\n<p>Resources</p>\n<ul>\n<li>\n<p>\"Beej's Guide to Network Programming Using Internet Sockets\" <a href=\"http://beej.us/guide/bgnet/\">http://beej.us/guide/bgnet/</a></p>\n</li>\n<li>\n<p>\"Google's Python classes\" <a href=\"https://developers.google.com/edu/python/?csw=1\">https://developers.google.com/edu/python/?csw=1</a></p>\n</li>\n<li>\n<p>TCP/IP packet headers : <a href=\"http://nmap.org/book/tcpip-ref.html\">http://nmap.org/book/tcpip-ref.html</a></p>\n</li>\n</ul>\n<p>Technical requirements  </p>\n<ul>\n<li>Python 2.7</li>\n<li>Linux 2.6.x / 3.0.x or any *nix platform will do(Kali Linux makes life easier.)</li>\n</ul>\n<p>(Code will be made as OS agnostic as possible but we all know *NIX is better)</p>",
      "title": "Network programming in Python: Mastering the layers of protocol stack.",
      "section": "Workshops",
      "votes_groups": null,
      "speaker": "Bharath",
      "objective": "<p>\u201cA typical bay area venture capitalist type would tell you to be a goodie good developer and pick up a Django type workshop. Will you surrender to the technical lullaby, or are you willing to embark on a journey down the rabbit hole that takes you to places where coders meet the real deal of bits, bytes and protocols with no/low abstractions.\u201d*</p>\n<p>Enough of the technical anecdotes, let's see what this workshop is going to be.  </p>",
      "type": "",
      "email": null,
      "bio": "<p>I am a Network Security, Protocols and Software exploitation enthusiast. Been coding in Python for security tasks &amp; academics from past 4 years. Graduated from Asia Pacific University, Kuala Lumpur in Information Systems Security(ISS). I do security contract works for various Bio-pharma companies.  </p>\n<p>When not doing security work or lurking on Coursera, I could be found hiking in the eastern ghats :)</p>",
      "description": "<h2>Background</h2>\n<p>I planned to propose a workshop solely based on security scripting but then I realized it's seems too contrived to make people dive right into security specifics, rather it would be more natural to make programmers think/code generically in network programming and protocols perspective, then let them progress into specifics. More over many full \"stack\" developers are clueless about what's behind all those pretty library functions.  </p>\n<h2>What this workshop covers?</h2>\n<p>This workshop is going to be three hours of hands-on journey thorough the murky corners of internet(protocols).  </p>\n<p>We will dissect each layer of OSI model and major protocols involved, from a <strong>programmer's perspective</strong>. This workshop includes both IPV4 and IPV6 discussion.  </p>\n<p>Most probably there will a simple <em>WLAN setup</em> where the participants could write and test their scripts.  </p>\n<p>By the end of this workshop you will be able to understand Network protocol stack from a programmer perspective, understand socket abstraction, be able to write simple network applications and go about understanding advanced network programming concepts.  </p>\n<p>In-case you are going to vote positively, please <strong>fill in the survey</strong> to make the workshop more productive:<br>\n<a href=\"https://www.surveymonkey.com/s/MT3XVTB\">https://www.surveymonkey.com/s/MT3XVTB</a></p>\n<p>A high level overview of what will be covered in the workshop is as follows:  </p>\n<pre class=\"syntax\"><code>                                    Networking essentials</code></pre>\n\n\n<p>Sprint through the essential networking concepts to get started with network programming. Includes core internet protocols, Internet addressing, packet headers etc. We will be covering a little more than what is there in \"Beej's Guide to Network Programming Using Internet Sockets\"  </p>\n<pre class=\"syntax\"><code>                                    Sockets</code></pre>\n\n\n<p>We will delve into concept of sockets. We'll be covering low level nuisances like socket functions, name functions, byte order and byte order functions etc.  </p>\n<pre class=\"syntax\"><code>                                    Protocols</code></pre>\n\n\n<p>We look at programming using sockets, communicating using various protocols through at different layers. Some protocols that\u2019ll be covered includes HTTP, DNS, SSL/TLS, IMAP, SMTP, SSH, FTP etc.  </p>\n<pre class=\"syntax\"><code>                                    Network errors/Debugging</code></pre>\n\n\n<p>Writing clean network programs is non-trivial. There are numerous error cases that might arise varying from protocol errors to physical cable problems and they should be dealt with properly. Debugging is one of the most important aspects of Network programming.  </p>\n<pre class=\"syntax\"><code>                        Third part libraries- to make life easier</code></pre>\n\n\n<p>After looking at all the low levels details it\u2019s time to take a look at ways to not worry about them while coding. We look at some third party libraries that might often come very handy while writing network scripts. They help you write scripts effortlessly, on the fly. Scapy, Impacket to name some.  </p>\n<pre class=\"syntax\"><code>                            Raw sockets - To make life harder</code></pre>\n\n\n<p>A <em>raw socket</em> is an internet socket that allows direct sending and receiving of Internet Protocol packets without any protocol-specific layer formatting. This is the single most powerful technique that we will be covering. We will code bunch of <em>port scanning techniques</em> using raw sockets.  </p>\n<pre class=\"syntax\"><code>                                    Miscellaneous scripts</code></pre>\n\n\n<p>We will code &amp; look at some interesting scripts in action. Script that uses <em>shodan</em> to search networked devices, <em>maltego</em> to perform OSINT and some <em>security scipts</em>(yeah, I'm biased).  </p>\n<pre class=\"syntax\"><code>                                    Moving forward..</code></pre>\n\n\n<p>A roadmap on where to go next with what participants picked up in the workshop.  </p>\n<h2>Intended Audience</h2>\n<ul>\n<li>Programmers who have intent of writing applications that communicates over networks</li>\n<li>Security Engineers would benefit a ton from knowing the material</li>\n</ul>",
      "confirmed": false,
      "slides": "http://www.slideshare.net/hurtl0cker/network-programming-in-python-36678345",
      "phone": null,
      "name": "254-network-programming-in-python-mastering-the-layers-of-protocol-stack",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/254-network-programming-in-python-mastering-the-layers-of-protocol-stack",
      "submitted": "2014-05-30T16:57:53.728794Z"
    },
    {
      "links": "Pycon 13 - We're Building Skynet and it Loves Python!\r\nhttps://www.youtube.com/watch?v=U98EN8owp4M\r\n\r\n",
      "proposer": "Dhananjay Sathe",
      "votes_count": null,
      "comments": 0,
      "id": 253,
      "votes": 26,
      "requirements": "<p>Enthusiasm and Python Basics</p>",
      "title": "Meet ElasticSearch - My Pet Crunch Monster @Directi",
      "section": "Web Development",
      "votes_groups": null,
      "speaker": "Dhananjay Sathe",
      "objective": "<p>Get to know ElasticSearch - How we leverage it's awesomesauce in our massive infrastructure. It's 'QuickSliver' quick, level 'Xavier' smart and grows faster than 'Hulk'.  Learn how to use our favorite language to get down and dirty quick and leave procrastination and worrying to the past.</p>",
      "type": "",
      "email": null,
      "bio": "<p>At Directi, I design and build intelligent and slick software suite among other tools that enables us to keep tabs on all the little and large demons hidden in our huge distributed infrastructure and submit them into  control.  </p>\n<p>I have been  a long time Python Developer and been hacking in it for the better part of the decade. I contributed to a number of OpenSoure projects the notable ones being Samba, Gnome and The RoboEarth Cloud Engine of which I happened to be one of the core developers.  </p>\n<p>I have been speaking at a bunch of events and conferences such as Pycon, ROSCON and Google IOx.  </p>\n<p>I have spoken at Pycon 12 on GObject Introspection and Python and again at Pycon 13 presenting one of the most popular talks titled ' We're Building Skynet and it Loves Python!'  </p>\n<p>When free you will find me skiing, climbing, travelling around the world like an aimless vagabond. Usually doing something offbeat or simply sampling the local brew.</p>",
      "description": "<p>ElasticSearch is the new (sort-of) NoSQL kid on the block. Think, WikiPedia, FourSquare, Github. It comes with a set of very impressive features and exposes nifty constructs, that would entail growing a beard to compete with RMS in the SQL world.  </p>\n<p>Best of all , it's quick to deploy comes set with 'Marvel' overlord and whispers over REST.  </p>\n<p>Dealing with thousands of nodes,millions of events. We use it at a number of places. Some innovative features have surfaced in the recent releases of elasticsearch 1.x that make tasks over these huge data-sets a breeze.  </p>\n<p>The principle goal of this talk is to share some of this awesome candy with all you folks and get a whirlwind tour of the dead basics and introduce you to the nastily exciting bits and snippets that will have you wishing you had known better earlier.For the slightly more inquisitive readers - We'll talk  schemas,deploys, mappings, percolators, aggregations, server-side execution and extensions and of-course lessons learnt+takeaways.  </p>\n<p>The latest , finally official python libs make all this dead simple and quick to use. Combine nifty little scripts and our old friends like MatPlotlib to get intelligent insights into a buttload of seemingly random data. Or build a quick Code-Search, Context search, Discover the beauty called Kibana.  </p>\n<p>In the pattern for this talk I hope to break away from the usual delivery.Keep it fresh, interesting and give you something concrete to use and think about at the end of the time you spent sitting though the session.  </p>",
      "confirmed": true,
      "slides": "",
      "phone": null,
      "name": "253-meet-elasticsearch-my-pet-crunch-monster-directi",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/253-meet-elasticsearch-my-pet-crunch-monster-directi",
      "submitted": "2014-05-30T16:25:24.622446Z"
    },
    {
      "links": "http://www.sonalraj.com/\r\nhttps://github.com/sonal-raj/\r\nhttp://www.slideshare.net/sonal-raj/pycon-india-talk\r\nhttp://www.slideshare.net/sonal-raj/storm-serc-ppt",
      "proposer": "Sonal Raj",
      "votes_count": null,
      "comments": 0,
      "id": 252,
      "votes": 65,
      "requirements": "<ul>\n<li>\n<p>Your choice of Operating System</p>\n</li>\n<li>\n<p><a href=\"http://python.org/download/\">Python 2.7.x</a></p>\n</li>\n<li>\n<p><a href=\"http://www.neo4j.org/\">Neo4J community edition</a>, the latest version.</p>\n</li>\n<li>\n<p>py2neo. Install through pip or download <a href=\"https://github.com/nigelsmall/py2neo\">here</a></p>\n</li>\n</ul>",
      "title": "Graph everything with Neo4J and Python",
      "section": "Software Development Tools",
      "votes_groups": null,
      "speaker": "Sonal Raj",
      "objective": "<p>This talk introduces the world of graphs, their utility and the efficient use of the <a href=\"\">Neo4J</a> graph database for some super cool day to day applications with the help of <a href=\"\">py2neo</a>.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Sonal Raj is a pythonista, geek, and an open source developer with a passion for gadgets and technology.  </p>\n<p>He works on Distributed Computing, Real Time processing, Android and other cool stuff in his spare time with Python as the primary weapon. He began his entrepreneural journey with <a href=\"http://www.enfoss.org/\">Enfoss</a> and <a href=\"http://www.botcubes.com\">Botcubes</a>.He is currently works at <a href=\"http://sigmoidanalytics.com/\">Sigmoid Analytics</a>.  </p>\n<p>He has published code and Contributed to several Open Source Projects. He has also spoken at SERC @ IISc-B and  PyCon 2013.  </p>",
      "description": "<p>The world is built on graphs and software rotates around it too. Neo4J is a next generation NoSQL graph database that that objectifies and stores records in the form of nodes and relationships, which not only makes it incredibly user-friendly but also robust.  </p>\n<p>This talk introduces graph databases and their utilities and goes on to highlight some cool use cases of graph databases and  use of the RESTful interface of Neo4J. The key areas of focus of the session would include:  </p>\n<ul>\n<li>\n<p>Introduction to Graphs</p>\n</li>\n<li>\n<p>Graph and Data Models</p>\n</li>\n<li>\n<p>NoSQL Databases at their best</p>\n</li>\n<li>\n<p>Neo4J, its installation and configuration</p>\n</li>\n<li>\n<p>Working with Cypher, the query language for Neo4J</p>\n</li>\n<li>\n<p>py2neo, and how python makes life simpler for graphDb users</p>\n</li>\n<li>\n<p>integrating cypher queries with py2neo</p>\n</li>\n<li>\n<p>some cool use cases demonstated.</p>\n</li>\n</ul>\n<p>This talk is designed for those who are fascinated by graphs and would love to learn about more ways to include their use in day to day software needs.</p>",
      "confirmed": true,
      "slides": "",
      "phone": null,
      "name": "252-graph-everything-with-neo4j-and-python",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/252-graph-everything-with-neo4j-and-python",
      "submitted": "2014-05-30T15:45:08.097300Z"
    },
    {
      "links": "1. Fedora Profile [https://fedoraproject.org/wiki/User:Charul]\r\n2. Github (charulagrl (https://github.com/charulagrl)\r\n3. Blog (http://honeycoding.wordpress.com/)\r\n4. View Gsoc Proposal (https://fedoraproject.org/w/index.php?title=GSOC_2014/Student_Application_charul)",
      "proposer": "Charul ",
      "votes_count": null,
      "comments": 1,
      "id": 251,
      "votes": 19,
      "requirements": "<p>Attendees should have Scrapy, Requests and Beautiful Soup installed in their laptops.</p>",
      "title": "Making custom crawler using Scrapy and Beautiful Soup",
      "section": "Software Development Tools",
      "votes_groups": null,
      "speaker": "Charul ",
      "objective": "<p>In this session i will discuss about how to develop a custom crawler on the top of Python Scrapy. I will cover the basic steps for getting started with the python scrapy framework and how to write optimized code so that it crawls only things what you need not whole web. Also I will talk about motivation behind using custom crawler and will quote my example i.e. how i built cralwer for financial news articles.  </p>\n<p>Also I will tell you more about Python beautifulSoup which can ease your work in handling HTML and XML data.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I am currently a third year undergraduate student at IIIT Allahabad. I have been selected as an intern for Google Summer of Code 2014 under fedora organisation. Prior to this, I have worked as intern on a Datagrepper Project under Gnome Outreach Program for Women. I have worked with a few startup companies as freelancer and contributed to various open source projects.</p>",
      "description": "<p>This session will be divided in the following topics:<br>\n1. Why we need to have custom cralwers and some succesful stories about using it.<br>\n2. How to create custom web crawler on the top of Scrapy Framework?<br>\n3. How to write optimized scrapy script?<br>\n4. How to pre-process HTML and XML data using BeatifulSoup.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "251-making-custom-crawler-using-scrapy-and-beautiful-soup",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/251-making-custom-crawler-using-scrapy-and-beautiful-soup",
      "submitted": "2014-05-30T15:38:16.894311Z"
    },
    {
      "links": "www.artofprogramming.org",
      "proposer": "Rahul Pydimukkala",
      "votes_count": null,
      "comments": 0,
      "id": 250,
      "votes": 24,
      "requirements": "<p>Pen and paper.  </p>",
      "title": "Problem Solving in Python - How to write correct and efficient programs with ease",
      "section": "Core Python",
      "votes_groups": null,
      "speaker": "Rahul Pydimukkala",
      "objective": "<p>The talk focuses on implementing data structures and algorithms in Python and teaches principles behind program correctness and efficiency.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Rahul Pydimukkala is an entrepreneur and founder, CEO of The Art of Programming Edulabs (www.artofprogramming.org) . He is also a trainer and teaches programming to working professionals from industry and has 7 years of experience as a professional programmer. He believes in promoting quality programming education at all levels in an affordable and accessible manner and that doing so would empower people in great ways.  Rahul  attended IIT Kanpur  as an undergraduate in Computer Science and Engineering discipline.</p>",
      "description": "<p>How can we write a program to search for a node in a given graph? How can we implement a balanced binary search tree data structure? How about finding a shortest path between two nodes in a graph? How about a program that generates all permutations of a given list of objects? How about printing 999th prime number? How about drawing a 5th Hilbert curve? How about finding the GCD of 100 positive integers or solving 8 Queens problem? This list goes on.  </p>\n<p>If we know how to solve the above problems,  how ease are we at translating our solutions into working Python programs? Given that we have implemented a program that solves a problem, how would we reason about its correctness even before we test it? How efficient(practical/empirical sense) is our program on large inputs? How can we do better? These are some  questions one often needs to answer.  </p>\n<p>In this session we will  answer  these questions. We find that to answer these questions the best way we would need a language that allows us to think from first principles and how Python allows that. We learn how good Python is for solving problems, doing so correctly and efficiently. We wade through the core Python language facilities that make it possible namely, higher-order functions, recursion, list comprehensions, data abstraction and some functional programming principles.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "250-problem-solving-in-python-how-to-write-correct-and-efficient-programs-with-ease",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/250-problem-solving-in-python-how-to-write-correct-and-efficient-programs-with-ease",
      "submitted": "2014-05-30T14:46:16.803982Z"
    },
    {
      "links": "http://dbalan.in\r\nhttps://github.com/spotify/dh-virtualenv\r\n",
      "proposer": "dj",
      "votes_count": null,
      "comments": 0,
      "id": 249,
      "votes": 6,
      "requirements": "",
      "title": "Large scale python deployments using native packages.",
      "section": "Infrastructure",
      "votes_groups": null,
      "speaker": "dj",
      "objective": "<p>Rebuilding virtualenvs in each server is pain. Using natives packages<br>\nis much better and scalable.  </p>",
      "type": "",
      "email": null,
      "bio": "<p>I work as an infrastructure engineer with <a href=\"http://plivo.com\">plivo</a>. At work I manage large scale deployments mostly in python. I have been using python for last six years. </p>",
      "description": "<p>Here is the brief outline of talk  </p>\n<h2>Problem</h2>\n<p><code>git clone &amp;&amp; pip install</code> becomes painful when you scale.</p>\n<ul>\n<li>Its slow.</li>\n<li>You are wasting precious CPU cycles to do things again and again</li>\n<li>Each server should have the build toolchain.</li>\n<li>Wont' play nice with config managers.</li>\n</ul>\n<p>We are trying to solve something thats been solved by apt,<br>\nyum and essentially all sane package management systems.  </p>\n<h2>Inspiration</h2>\n<p>This talk and workflow is heavily inspired  from a blog post by <a href=\"https://hynek.me/articles/python-app-deployment-with-native-packages/\">Hynek Schlawack</a>.<br>\nHowever the original post used needed too much boilerplate code.  </p>\n<h2>Solution</h2>\n<p>[Disclaimer: Talk becomes specific to debian from here]</p>\n<p>Well, we can just use the package manager. But not all programmers are familiar with debian<br>\npackaging. But all python programmers (almost) understand <code>setup.py</code>. Using a wrapper (dh_virtualenv) that connects best of both can solve this.  </p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "249-large-scale-python-deployments-using-native-packages",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/249-large-scale-python-deployments-using-native-packages",
      "submitted": "2014-05-30T14:23:44.287234Z"
    },
    {
      "links": "https://github.com/donatello",
      "proposer": "Aditya Manthramurthy",
      "votes_count": null,
      "comments": 1,
      "id": 248,
      "votes": 23,
      "requirements": "",
      "title": "Building highly scalable web-services with Gevent - experiences at Plivo",
      "section": "Web Development",
      "votes_groups": null,
      "speaker": "Aditya Manthramurthy",
      "objective": "<p>This talk will introduce Gevent, how it works and how it can make Python scale. Plivo's architecture consists of multiple web-services built on Flask and Django. The talk will outline scaling challenges faced at Plivo, and how we handled them using Gevent with Flask  and Django to achieve high throughput and high CPU utilisation.  </p>\n<p>From this talk, attendees can expect to have an understanding of Gevent that will help them build highly concurrent webservers, especially with Flask or Django, often with little changes to existing code and without having to learn a complicated callbacks-based abstraction as used in frameworks like Tornado.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I am a Software Developer at Plivo. I've been programming in Python for over 6 years. At Plivo, I work on scaling and infrastructure management. We use Gevent extensively in our production systems, and I have gained a lot of valuable experience using it, especially with porting a large Django code-base to use gevent.</p>",
      "description": "<p>Gevent gives your Flask/Django application the ability to do asynchronous I/O with little or no modifications! This lets your Python web-server scale to over thousands of threads without running out of memory - C10K with Python, we're nearly there!  </p>\n<h2>Audience</h2>\n<p>Web developers using Django or Flask or a similar framework, who would like to understand how Gevent can help them get much higher concurrency, often with little or no changes to existing code.  </p>\n<h2>Talk Outline</h2>\n<ol>\n<li>\n<p><strong>An outline of scaling and concurrency challenges at Plivo, and how Gevent helped us solve these problems (~5 minutes)</strong>  </p>\n<p>Blocking I/O, multi-process scaling limitations, spiky workloads and low CPU utilisation were major bottlenecks, that we were able to mitigate and solve using Gevented web-servers.</p>\n</li>\n<li>\n<p><strong>Gevent concepts: Co-routines, event loops, greenlets and monkey-patching (~5 minutes)</strong>  </p>\n<p>Gevent is a co-routine based networking library that uses light-weight execution units, called greenlets, to provide a high-level synchronous API on top of a fast event loop provided by libev.</p>\n<p>Monkey-patching provides a way to convert existing Python Standard Libraries to be greenlet aware, so they yield execution when they start to do IO.</p>\n<p>Gevent switches threads of execution, either when the running greenlet yields explicitly, or when the greenlet performs I/O. This requires that libraries doing I/O in an application, are either pure Python or provide a way to be \"greened\" (for e.g. the PostgreSQL database driver psycopg2).</p>\n</li>\n<li>\n<p><strong>How can I tell if Gevent will help my application to scale (~3 minutes)</strong>  </p>\n<p>Things to factor in while making the decision: Is the application IO\nbound or CPU bound? Are \"green\" alternatives available for libraries doing IO?  </p>\n</li>\n<li>\n<p><strong>Demo to show Gevent performance and ease of use with Flask (~5 minutes)</strong>  </p>\n<p>After an outline of request processing in a typical web-application, we simulate a real-world web-server deployment using Flask and see how performance improves when using Gevent.</p>\n</li>\n<li>\n<p><strong>Porting applications to use Gevent: what to lookout for (~6 minutes)</strong>  </p>\n<p>Learnings from porting a large Django application to Gevent - on debugging blocking operations, database drivers, and libraries that cannot be \"greened\" easily.</p>\n</li>\n<li>\n<p><strong>Questions (~6 minutes)</strong>  </p>\n</li>\n</ol>",
      "confirmed": true,
      "slides": "",
      "phone": null,
      "name": "248-building-highly-scalable-web-services-with-gevent-experiences-at-plivo",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/248-building-highly-scalable-web-services-with-gevent-experiences-at-plivo",
      "submitted": "2014-05-30T14:08:37.584790Z"
    },
    {
      "links": "http://foss.in/2007/register/slides/Contributing_to_Zope_project_432.pdf\r\nhttp://www.youtube.com/watch?v=UEMjz5A_M5o\r\nhttp://muthukadan.net/presentation/python_workshop/fossmeet14.pdf\r\nhttp://in.pycon.org/2009/talkfull/21/",
      "proposer": "Baiju Muthukadan",
      "votes_count": null,
      "comments": 0,
      "id": 247,
      "votes": 13,
      "requirements": "<p>Basic understanding of Python programming<br>\nBasic understanding of testing concepts</p>",
      "title": "Automated testing using pytest",
      "section": "Software Development Tools",
      "votes_groups": null,
      "speaker": "Baiju Muthukadan",
      "objective": "<p>Introduce pytest for writing automated tests. pytest can be used for writing any kind of automated testing including unit tests, integration tests, functional tests etc.  This talk will cover installation, writing test cases, writing test fixtures and best practices.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Baiju Muthukadan is a Python developer working as a Technical Architect at ZeOmega, Bangalore. He has been a contributor to Zope project since 2006 and has authored the book titled, A Comprehensive Guide to Zope Component Architecture. He founded the Swathanthra Malayalam Computing project in 2001 while studying at REC, Calicut. He was also employed by Free Software Foundation of India in 2002-2003. He had contributed to Koha in 2003-2004 years and also implemented it in few libraries during that time. Baiju has conducted many Python related talks and workshops in various parts of India including FOSS.IN. He is the main author of Selenium Python documentation. During PyCON India 2013, he received the first Kenneth Gonsalves Award.</p>",
      "description": "<p>This talk will start with an introduction to automated testing in Python. A quick comparison of various testing tools.  </p>\n<ul>\n<li>Installation of pytest and setting up test environment. </li>\n<li>Writing simple test cases using pytest</li>\n<li>Writing test fixtures</li>\n<li>Quick overview of useful plugins (xdist, coverage etc.)</li>\n<li>Best practices</li>\n</ul>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "247-automated-testing-using-pytest",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/247-automated-testing-using-pytest",
      "submitted": "2014-05-30T14:08:22.085470Z"
    },
    {
      "links": "",
      "proposer": "vishnu murty",
      "votes_count": null,
      "comments": 2,
      "id": 246,
      "votes": 0,
      "requirements": "",
      "title": "Test Automation of Server UEFI BIOS",
      "section": "Infrastructure",
      "votes_groups": null,
      "speaker": "vishnu murty",
      "objective": "<p>The primary objective of this talk is about Pre-OS Automation. This implements a virtual screen to support ANSI terminal emulation. The screen representation and state are maintained for subsequent screen navigation.  </p>\n<p>\u2022        Introduction to dell_rc module and screen module\n\u2022        Using multithreading for maintaining serial port connection state\n\u2022        Maintains a table of transitions so that for a given input symbol it uses these tables to decide what action to call and what the next state will be.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Vishnu is Senior Automation Engineer in Dell India R&amp;D center with 8+ years of work experience Automating Server products.</p>",
      "description": "<p>Automation in validation has been a requirement in order to reduce manual intervention &amp; validation cycle to deliver a time to market product launch. Achieving Automation in Pre-OS environment like Server UEFI BIOS has been a challenge since we won\u2019t have an agent or intelligent application to run scripts or pass commands.  </p>\n<p>\u2022        API is developed using core python modules and open source third party modules.\n\u2022        It connects to remote machine using python socket module and reads the serial data and creates a virtual screen. Virtual screen will be same as remote virtual console.\n\u2022        It maintains the state of a virtual text screen as a rectangular array and also maintains a virtual cursor position and handles scrolling as characters are added.\n\u2022        It also accepts users keyboard inputs like F2, F10, ENTER... and transforms them to keystrokes on remote console.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "246-test-automation-of-server-uefi-bios",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/246-test-automation-of-server-uefi-bios",
      "submitted": "2014-05-30T13:54:15.175949Z"
    },
    {
      "links": "SharQ Server: https://github.com/plivo/sharq\r\nSharQ (Core Library that powers SharQ Server): https://github.com/plivo/sharq-server",
      "proposer": "Sandeep Raju",
      "votes_count": null,
      "comments": 12,
      "id": 245,
      "votes": 49,
      "requirements": "",
      "title": "SHARQ - An API queueing system built at Plivo!",
      "section": "Infrastructure",
      "votes_groups": null,
      "speaker": "Sandeep Raju",
      "objective": "<p>The audience will get to learn about an API queueing system we built at Plivo. This talk sheds light on the existing queues available and why we chose to build SHARQ instead of using the existing ones.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I work as a Product Engineer at <a href=\"https://www.plivo.com\">Plivo</a>. I am the primary author of SHARQ. Python has been my primary programming language from the past 4+ years. I am an ardent follower of Free &amp; Open Source software and love to hack on it in my free time. I am one the founding members and admin of the <a href=\"http://pesos.pes.edu/\">PES Open Source Community</a>. As a part of this community, I have conducted sessions on various open source softwares and have mentored some projects.  </p>\n<p>Here are my social profiles,  </p>\n<ul>\n<li><a href=\"https://github.com/sandeepraju\">https://github.com/sandeepraju</a></li>\n<li><a href=\"https://twitter.com/sandeeprajup\">https://twitter.com/sandeeprajup</a></li>\n</ul>\n<p>My personal website,  </p>\n<ul>\n<li><a href=\"http://sandeepraju.in\">http://sandeepraju.in</a></li>\n</ul>",
      "description": "<p>The talk will cover the following sections in detail.  </p>\n<h3>The Problem</h3>\n<p>Plivo often sees a spike in traffic patterns from some customers (for example when some customers decide to run a large Call or SMS campaign). These spikes tend to overload our systems because  the automatic scaling cannot be fast enough for such work loads. Under such a scenario, some customers start affecting API requests from other customers, thus bringing down the overall service quality. We do not want to have our customers take the trouble to rate limit at their end.  Thus, to ensure service quality, we need a system to queue API requests and process them at a controlled rate.  </p>\n<h3>Available Solutions &amp; Motivation for writing SHARQ</h3>\n<p>This section talks about how we evaluated Celery, and other queues. Why these did not fit into our requirements and why we chose to write it from ground up.  </p>\n<h3>Architecture and Algorithm</h3>\n<p>This section gives an overview of the implementation of SHARQ, how to use it and  a live demo. We\u2019ll start by discussing the architecture we chose for SHARQ and the tools we chose to build it. Then, I\u2019ll discuss the rate limiting algorithm and the redis data structures we have used. At the end, I\u2019ll demo how SHARQ works.  </p>\n<h3>Benchmarks, Production Metrics &amp; Limitations</h3>\n<p>This section will cover some of the benchmarks of SHARQ and its analysis, some metrics from our deployment of SHARQ in production. We\u2019ll also discuss when to use SHARQ and some ideas on how to make it scalable and highly available.  </p>\n<h3>Q&amp;A</h3>\n<p>Discussion with the audience and answering any questions.  </p>",
      "confirmed": true,
      "slides": "",
      "phone": null,
      "name": "245-sharq-an-api-queueing-system-built-at-plivo",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/245-sharq-an-api-queueing-system-built-at-plivo",
      "submitted": "2014-05-30T13:33:30.264798Z"
    },
    {
      "links": "https://slides.com/gvrv\r\nhttps://www.youtube.com/watch?v=7cuQEOP7BsA\r\nhttps://twitter.com/GVRV",
      "proposer": "Gaurav Dadhania",
      "votes_count": null,
      "comments": 0,
      "id": 244,
      "votes": 7,
      "requirements": "",
      "title": "Django Testing: As easy as 1,2,3",
      "section": "Web Development",
      "votes_groups": null,
      "speaker": "Gaurav Dadhania",
      "objective": "<p>Django testing <em>is</em> easy, there's official docs for it that you can skim through in a couple of hours and start using within a day. But what happens as your project grows? What testing patterns stand the test of time? Which libraries should you use to help you test faster and better? Can you handle the embarrassment of having a production \"fail whale\"? Does <code>git blame</code> keep you up at night?  </p>\n<p><strong>THEN THIS TALK IS FOR <em>YOU</em>!</strong></p>\n<p>Let's look at a few tools, some proven testing strategies and have a small discussion about our battle wounds, so we emerge stronger and our builds, greener!</p>",
      "type": "",
      "email": null,
      "bio": "<p>Gaurav is a code connoisseur at CommonCode, where he works with clients like Kogan Australia and CottonOn. He thinks he's fluent in Python and JavaScript. In the past, he has been lucky enough to talk at PyCon Australia and multiple MelbDjango meetups. He likes GIFs.  </p>\n<p>He's not sure whether he should be writing this in the third-person.</p>",
      "description": "<p>Let's get the ball rolling by summarizing Django test docs including:  </p>\n<ul>\n<li>\n<p>Using the Django test client </p>\n</li>\n<li>\n<p>Test runners and which one to use (if not the default?!)</p>\n</li>\n<li>\n<p>Fixtures and why they suck! </p>\n</li>\n</ul>\n<p>Then we'll look at 3 libraries that will make you a testing superhero(ine)!:  </p>\n<ul>\n<li>\n<p>Behave</p>\n</li>\n<li>\n<p>BDD and specs as tests</p>\n</li>\n<li>\n<p>powered by Selenium (look at VMs, BrowserStack and PhantomJS)</p>\n</li>\n<li>\n<p>FactoryBoy</p>\n</li>\n<li>\n<p>What it is and how it works </p>\n</li>\n<li>\n<p>Why is it better than using fixtures</p>\n</li>\n<li>\n<p>Mock</p>\n</li>\n<li>\n<p>Why mocking is a good idea (aka \"build shouldn't be red cause there's no internet\")</p>\n</li>\n<li>\n<p>libraries built on mock like dropbox/responses and examples of using mock to test functions with side-effects </p>\n</li>\n</ul>\n<p>We'll end the session with a short Q&amp;A about testing and loud, thunderous applause. </p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "244-django-testing-as-easy-as-1-2-3",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/244-django-testing-as-easy-as-1-2-3",
      "submitted": "2014-05-30T13:30:33.427181Z"
    },
    {
      "links": "http://ckan.org\r\nhttp://github.com/ckan/ckan\r\nhttp://nigelb.me/talks.html",
      "proposer": "Nigel Babu",
      "votes_count": null,
      "comments": 1,
      "id": 243,
      "votes": 7,
      "requirements": "<ul>\n<li>Understanding of Python.</li>\n<li>Experience with MVC</li>\n</ul>",
      "title": "The darkest secrets of CKAN",
      "section": "Web Development",
      "votes_groups": null,
      "speaker": "Nigel Babu",
      "objective": "<p>Understand the architecture of CKAN -- the good decisions and the bad ideas.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Nigel is a web developer working out of Bangalore, India. During the day he works as a core developer on <a href=\"https://ckan.org\">CKAN</a>, conducts CKAN trainings around the world, and helps the Open Knowledge sysadmin team.  </p>\n<p>He loves open source as it enables him to contribute to an ever-growing intellectual pool of knowledge. When he isn't writing code for Open Knowledge, he likes to cook, play with his Raspberry Pi, or contribute to Mozilla. Nobody is sure if he actually ever sleeps.</p>",
      "description": "<p><a href=\"http://github.com/ckan/ckan\">CKAN</a> is the most widely used open source data portals around. It powers, among others, <a href=\"https://data.gov\">data.gov</a>, <a href=\"http://data.gov.uk\">data.gov.uk</a> and various other data portals around the world. This talk will be about the architecture of CKAN. Various decisions have been made in the past -- both good and bad. I'll be focusing on what we've learned from how we built CKAN and continue to do so.</p>\n<ul>\n<li>Shared logic layer for API and controllers.</li>\n</ul>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "243-the-darkest-secrets-of-ckan",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/243-the-darkest-secrets-of-ckan",
      "submitted": "2014-05-30T13:25:12.439346Z"
    },
    {
      "links": "",
      "proposer": "Bhupendra Singh",
      "votes_count": null,
      "comments": 5,
      "id": 242,
      "votes": 18,
      "requirements": "",
      "title": "Infrastructure automation using open source python components",
      "section": "Infrastructure",
      "votes_groups": null,
      "speaker": "Bhupendra Singh",
      "objective": "<p>Linkedin has a large network infrastructure supporting applications serving millions of customers. Python and its large set of modules have played a big role in managing this fast growing infrastructure. This talk will give an insight into the automation system built to manage it.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Pradeep Hodigere has been working in the infrastructure management space, at companies with massive infrastructure, building systems that manage the application, systems and network tiers. Currently, he is leading network infrastructure automation at linkedin using python and related open source components.</p>",
      "description": "<p>Linkedin is one of the fastest growing internet companies. In our<br>\nenvironment, each day brings a new challenge. This provides a unique opportunity where one the one hand, the day-job demands keeping the 'lights on' by attending to infrastructure issues and then spend the rest of the day, thinking of the next bottleneck in the infrastructure that needs to be scaled.  </p>\n<p>With Python and its vast resource of libraries around open source<br>\nutilities like celery, redis, flask, queuing and multiprocessing solutions, we have developed a platform that:<br>\n1. Manages configuration of a heterogeneous infrastructure.<br>\n2. Keeps track of a constantly changing configuration.<br>\n3. Automatically updates the system monitoring this elastic infrastructure.<br>\n4. Provides a data-analysis platform that identifies operational issues<br>\nclose to real-time and provides capacity models for architects to scale<br>\nthis infrastructure.<br>\n5. Visualization tools that aggregates millions of data-points, identify anomolies and generate highly customized UI's which has enabled operations to continually reduce MTTD and MTTR.  </p>\n<p>This has helped a lean infrastructure team to keep up with its<br>\nexponential growth.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "242-infrastructure-automation-using-open-source-python-components",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/242-infrastructure-automation-using-open-source-python-components",
      "submitted": "2014-05-30T12:43:50.891011Z"
    },
    {
      "links": "",
      "proposer": "Abhishek Ghose",
      "votes_count": null,
      "comments": 2,
      "id": 241,
      "votes": 32,
      "requirements": "<p>A basic understanding of Python.</p>",
      "title": "Generators and Coroutines",
      "section": "Core Python",
      "votes_groups": null,
      "speaker": "Abhishek Ghose",
      "objective": "<p>You will learn about Python generators and coroutines (fun stuff, really!)</p>",
      "type": "",
      "email": null,
      "bio": "<p>I am a Data Scientist at [24]7 (http://www.247-inc.com/). My work involves using Machine Learning to model data. This includes implementing tools/libraries for internal use which can simplify working with certain kinds of data/algorithms. Python is a popular choice in our group since it helps us prototype ideas quickly.  </p>\n<p>Bio on LinkedIn: <a href=\"https://www.linkedin.com/profile/view?id=86003065\">https://www.linkedin.com/profile/view?id=86003065</a> </p>",
      "description": "<p>In this session I would look at a couple of relatively less used features of Python - generators and coroutines.<br>\nThis would be the break-up of the talk:  </p>\n<ol>\n<li>\n<p>Intro: A broad view of the general idea, which is a superset of the implementation Python has. Here is how Knuth, very aptly, describes them: \"Subroutines are special cases of more general program components, called \"coroutines\". In contrast to the unsymmetric relationship between a main routine and a subroutine, there is complete symmetry between coroutines , which call on each other.\"*  </p>\n</li>\n<li>\n<p>Syntax and syntactical nuances  </p>\n</li>\n<li>\n<p>Some smallish examples to make their usage clear. We would see how using this features can help us setup \"pipelines\" to implement data pipelines, and in general, producer-consumer type scenarios, help us in thinking in a \"declarative\" manner, where (and if) they save in memory and computation, etc.  </p>\n</li>\n<li>\n<p>We would look at some \"real-world\" code snippets (i.e. from existing libraries) where these features have been used. I have not decided on the libraries yet but I'll probably pick something like gevent, psycopg2 etc  </p>\n</li>\n</ol>\n<p>*from Sec 1.4.2, The Art of Computer Programming, Vol 1, by Donald Knuth.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "241-generators-and-coroutines",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/241-generators-and-coroutines",
      "submitted": "2014-05-30T11:57:12.900423Z"
    },
    {
      "links": "http://bit.ly/gsoc14_proposal\r\nhttp://bit.ly/1oQGuBO\r\nhttp://leap.se/\r\nGithub - http://github.com/indradhanush/\r\nhttp://linkd.in/1fsBkLs\r\nBlog - http://indradhanush.github.io/",
      "proposer": "Indradhanush Gupta",
      "votes_count": null,
      "comments": 0,
      "id": 236,
      "votes": -18,
      "requirements": "<p>Interested to contribute to open source.</p>",
      "title": "My GSoC Journey with Python and ZeroMQ",
      "section": "Software Development Tools",
      "votes_groups": null,
      "speaker": "Indradhanush Gupta",
      "objective": "<p>I would like to share my experiences in working full time for an Open Source project as a student developer under Google Summer of Code 2014.  This is the first time I have been part of an Open Source project at such a large scale. I would like to share what I learned about contributing to open source.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I will pass out of my B.Tech in June this year. I have been selected as a student to this year's Google Summer of Code. In the past I have interned at Plivo and Vaultize. I am a passionate programmer and mostly interested in Networking and Security. </p>",
      "description": "<p>Will tell the audience about -  </p>\n<ul>\n<li>\n<p><a href=\"http://leap.se/\"><strong>LEAP</strong></a> - The mentoring organization. LEAP Encryption Access Project are a non-profit organization that provide its users with an easy-to-set-up platform that provides secure communications.</p>\n</li>\n<li>\n<p><strong>My Summer Project - Writing an alternate transport for U1DB sync protocol using ZeroMQ - An asynchronous messaging framework in Python.</strong> U1DB, a database API for maintaining synchronized documents across multiple devices uses HTTP for its sync protocol, which isn't the best solution, as it maintains multiple keep-alive requests, isn't ideal for low-bandwidths and not very scalable. Thus, this summer I am working on replacing this with a transport written in ZeroMQ from scratch. Right from the system architecture to the actual protocol that will do the sync.</p>\n</li>\n<li>\n<p><strong>Challenges and design decisions. Why X was done and why Y was not done.</strong> Two weeks into the coding period and there already has been a lot of discussion with my mentor regarding the design of the system. I would like to share this with the audience and tell them the reason why a particular architecture design was found suitable or why one wasn't. I will share with the audience the occassional snags that we kept hitting and how we went around them.</p>\n</li>\n<li>\n<p><strong>What I learned with Open Source:</strong> I would like to discuss about how to commit code for easier code review, why following a good branching model makes it easier for everyone involved in the project. What steps should be taken for the time that it takes a new contributor to ease in to the development process? I willl also share how contributing doesn not only mean writing code. Why it also includes writing extensive documentation and test. A lot of them.</p>\n</li>\n</ul>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "236-my-gsoc-journey-with-python-and-zeromq",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/236-my-gsoc-journey-with-python-and-zeromq",
      "submitted": "2014-05-30T11:16:56.964155Z"
    },
    {
      "links": "https://speakerdeck.com/sanketsaurav/package-and-distribute-your-python-code\r\nhttp://campushash.com/\r\nhttp://github.com/sanketsaurav\r\n",
      "proposer": "Sanket Saurav",
      "votes_count": null,
      "comments": 0,
      "id": 235,
      "votes": 4,
      "requirements": "<ul>\n<li>\n<p>A laptop with your favorite OS. I'll be using <a href=\"http://www.ubuntu.com\">my favorite GNU/Linux distro</a>, though.</p>\n</li>\n<li>\n<p>Python 2.7.x. You can get it from <a href=\"http://python.org/download/\">here</a> in case you're on Windows.</p>\n</li>\n<li>\n<p>Internet connection, so you can install <a href=\"http://pip.readthedocs.org/en/latest/\">pip</a>, <a href=\"https://www.djangoproject.com/\">django</a>, <a href=\"http://tastypieapi.org/\">tastypie</a>, etc.</p>\n</li>\n<li>\n<p>Your favorite text editor. <a href=\"http://www.sublimetext.com/3\">Mine's</a> better than yours, though.</p>\n</li>\n</ul>",
      "title": "RESTful APIs with Tastypie",
      "section": "Web Development",
      "votes_groups": null,
      "speaker": "Sanket Saurav",
      "objective": "<p>The attendees would learn how to implement a <a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer\">RESTful</a> API for a <a href=\"https://www.djangoproject.com/\">django</a>-powered web application.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I love Python, the Web and speaking. I've been speaking at workshops across the country on Python and web applications development for over a year now. I'm a co-founder of <a href=\"http://campushash.com\">CampusHash</a> where we are building an advanced talent assessment and discovery platform. Our current stack runs Django and we use Tastypie as our REST API provider. On weekends, I try to solve small, real problems through my side-projects mostly in Python. You can peek a look at them <a href=\"http://github.com/sanketsaurav\">here</a>.</p>",
      "description": "<p><a href=\"http://tastypieapi.org/\">Tastypie</a> is a webservice API framework for Django. It provides a convenient, yet powerful and highly customizable abstraction for creating REST-style interfaces.</p>\n<p>This session focuses on getting a fully-functional, production-ready RESTful API for a sample Django application up and running. The major topics covered are:  </p>\n<ul>\n<li>\n<p>Installing and configuring djando-tastypie with your Django project</p>\n</li>\n<li>\n<p>Creating customized resources to interact with the models</p>\n</li>\n<li>\n<p>Adding different types of authentication and authorization to the API</p>\n</li>\n<li>\n<p>Customizing bundles before serving the resources</p>\n</li>\n<li>\n<p>Adding caching, validation, and pagination</p>\n</li>\n<li>\n<p>Working with Foreign Key fields on resources</p>\n</li>\n</ul>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "235-restful-apis-with-tastypie",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/235-restful-apis-with-tastypie",
      "submitted": "2014-05-30T10:40:55.589130Z"
    },
    {
      "links": "",
      "proposer": "Vishal Kanaujia",
      "votes_count": null,
      "comments": 1,
      "id": 234,
      "votes": 2,
      "requirements": "<p>Basic understanding of storage systems, databases  </p>",
      "title": "NoSQL storage solutions for enterprise class applications",
      "section": "Web Development",
      "votes_groups": null,
      "speaker": "Vishal Kanaujia",
      "objective": "<p>Enterprise applications have distinguished requirements for persistent data storage. It includes high availability, data integrity, scalability and performance. Traditional relational data stores are struggling to meet requirements and use cases of modern applications, especially class of e-commerce, multimedia and social media applications.  </p>\n<p>NoSQL storage offers simple, efficient and feature-rich solutions for enterprise class applications.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Vishal Kanaujia is a Python developer and technology enthusiast. He has delivered talks and written articles on Python. He has been a speaker at Pycon New Zealand, PyCon APAC, PyCon India and SciPy India.  </p>\n<p>He has interest in fields including Python internals, storage systems, Filesystems, and search technologies, and application performance optimization.  </p>\n<p>Open source projects<br>\n    seFS (https://github.com/cjgiridhar/seFS)\n    pyrebootops (https://github.com/cjgiridhar/pyrebootops/)</p>\n<p>Talks<br>\n- Dissecting memory mysteries of Python, PyCon New Zealand, India 2013\n- FUSEing Python for rapid development of storage efficient file system, PyCon APAC, 2012, Singapore \n- Rapid development of website search in Python, PyCon India, 2012</p>\n<p>Website<br>\n- <a href=\"http://freethreads.wordpress.com/\">http://freethreads.wordpress.com/</a></p>\n<h1>Co-Speaker</h1>\n<p>Chetan Giridhar is a Python developer and open source enthusiast. He works as a Lead Engineer &amp; Evangelist at BlueJeans Network and is an associate editor at The Python Papers. He has delivered talks and written articles on Python in magazines.  </p>\n<p>Talks<br>\n1. FUSEing Python for rapid development of storage efficient file system, PyCon APAC, June 2012<br>\n2. Rapid development of website search in Python, PyCon India, September 2012<br>\n3.\u2018Python threads: Dive into GIL!\u2019, PyCon India, Sept 2011</p>",
      "description": "<p>We evaluate NoSQL persistent data store and understand architecture and design of popular, open-source NoSQL databases (MongoDB, CouchDB, RiakDB). We compare them based on various parameters including performance, scalability, suitability for real time applications. We present examples of integrating these data stores with your Python applications. Next, we would share our recommendations and learning to help you decide what suits your business and technical requirements.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "234-nosql-storage-solutions-for-enterprise-class-applications",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/234-nosql-storage-solutions-for-enterprise-class-applications",
      "submitted": "2014-05-30T10:17:22.422425Z"
    },
    {
      "links": "https://wiki.mozilla.org/Abhishek/IMS_Gsoc2014Proposal\r\n\r\nLink to PyTango (Python bindings for Tango server)\r\nhttp://www.tango-controls.org/static/PyTango/latest/doc/html/index.html\r\n\r\nLink to blender python bindings : \r\nhttp://wiki.blender.org/index.php/Doc:2.4/Manual/Extensions/Python\r\nhttp://www.blender.org/documentation/blender_python_api_2_70_release/contents.html",
      "proposer": "Abhishek Kumar Singh",
      "votes_count": null,
      "comments": 3,
      "id": 233,
      "votes": 12,
      "requirements": "<p>Nothing apart from presence of active listeners.</p>",
      "title": "Full body and hands gesture tracking",
      "section": "Software Development Tools",
      "votes_groups": null,
      "speaker": "Abhishek Kumar Singh",
      "objective": "<ul>\n<li>\n<p>It helps people to develop motion and gestures tracking multiplayer applications. </p>\n</li>\n<li>\n<p>This talk presents a brief introduction on OpenNI, Tango server and blender game engine</p>\n</li>\n</ul>",
      "type": "",
      "email": null,
      "bio": "<p>Speaker is passionate about open source technologies and an active open source contributor. A Graduate in Computer Science and Engineering major from Amrita university and also a 2014 GSoCer.  </p>\n<p>He has been working on this project with IMS (Italian Mars Society) as a part of my GSoC(Google Summer of Code) project. He has experience with computer vision and Kinect technology as his final year project was also a part of it. </p>",
      "description": "<p>This is my GSoC project that deals with integration of whole body motion and hand gesture tracking of astronauts to ERAS(European MaRs Analogue Station for Advanced Technologies Integration) virtual station. Skeleton tracking based feature extraction methods will be used for tracking whole body movements and hand gestures, which will have a visible representation in terms of the astronaut avatar moving in the virtual ERAS Station environment.  </p>\n<p>It will help astronauts in getting familiar with the their habitat/station, the procedures to enter/leave it, the communication with other astronauts and rovers, etc. Thus preparing themselves by getting a before hand training in the Virtual environment will boost their confidence and will reduce chances of failures to great extent, ultimately resulting in increase in the success rate of the mission.  </p>\n<p>This talk will focuses on developing motion tracking applications. Also demo of work done will be shown.  </p>\n<h2>Benifits :</h2>\n<ul>\n<li>Audience will learn how to use OpenNI+NITE python bindings to track a Skeleton.</li>\n<li>How to publish Skeleton data on Tango server(a cross platform distributed system) so that other client applicatoin can use that data</li>\n<li>How to write a blender client which uses these data to map them to a model(here astronaut's avatar)</li>\n<li>Eventually avatar in virtual environment will be controlled by the user body gestures in real world.</li>\n</ul>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "233-full-body-and-hands-gesture-tracking",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/233-full-body-and-hands-gesture-tracking",
      "submitted": "2014-05-30T10:13:35.119908Z"
    },
    {
      "links": "",
      "proposer": "Nitin Rathi",
      "votes_count": null,
      "comments": 4,
      "id": 232,
      "votes": 11,
      "requirements": "<p>GDB configured using --with-python.  </p>",
      "title": "Extending GDB with Python",
      "section": "Software Development Tools",
      "votes_groups": null,
      "speaker": "Nitin Rathi",
      "objective": "<p>GNU Debugger provides facility to manipulate and monitor values of a program's internal variables. In this talk we will use python to extend its capabilities to write custom commands and extensions for GDB.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I am currently working with the Electronic Arts, India. I have been using python for past 4 years.</p>",
      "description": "<ol>\n<li>Access frames using python and do magic on them.  </li>\n<li>We will write our own Pretty-Printer.  </li>\n<li>We will write our own custom commands.  </li>\n<li>Changing name of existing commands in GDB  </li>\n<li>Adding new GDB parameters.</li>\n</ol>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "232-extending-gdb-with-python",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/232-extending-gdb-with-python",
      "submitted": "2014-05-30T10:12:15.876570Z"
    },
    {
      "links": "http://sosaysharis.wordpress.com/\r\n\r\nhttp://twitter.com/harisibrahimkv\r\n\r\nhttp://sosaysharis.wordpress.com/2014/06/29/an-introduction-to-redis-pycon-singapore-2014/",
      "proposer": "Haris Ibrahim K. V.",
      "votes_count": null,
      "comments": 2,
      "id": 231,
      "votes": 24,
      "requirements": "<p>Basic Python programming experience.</p>",
      "title": "Python - Under the hood.",
      "section": "Core Python",
      "votes_groups": null,
      "speaker": "Haris Ibrahim K. V.",
      "objective": "<p>To teach what happens under the hood when a Python script is being run. After all, the simplicity must come with some cost.</p>",
      "type": "",
      "email": null,
      "bio": "<p>A struggling writer by passion and a Computer Science Engineer by profession.  </p>\n<p>I work as a Python programmer since November'13 at Eventifier (http://eventifier.com/).  </p>\n<p>I have only been using Python extensively since the past 8 months. Hence the topic I have proposed is something I am currently learning and digging deep into.  </p>\n<p>I gave a talk on \"Redis - What, Why and Where\" at PyCon Singapore in June 2014 which I have linked to below.</p>",
      "description": "<p>\"Getting things done\" comes at a cost. Even though we have enormous computing power, sometimes the abstraction just leaks. Of course, it does not matter most of the times, but as an Engineer, understanding how much of your actual troubles are being taken care of by an abstraction, is necessary to know.</p>\n<p>This talk is expected to cover how Python manages memory and what are the common things that a developer overlooks while comfortbaly coding away.  </p>\n<p>We will look at live examples of how much memory a particular python program would use and talk about why and how the memory is being allocated in such a fashion.  </p>\n<p>It will be mostly presented in a dissected format where we will look at particular data structures and data types; how much memory they consume.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "231-python-under-the-hood",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/231-python-under-the-hood",
      "submitted": "2014-05-30T09:58:51.293007Z"
    },
    {
      "links": "fsMgr - FileSystem Search Manager - Tornado and Whoosh (https://github.com/cjgiridhar/fsMgr)\r\n\r\nseFS - Storage Efficient file system - Python fuse (https://github.com/cjgiridhar/seFS)",
      "proposer": "Chetan Giridhar",
      "votes_count": null,
      "comments": 0,
      "id": 230,
      "votes": 23,
      "requirements": "<p>Python basics, some understanding of threads/processes. Prior experience in other languages suitabel</p>",
      "title": "Async Programming and Python",
      "section": "Core Python",
      "votes_groups": null,
      "speaker": "Chetan Giridhar",
      "objective": "<p><em>Speakers: Chetan Giridhar &amp; Vishal Kanaujia</em></p>\n<p>Python multi-threading implementation has always been under a scanner, thanks to the infamous GIL. Because Python applications with multi-threading result in performance hit (especially on multi-cores), asynchronous programming might help.  </p>",
      "type": "",
      "email": null,
      "bio": "<p>Chetan Giridhar is a Python developer and open source enthusiast. He works as a Lead Engineer &amp; Evangelist at BlueJeans Network and is an associate editor at The Python Papers. He has delivered talks and written articles on Python in magazines.  </p>\n<p>Talks<br>\n1. FUSEing Python for rapid development of storage efficient file system, PyCon APAC, June 2012<br>\n2. Rapid development of website search in Python, PyCon India, September 2012<br>\n3.\u2018Python threads: Dive into GIL!\u2019, PyCon India, Sept 2011  </p>\n<p>=========================</p>\n<p>Vishal Kanaujia is a Python developer and technology enthusiast. He has delivered talks and written articles on Python. He has been a speaker at Pycon New Zealand, PyCon APAC, PyCon India and SciPy India.  </p>\n<p>He has interest in fields including Python internals, storage systems, Filesystems, and search technologies, and application performance optimization.  </p>\n<p>Open source projects<br>\nseFS (https://github.com/cjgiridhar/seFS) pyrebootops (https://github.com/cjgiridhar/pyrebootops/)  </p>\n<p>Talks<br>\n- Dissecting memory mysteries of Python, PyCon New Zealand, India 2013 - FUSEing Python for rapid development of storage efficient file system, PyCon APAC, 2012, Singapore - Rapid development of website search in Python, PyCon India, 2012</p>\n<p>Website<br>\n- <a href=\"http://freethreads.wordpress.com/\">http://freethreads.wordpress.com/</a></p>",
      "description": "<ol>\n<li>Talk starts with a brief summary of Gil and it's side effects  </li>\n<li>Describes Async programming and how it's relevant for Python  </li>\n<li>Take an overview of some of the Python modules that can be leveraged for Async applications  </li>\n<li>Compare asynchronous constructs of Python to that of modern languages such as Javascript with few examples  </li>\n<li>Implement these concepts and demonstrate with a demo application </li>\n</ol>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "230-async-programming-and-python",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/230-async-programming-and-python",
      "submitted": "2014-05-30T09:17:06.831484Z"
    },
    {
      "links": "",
      "proposer": "Prateek Mittal",
      "votes_count": null,
      "comments": 0,
      "id": 229,
      "votes": -1,
      "requirements": "<p>Laptop  </p>\n<p>Internet Connection  </p>\n<p>Optional: Understanding of Django Framework  </p>",
      "title": "How to setup a Free AWS with Python, Django, Apache to host a Website",
      "section": "Workshops",
      "votes_groups": null,
      "speaker": "Prateek Mittal",
      "objective": "<p>This workshop is directed to host your website for Free on Reliable AWS with Django, Apache and Mod_WSGI Installation and Configuration</p>",
      "type": "",
      "email": null,
      "bio": "<p>I am currently working with the Dell R&amp;D, using Python for Automation efforts. I have successfully hosted few Dynamic websites using Django and AWS.</p>",
      "description": "<p>Want to use or already Using Django and Python for your website ? Need to Host your Website and Don't know How ? If answers of above questions are yes. This workshop can help you in doing exactly by talking about and showing demo :-<br>\n1. Setting up a LINUX Amazon Free Server<br>\n2. Install Django, Apache, Mod_wsgi.<br>\n3. Configuring Apache, Mod_wsgi for handling the requests<br>\n4. Configuring AWS for DNS hosting  </p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "229-how-to-setup-a-free-aws-with-python-django-apache-to-host-a-website",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/229-how-to-setup-a-free-aws-with-python-django-apache-to-host-a-website",
      "submitted": "2014-05-30T09:02:06.273847Z"
    },
    {
      "links": "technosrix.com\r\n",
      "proposer": "Sriramkumar vh",
      "votes_count": null,
      "comments": 0,
      "id": 228,
      "votes": 1,
      "requirements": "<p>Linux system with python.<br>\nbasic knowledge on python, shell scripting  </p>",
      "title": "Robotframework - Python automation made simple",
      "section": "Workshops",
      "votes_groups": null,
      "speaker": "Sriramkumar vh",
      "objective": "<p>Automate software testing, deployment<br>\nUnderstand Keydriven testing and data driven testing using examples.<br>\nCompare KDT and DDT testcases with manual testcases<br>\nWalkthrough on KDT and DDT using Robot framework.<br>\nExtending Robotframework to support any language or tools like sikuli </p>",
      "type": "",
      "email": null,
      "bio": "<p>Founder and CEO of Watchy Technology pvt ltd. [www.watchy.in] . Before Watchy I had worked with Tektronics, Motorola and SIFY. Had designed and developed test automation framework internally used in Tektronics . Also blog on technology in www.technosrix.com </p>",
      "description": "<p>Automation driven testing is important to improve prodcutivity. The workshop compares the manual testing workflow to KDT,DDT and BDT. illustrates the best practises to write them with example. Then explains how to automate the testcase using python as well as other language and tools.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "228-robotframework-python-automation-made-simple",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/228-robotframework-python-automation-made-simple",
      "submitted": "2014-05-30T08:28:13.156269Z"
    },
    {
      "links": "My website http://arunrocks.com contains several articles and tutorials on Python and Django.\r\n\r\nMy last year's Pycon talk is here (along with links to my other talks): \r\n\r\nhttp://in.pycon.org/funnel/2013/59-django-beyond-basics\r\nhttps://www.youtube.com/watch?v=_PBvld1CuGU\r\n",
      "proposer": "Arun Ravindran",
      "votes_count": null,
      "comments": 7,
      "id": 227,
      "votes": 35,
      "requirements": "<p>Must have completed some introductory tutorial on Django. Intermediate to advanced Django programmers would greatly benefit from this talk.</p>",
      "title": "Django Design Patterns",
      "section": "Web Development",
      "votes_groups": null,
      "speaker": "Arun Ravindran",
      "objective": "<p>To explain the various design patterns that Django programmers use and prevent reinventing the wheel in each of your projects. Takeaways of this talk would be to know the answers to:  </p>\n<ol>\n<li>What are the current best practices in Django and what are not?  </li>\n<li>Which are most common and useful design patterns?  </li>\n<li>How to identify and implement these patterns?</li>\n</ol>",
      "type": "",
      "email": null,
      "bio": "<p>I have been tinkering with Django since 2007 for several projects ranging from simple intranet applications to social networks. I have given numerous talks and tutorials on Django at several forums. My Django articles and screencasts have been spotted on the front pages of Hacker News, Reddit etc and have been well received by the open source community.</p>",
      "description": "<p>Design Patterns are patterns we see and code in almost every Django projects. They are scenarios for which we wished had a canonical and elegant solution.  </p>\n<p>Based on the seminal work on design patterns in the Gang of Four book and Martin Fowler's book, the talk takes you through several well known design patterns to improve your Django code. It might also cover several new patterns in web application development that you can apply to other frameworks.  </p>\n<p>Will talk about some real design challenges we faced when an application evolves such as refactoring legacy code and APIs. Will also talk about the criticisms of the framework itself.</p>",
      "confirmed": true,
      "slides": "",
      "phone": null,
      "name": "227-django-design-patterns",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/227-django-design-patterns",
      "submitted": "2014-05-30T08:24:35.915395Z"
    },
    {
      "links": "",
      "proposer": "swaroop",
      "votes_count": null,
      "comments": 4,
      "id": 226,
      "votes": 24,
      "requirements": "",
      "title": "Building Recommender system",
      "section": "Scientific Computing",
      "votes_groups": null,
      "speaker": "swaroop",
      "objective": "<p>Will talk about classical and state-of-the-art recommender systems. The audience will also get a flavour of the mathematical computations that go into recommender systems.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Currently working as a Senior Analyst at TCS R&amp;D. Over 4 years of experience in analytics, passionate about Data Mining, Modelling &amp; number driven predictive analytics. </p>",
      "description": "<p>One of the key events that energized research in recommender systems was the Netflix prize. Netflix sponsored a competition, that could take an offered dataset of over 100 million movie ratings and return recommendations that were 10% more accurate than those offered by the company's existing recommender system.  </p>\n<p>Recommender systems typically produce a list of recommendations in one of two ways - through collaborative or content-based filtering. Would like to cover both of them with the implementation and mathematics involved.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "226-building-recommender-system",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/226-building-recommender-system",
      "submitted": "2014-05-30T07:52:50.246483Z"
    },
    {
      "links": "",
      "proposer": "Maninya M",
      "votes_count": null,
      "comments": 0,
      "id": 225,
      "votes": 7,
      "requirements": "",
      "title": "Which Python binding library should you use?",
      "section": "Core Python",
      "votes_groups": null,
      "speaker": null,
      "objective": "<p>This talk introduces the audience to the notion of writing high performance code in C/C++ and then exposing it to Python through different techniques.  </p>\n<h2>Audience</h2>\n<p>Developers interested in integrating Python with C/C++ libraries.</p>",
      "type": "",
      "email": null,
      "bio": "<p><a href=\"https://www.linkedin.com/profile/view?id=6615598\">Satheesh Subramanian</a> heads the Research &amp; Development department at DreamWorks Animation in Bangalore.  He leads a dev team that works on various different aspects of movie making - a lighting software, an animation software and asset management/web-service, etc.</p>",
      "description": "<p>Writing Python bindings for a C/C++ library is about providing the ease of use of a very high-level, compact language to it, while still keeping the benefits of speed of the C library. However, choosing the right binding libraries for your application could affect how you get the benefits of both languages. So which do you choose: Boost::Python? SWIG? SIP? Or just be rigorous and use the Python/C API?  </p>\n<h2>Detailed Abstract</h2>\n<p>Choosing a Python binding library for your application requires a good knowledge of:<br>\n1) How the application or software has been written - what data structures does it use? How are the classes and functions? How does the application scale?<br>\n2) What is important for the application - Is it speed/performance? Scalability? Accuracy?<br>\n3) What are the Python binding libraries out there, and what do they have to offer?<br>\n4) Which one will work best for your application?  </p>\n<p>Writing extension modules for your C/C++ libraries is a trade-off between using tools to simply generate a thin wrapper without much abstraction - this would work brilliantly for functions that you can write only in one way, and using these tools to produce a more intelligent wrapper, that would use the usual idioms/practices that are prevalent in Python. A more sophisticated wrapper would make useful abstractions between the C API and the Python API, while still maintaining most functionality in the C API.  </p>\n<h2>Outline</h2>\n<ul>\n<li>From C++ to Python using Python C API, Boost::Python, Swig or Sip. (10 min)</li>\n<li>Why would anyone want to do that (5 min)</li>\n<li>Basics of Python C API (15 min)</li>\n<li>Classes and objects binding (5 min)</li>\n<li>Garbage collection (5 min)</li>\n<li>Life of a bound object  (5 min)</li>\n<li>To Boost::Python or to Sip (10 min)</li>\n<li>Questions (5 min)</li>\n</ul>\n<p><strong>Duration:</strong>: 1 hour</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "225-which-python-binding-library-should-you-use",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/225-which-python-binding-library-should-you-use",
      "submitted": "2014-05-30T02:50:51.605539Z"
    },
    {
      "links": "",
      "proposer": "Utkarsh Sinha",
      "votes_count": null,
      "comments": 0,
      "id": 224,
      "votes": 12,
      "requirements": "",
      "title": "Transfer Pipeline at DreamWorks",
      "section": "Core Python",
      "votes_groups": null,
      "speaker": "Utkarsh Sinha",
      "objective": "<p>Attendees will get to learn how a real world movie making problem was solved using Python, the technologies behind it and the challenges we faced building it.</p>",
      "type": "",
      "email": null,
      "bio": "<p><a href=\"https://www.linkedin.com/profile/view?id=26516438\">Jeffrey Jose</a> has been working with DreamWorks Animation for almost 6 years now. He was part of the original dev team and has contributed extensively to the project. He continues to contribute to it even now.</p>\n<p><a href=\"https://www.linkedin.com/profile/view?id=42850495\">Utkarsh Sinha</a> has been working with DreamWorks Animation for almost 3 years now. He has been actively adding features and upgrading functinonality to meet challenges posed by upcoming movies.</p>",
      "description": "<p>Making an animated movie involves a lot of data. Moving this data between the 3 studios of DreamWorks (Los Angeles, San Francisco and Bangalore) requires a dedicated and robust pipeline.  </p>\n<p>Currently deployed on all movies that DreamWorks is making, Transfer Pipeline is a product of the Bangalore Studio and has revolutionized the way DreamWorks makes movies.  </p>\n<h2>Audience</h2>\n<p>Developers interested in knowing how Python is solving a very real problem for movie making.  </p>\n<h2>Detailed abstract</h2>\n<p>Movie making is a team game. It doesnt help when half of your team is on the other side of the world. Bridging the gap between creative people is an entirely technical challenge.  </p>\n<h3>Why we need Transfer Pipeline</h3>\n<p>Movie making data can be roughly categorized into 2. Source data (like models, maps, curves) and output data (images, movies etc). At any moment of time, artists expect all of these to be available locally for interactive work or playback.  </p>\n<p>Moving these heavy data wasnt much of a problem when DreamWorks had just 2 studios (in Los Angeles and San Francisco) thanks to a low-latency network.  </p>\n<p>When DreamWorks started the Bangalore studio, the distance forced us to come up with a comprehensive solution that would layer on top of the existing pipeline but still allowing the artists and creative heads the expressiveness and interactivity they are used to between Los Angeles and San Francisco.  </p>\n<h3>Why Python?</h3>\n<p>The dynamic nature of python helped us rapidly prototype and deploy early versions of the tool while the movie was still getting made.  </p>\n<p>Batteries included nature of Python ensured that people who are developing the service, often having production responsibilities, spent time only on design and architecture and less on coding/programming.  </p>\n<h2>Outline</h2>\n<ul>\n<li>Why we need a file mover</li>\n<li>Design</li>\n<li>The code base</li>\n<li>Technologies used</li>\n<li>Future challenges</li>\n<li>Questions?</li>\n</ul>\n<p><strong>Duration:</strong>: 1 hour</p>",
      "confirmed": true,
      "slides": "",
      "phone": null,
      "name": "224-transfer-pipeline-at-dreamworks",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/224-transfer-pipeline-at-dreamworks",
      "submitted": "2014-05-30T02:33:31.276298Z"
    },
    {
      "links": "",
      "proposer": "Utkarsh Sinha",
      "votes_count": null,
      "comments": 0,
      "id": 223,
      "votes": -1,
      "requirements": "",
      "title": "Python helps make movies at DreamWorks",
      "section": "Core Python",
      "votes_groups": null,
      "speaker": null,
      "objective": "<p>Attendees will get to learn how python gets used to enable artists and production to make and deliver compelling stories and stunning images.</p>",
      "type": "",
      "email": null,
      "bio": "<p><a href=\"https://www.linkedin.com/profile/view?id=26516438\">Jeffrey Jose</a> has been working with DreamWorks Animation for almost 6 years now. He's been the Lead Technical Director shows like Mr. Peabody &amp; Sherman and How to train your Dragon 2</p>",
      "description": "<p>Python plays an indispensable role in movie making at DreamWorks. We\u2019ll take a look at different stages involved in making a movie, different depts that contribute to the process and how python is used in various capacities in each of these.  </p>\n<h2>Audience</h2>\n<p>Python Developers who are interested in movie making and the processes behind it.  </p>\n<h2>Detailed abstract</h2>\n<p>(coming soon)</p>\n<h2>Outline</h2>\n<p>(coming soon)</p>\n<p><strong>Duration:</strong> 1 hour</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "223-python-helps-make-movies-at-dreamworks",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/223-python-helps-make-movies-at-dreamworks",
      "submitted": "2014-05-30T02:27:12.231922Z"
    },
    {
      "links": "",
      "proposer": "A. Jesse Jiryu Davis",
      "votes_count": null,
      "comments": 2,
      "id": 222,
      "votes": 14,
      "requirements": "",
      "title": "What Is Async, How Does It Work, And When Should I Use It?",
      "section": "Web Development",
      "votes_groups": null,
      "speaker": "A. Jesse Jiryu Davis",
      "objective": "<p>Attendees will attain a useful definition of \"asynchronous\", and understand how asynchronous applications achieve I/O concurrency differently from traditional multithreaded applications. They'll be introduced to the async programming model, and learn a set of simple rules that determine when async is the right tool for the job, and when it is not.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I gave this talk at PyCon in Montreal, here's the video:  </p>\n<p><a href=\"http://emptysqua.re/blog/pycon-2014-video-what-is-async/\">http://emptysqua.re/blog/pycon-2014-video-what-is-async/</a></p>\n<p>I'm a Senior Python Engineer at MongoDB in New York City. I\u2019m a committer to the asyncio project and the author of its Queue implementation. Author of Motor, an async MongoDB driver for Tornado, and of Toro, a library of locks and queues for Tornado coroutines. Contributor to Python, PyMongo, MongoDB, and Tornado.</p>",
      "description": "<p>Python\u2019s asynchronous frameworks, like asyncio, Tornado, and Twisted, are increasingly important for writing high-performance web applications. Even if you\u2019re an experienced web programmer, you may lack a rigorous understanding of how these frameworks work and when to use them. Let\u2019s see how asyncio's event loop works, and learn how to efficiently handle very large numbers of concurrent connections.</p>",
      "confirmed": false,
      "slides": "http://www.slideshare.net/emptysquare/what-is-async-how-does-it-work-and-when-should-i-use-it",
      "phone": null,
      "name": "222-what-is-async-how-does-it-work-and-when-should-i-use-it",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/222-what-is-async-how-does-it-work-and-when-should-i-use-it",
      "submitted": "2014-05-29T18:38:01.482900Z"
    },
    {
      "links": "Video of me talking about asyncio, at PyCon in Montreal:\r\n\r\nhttp://emptysqua.re/blog/pycon-2014-video-what-is-async/",
      "proposer": "A. Jesse Jiryu Davis",
      "votes_count": null,
      "comments": 3,
      "id": 221,
      "votes": 20,
      "requirements": "",
      "title": "Python Performance Profiling: The Guts And The Glory",
      "section": "Software Development Tools",
      "votes_groups": null,
      "speaker": "A. Jesse Jiryu Davis",
      "objective": "<p>Attendees will learn which Python profiler to use, and how to use it. They'll see how the profiler's output can guide their optimization efforts, and to estimate the possible improvement from any optimization.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Senior Python Engineer at MongoDB in New York City. Author of GreenletProfiler, a Python profiler that works with Gevent. Also wrote Motor, an async MongoDB driver for Tornado, and Toro, a library of locks and queues for Tornado coroutines. Contributor to Python, Yappi, PyMongo, MongoDB, Tornado, and asyncio.  </p>\n<p>Past speaking experience:<br>\n<em> \u201cWriting an Excellent Programming Blog\u201d at Open Source Bridge in 2014.\n</em> \u201cPython Profiling: The Guts And The Glory\u201d at PyCon APAC in 2014.\n<em> \u201cWhat Is Async, How Does It Work, and When Should I Use It?\u201d at PyCon, PyCon APAC, and OSCON in 2014.\n</em> \u201cNight of the Living Thread\u201d on a Python standard library bug, Austin Python Meetup November 2013.</p>",
      "description": "<p>Your Python program is too slow, and you need to optimize it. Where do you start? With the right tools, you can optimize your code where it counts. We\u2019ll explore the guts of the Python profiler \u201cYappi\u201d to understand its features and limitations. We\u2019ll learn how to find the maximum performance wins with minimum effort.</p>",
      "confirmed": false,
      "slides": "http://www.slideshare.net/emptysquare/python-performance-profiling-the-guts-and-the-glory",
      "phone": null,
      "name": "221-python-performance-profiling-the-guts-and-the-glory",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/221-python-performance-profiling-the-guts-and-the-glory",
      "submitted": "2014-05-29T18:24:59.623748Z"
    },
    {
      "links": "The slides linked above are a work in progress, will keep updating them till they are complete.\r\n\r\nhttp://kivy.org kivy website\r\nhttp://wiki.kivy.org User maintained list of kivy applications snippets, talks and apps made using kivy\r\nhttp://kivy.org/#gallery Gallery of projects showcased using kivy\r\nhttp://github.com/kivy Projects in and around kivy.\r\nhttp://github.com/kivy-garden User maintained widgets and extensions for kivy.\r\n\r\ncontact me at `quanon` on #kivy @ irc.freenode.net\r\n",
      "proposer": "Akshay Arora",
      "votes_count": null,
      "comments": 2,
      "id": 220,
      "votes": 16,
      "requirements": "<p>One fairly recent Laptop, anything with a gpu that supports OpenGL ES 2.0 or above.  </p>\n<p>Even integrated Intel gpus from the last 4+ years usually support this feature.  </p>\n<p>Android device only if you want to test and deploy to a mobile.  </p>\n<p>People interested in testing on iOs can bring a their iOs device. iOS devices will only work if you have a developer license from Apple and a mac device that is running latest Xcode.  </p>",
      "title": "Mobile Application development with python(kivy)",
      "section": "Workshops",
      "votes_groups": null,
      "speaker": "Akshay Arora",
      "objective": "<p>Showcase ease of application development for mobiles using python Framework \"Kivy\".  </p>\n<p>The main objective would be to guide people into developing their first application for mobiles.  To showcase how the same application can be deployed to linux, windows, android, iOS, Mac without the user having to change anything in their code.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I have been working with linux, open source off and on since the last 12+ years, I only got into contributing back open source with kivy.  </p>\n<p>I  am one of the core devs at kivy http://kivy.org/#aboutus<br>\nYou can take a look at my public work here  <a href=\"http://github.com/akshayaurora\">http://github.com/akshayaurora</a>  </p>\n<p>The project has a amazing open community always open to help and to embrace new comers. Don't hesitate to come join us at #kivy on irc.freenode.net  </p>\n<p>I have been a mentor for gsoc projects around kivy for the last two years, this being my third year.  </p>\n<p>Professionally I have been freelancing around mobile development and other projects around and using kivy for the last few years.</p>",
      "description": "<p>Kivy is a Python framework that has it's roots in Natural User Interfaces and augmented reality work.  </p>\n<p>Kivy was designed from the ground up keeping in mind the new and up and coming natural interfaces like \"Touch\", and to take advantage of modern gpus for extracting performance for user interfaces.  </p>\n<p>This results is a unique user experience making it dead simple for developers to target devices like a mobile phone.  </p>\n<p>The main goal of this work shop is to showcase how the abstraction of fundamentals like user input and usage of gpu accelerated interfaces through the kivy framework has made application for mobile development dead simple.  </p>\n<p>\"Give us time and we will teach your dog to program\". Not really! but you should get a idea of how simple it is when we showcase 12-16 year olds developing mobile applications. This is the \"power of python\".</p>",
      "confirmed": true,
      "slides": "https://docs.google.com/presentation/d/1zoyqnnDqpXRPmZ1pLYu05cWMg-l9qt2657uGFozZWig",
      "phone": null,
      "name": "220-mobile-application-development-with-python-kivy",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/220-mobile-application-development-with-python-kivy",
      "submitted": "2014-05-29T14:50:33.206132Z"
    },
    {
      "links": "http://shankaraman.wordpress.com/",
      "proposer": "Shankar Raman",
      "votes_count": null,
      "comments": 2,
      "id": 219,
      "votes": 14,
      "requirements": "",
      "title": "Memory Forensics using Volatility",
      "section": "Software Development Tools",
      "votes_groups": null,
      "speaker": "Shankar Raman",
      "objective": "<p>The talk is to give an overview and to demonstrate memory analysis using a open source tool called Volatility. This session will also cover the various features embedded in Volatility and also the advantages.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I am a Research Assistant and a Masters student in Cyber security and Network systems from Amrita Vishwa Vidyapeetham, Amritapuri Campus. My area of interest is Digital Forensics. I am a part of University's ethical hacking team \"bi0s\", which  participates in Capture the Flag competitions. Winners of HackIM and Jailbreak'14 CTF competitions, organized by nu|c0n as part of their annual security conference.</p>",
      "description": "<p>Memory forensics is an emerging topic in the field of digital forensics. Mining artifacts from memory adds valuable asset for any forensic investigations. This talk will demonstrate   beginning with collecting a memory dump, followed by an explanation of artifacts and demonstration of the various plugins available in Volatility on the collected memory dump. Will also present the various techniques and advantages of using the framework.  </p>\n<h1>Session highlight:</h1>\n<ul>\n<li>Introduction:<ul>\n<li>Need for memory forensics</li>\n<li>The components we deal with<ul>\n<li>Processes.</li>\n<li>Registry Keys.</li>\n<li>Connections.</li>\n<li>Logs.    </li>\n<li>Some Malware artifacts.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Setting up the environment - Linux and Windows.</li>\n<li>Demonstration and explanation of a few plugins.<ul>\n<li>Process</li>\n<li>Registry</li>\n<li>Connections</li>\n<li>Logs</li>\n<li>Malware</li>\n<li>Misc</li>\n</ul>\n</li>\n<li>Limitations</li>\n</ul>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "219-memory-forensics-using-volatility",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/219-memory-forensics-using-volatility",
      "submitted": "2014-05-29T12:11:21.475749Z"
    },
    {
      "links": "https://docs.djangoproject.com/en/dev/topics/class-based-views/intro/\r\nhttp://django-braces.readthedocs.org\r\nhttp://ccbv.co.uk",
      "proposer": "Pavan Mishra",
      "votes_count": null,
      "comments": 0,
      "id": 218,
      "votes": 5,
      "requirements": "<ul>\n<li>experience developing django apps</li>\n<li>OOP in python</li>\n</ul>",
      "title": "Smarter Django views with Class Based Views and Braces",
      "section": "Software Development Tools",
      "votes_groups": null,
      "speaker": "Pavan Mishra",
      "objective": "<p>Use class based views to write beautiful, extensible and declarative views. Use braces library to cover more real view usages.</p>",
      "type": "",
      "email": null,
      "bio": "<p>An experienced python programmer.<br>\nBuilt his startup(Imly -- http://imly.in) around Python/Django, related tools. Has time and again used python in other startups that he has worked with.<br>\nBoth the initial imly and newer model imply use CBVs heavily.</p>",
      "description": "<p>Some love it and some hate it. Still django class-based views have proved to have their own use-cases. In this talk we will discuss how you can use CBVs to write organized, encapsulated, declarative, extensible and beautiful way. CBVs can take little getting used to, this discussion should get you started. Augmented with braces library, CBVs can go a long way to prove their worth.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "218-smarter-django-views-with-class-based-views-and-braces",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/218-smarter-django-views-with-class-based-views-and-braces",
      "submitted": "2014-05-29T11:12:56.402394Z"
    },
    {
      "links": "http://en.wikipedia.org/wiki/Representational_state_transfer\r\nhttps://restful-api-design.readthedocs.org\r\nhttp://www.django-rest-framework.org",
      "proposer": "Pavan Mishra",
      "votes_count": null,
      "comments": 2,
      "id": 217,
      "votes": -1,
      "requirements": "<ul>\n<li>some experience with Django</li>\n<li>some exposure in consuming/exposing APIs</li>\n</ul>",
      "title": "RESTful API development using Django REST Framework",
      "section": "Web Development",
      "votes_groups": null,
      "speaker": "Pavan Mishra",
      "objective": "<p>An introduction to REST architecture and how to implement it using Django REST Framework.</p>",
      "type": "",
      "email": null,
      "bio": "<p>An experienced python programmer.<br>\nBuilt his startup(Imly -- http://imly.in) around Python/Django, related tools. Has time and again used python in other startups that he has worked with.<br>\nRecently developed APIs to be consumed by mobile apps for Imly.</p>",
      "description": "<p>API design is now an integral part of web development, supporting mobile apps to single page apps or just internal services. Django along with its app ecosystem has been great for web development. Now with Django REST Framework, same power is available to create semantic and beautiful REST APIs.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "217-restful-api-development-using-django-rest-framework",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/217-restful-api-development-using-django-rest-framework",
      "submitted": "2014-05-29T09:18:18.992672Z"
    },
    {
      "links": "https://www.linkedin.com/in/muzammilr\r\nhttp://docs.saltstack.com/en/latest/",
      "proposer": "Muzammil Rehman",
      "votes_count": null,
      "comments": 4,
      "id": 216,
      "votes": 22,
      "requirements": "",
      "title": "Salt Stack",
      "section": "Infrastructure",
      "votes_groups": null,
      "speaker": "Muzammil Rehman",
      "objective": "<p>salt stack is distributed remote execution and configuration management tool build on python. Attendees will be able to understand how to use salt and its advantages in managing large infrastructure,configuration and complex automation.  </p>",
      "type": "",
      "email": null,
      "bio": "<p>I am Senior SRE at LinkedIn with 7 years of industry experience. As part of my job, I use salt stack heavily in day to day activity, I am also responsible in managing the salt infrastructure.  </p>\n<p>Python is my preferred language of coding, for web-app i prefer flask, bootstrap, wtf forms, data-tables. I am a technology enthusiasts and passionate on developing large scale infrastructure, I believe complex and large operations don't necessarily have to be complex, simplicity is the best way.</p>",
      "description": "<p>I will be talking about<br>\nWhat salt stack is, how its come into existence, and how it is different from existing tools<br>\nHow to install and configure it,<br>\nWhere it can help in maintain large infrastructure, its a feature rich options.<br>\nHow to write basic salt modules/api,<br>\nHow salt configuration management can be leveraged,<br>\nHow LinkedIn is using salt to manage application stack and infrastructure<br>\nThings that we have to watch when running salt stack<br>\nFollowed by a brief demo. </p>",
      "confirmed": false,
      "slides": "http://www.slideshare.net/muzammilr/salt-stack-introduction",
      "phone": null,
      "name": "216-salt-stack",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/216-salt-stack",
      "submitted": "2014-05-29T07:29:37.265378Z"
    },
    {
      "links": "https://github.com/psachin\r\nhttps://github.com/psachin/slides/tree/master/scipy2013\r\nhttps://github.com/psachin/slides",
      "proposer": "Sachin Patil",
      "votes_count": null,
      "comments": 0,
      "id": 215,
      "votes": -2,
      "requirements": "",
      "title": "Python + Emacs in scientific computing",
      "section": "Scientific Computing",
      "votes_groups": null,
      "speaker": "Sachin Patil",
      "objective": "<p>When Python is integrated with GNU Emacs, the combination provides best of both the worlds. It saves developer's time and researcher's effort without wasting time in collocating data, code and associated writeup.  </p>\n<p>An objective is to provide user an excellent development environment. User will find working with data and code much more convenient and efficient in Emacs than any other editor or an IDE.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Currently working as a Project Engineer in FOSS on Aakash Project(Aakash tablet), Indian Institute of Technology Bombay. He started as a Linux System Administrator and has more than three years of experience in Python and Emacs. He has developed several websites in Python-Django and is a author of <a href=\"https://github.com/psachin/insert-shebang\">insert-shebang</a>, an Emacs extension. He has also developed a web-app to select and download Emacs extensions: <a href=\"http://haqiba.org\">haqiba.org</a>. He is one of the contributor and maintainer of <a href=\"http://androportal.github.io/linux-on-aakash/\">Linux on Aakash</a> and has published an article on the same <a href=\"http://www.csi-india.org/c/document_library/get_file?uuid=b40bb834-ee4a-47a2-9c18-a9f93d984686&amp;groupId=10157\">topic</a> in CSI magazine. </p>",
      "description": "<p>Python is widely known for it's scientific computing tools like SymPy,<br>\nNumPy, and SciPy. GNU Emacs is one of the oldest and most scalable<br>\ntext editor. Almost every thing can be integrated in Emacs and Python is not an exception. Python when integrated with Emacs, can do wonders.  </p>\n<p>It is often tedious for researchers to maintain all documents related data and code in one place. Also it's equally important to reproduce the same data or results using code in due time. They have to periodically switch between a document processor, Python interpreter and data to keep it all synchronized. The problem is to maintain and use all these utilities without diverting from their main objective. Emacs integrated with Python is an excellent way to solve these issues. With Emacs org-mode, one can keep all relevant manuscripts, data, code and results in one place without any hassle.  </p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "215-python-emacs-in-scientific-computing",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/215-python-emacs-in-scientific-computing",
      "submitted": "2014-05-29T04:32:33.711151Z"
    },
    {
      "links": "http://ankitdaf.com\r\nhttps://github.com/ankitdaf\r\nhttps://vimeo.com/95797667\r\nhttps://vimeo.com/94160387\r\n",
      "proposer": "Ankit Daftery",
      "votes_count": null,
      "comments": 0,
      "id": 214,
      "votes": 20,
      "requirements": "",
      "title": "Python, Arduino and connected objects",
      "section": "Embedded Python",
      "votes_groups": null,
      "speaker": "Ankit Daftery",
      "objective": "<p>This talk opens up a list of possibilities about how a little Python scripting can be used to leverage a lot of Internet APIs and the Arduino platform to quickly prototype and build useful \"connected objects\" either for automation, convenience, or sheer fun.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I am currently an Interaction Designer + Creative Technologist at Arduino India.  </p>\n<p>I use hardware, software and data constructively to provide tools that empower people to create and communicate. I love building digital objects and fun,quirky electronic projects, and keep on prototyping in my free time. I enjoy teaching technology, and use my making experience to keep on improving how I teach.  </p>\n<p>I try to take technology and try to add a human touch to it, to make it friendlier, and more useful.  </p>\n<p>I have been working a lot on the Arduino Yun + Web API enabled projects using Python as a scripting language, and am also focussing on teaching beginners and intermediate users how to program for web-enabled hardware.  </p>",
      "description": "<p>The session will begin with a brief introduction to the Python tools that exist for hardware, and Arduino in particular, and will proceed to how they can be used in conjunction with several APIs provided by popular (and not-so-well-popular) services. The session will try to cover various approaches possible for implementing trivial to complex hardware based applications, ranging from dataloggers to ubiquitous connected objects, and from robots to mobile activated interactive installations.</p>",
      "confirmed": true,
      "slides": "",
      "phone": null,
      "name": "214-python-arduino-and-connected-objects",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/214-python-arduino-and-connected-objects",
      "submitted": "2014-05-28T19:44:25.161065Z"
    },
    {
      "links": "https://github.com/akshar-raaj\r\nhttp://agiliq.com/blog/author/akshar/\r\nhttp://agiliq.com/blog/2012/06/understanding-args-and-kwargs/",
      "proposer": "akshar raaj",
      "votes_count": null,
      "comments": 2,
      "id": 213,
      "votes": 8,
      "requirements": "",
      "title": "Continuous deployment with Fabric ",
      "section": "Infrastructure",
      "votes_groups": null,
      "speaker": "akshar raaj",
      "objective": "<p>People attending this talk will leave with an understanding of continuous deployment and continuous deployment tools in general and Fabric in particular.  </p>\n<p>They will appreciate the usefulness of a continuous deployment tool like Fabric. Essentially they will realise the time they save by using a single step build process. By the time they leave, they would have learned how to write a Fabric script which can automate deployment.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I am a web developer at <a href=\"http://agiliq.com\">Agiliq</a>. I primarily work with Python, Django and the related technology stack. I help people by writing <a href=\"http://github.com/akshar-raaj\">open source code</a>, <a href=\"http://agiliq.com/blog/author/akshar\">blog</a>, and by answering questions on <a href=\"http://stackoverflow.com/users/839549/akshar\">Stack Overflow</a>.</p>",
      "description": "<p>Your time is precious and is best spent writing code. It should not be wasted on a production server doing the repetitive task again and again. And by repetitive task I mean fetching the code changes to server, installing the libraries, restarting the web server, restarting the proxy server and so on.  </p>\n<p>Code changes continuously. And you need to deploy the code to production every day, possibly you want to deploy with every code push. And sshing to the server every time you want to deploy, and doing the repetitive tasks is a waste of time and energy.  </p>\n<p>So, deployment of code should be automated. <a href=\"http://www.joelonsoftware.com/articles/fog0000000043.html\">Joel's test</a> has a requirement that build should be a one step process.  </p>\n<p><a href=\"http://www.fabfile.org\">Fabric</a> is a command-line tool for streamlining the use of SSH for application deployment (taken from docs).</p>\n<p>We will write a basic web application using Python. This application will serve few urls. We will use gunicorn as the web server.  </p>\n<p>Every time we want to deploy we need to do the following  </p>\n<ul>\n<li>cd to required directory.</li>\n<li>Fetch the code from the repository and checkout to master. (We will use github)</li>\n<li>Activate the virtual environment.</li>\n<li>Install the requirements i.e the third party libraries on which the application depends.</li>\n<li>Kill existing gunicorn process.</li>\n<li>Start a new gunicorn process</li>\n</ul>\n<p>We will ssh to a server and will deploy the code there. We will perform the steps mentioned above. You will notice the time it takes and pain involved in performing those steps manually. And then we will write a Fabric script which can automate these steps for us, which will be much faster than the previous approach where we manually had to do every step involved in build.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "213-continuous-deployment-with-fabric",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/213-continuous-deployment-with-fabric",
      "submitted": "2014-05-28T17:49:39.602172Z"
    },
    {
      "links": "http://greenlet.readthedocs.org/en/latest/\r\nhttp://www.tornadoweb.org/en/stable/",
      "proposer": "Prahlad Nishal",
      "votes_count": null,
      "comments": 3,
      "id": 212,
      "votes": 12,
      "requirements": "<p>Attendees should have a basic knowledge of:  </p>\n<ul>\n<li>Python 2.7x</li>\n<li>Sockets</li>\n<li>Threads</li>\n</ul>",
      "title": "Looking beyond threads and blocking sockets: Dhaga",
      "section": "Core Python",
      "votes_groups": null,
      "speaker": "Prahlad Nishal",
      "objective": "<p>The talk will focus on real world challenges of scaling and performance of a network-intensive application and how we can overcome these without changing the existing code flow. The solution we propose is <strong>Dhaga</strong>, which is our abstraction for a lightweight thread of execution based on <strong>Greenlets</strong> and <strong>Tornado</strong>. This lets us perform asynchronous network IO with sequential code flow and scale to thousands of sockets or Dhagas.  </p>",
      "type": "",
      "email": null,
      "bio": "<p>Prahlad Nishal is a Senior Software Engineer working at Druva for the last 4 years, primarily involved in networking code. Python is primary language for most of his projects.  </p>",
      "description": "<p>Most of the network-intensive applications use threads with blocking sockets for network operations. By using blocking sockets, the programming code flow is simple and sequential.<br>\nWhen the applications needs enhanced performance or scale out, we increase the number of threads. But when the application needs thousands of sockets or threads, the normal practice is to use either an asynchronous socket library or multiple processes, both of these require enough code changes and break the sequential code flow.  </p>\n<p>To address this problem, we propose <strong>Dhaga</strong> (meaning thread in Hindi language), which is our abstraction for a lightweight thread of execution. Dhaga class is derived from Greenlet, which implements stack switching to execute multiple code flows in one OS thread.  An OS level thread executes multiple Dhagas with cooperative scheduling. Whenever any Dhaga needs to perform network IO, it assigns the work to Tornado, hands over the control to Greenlet, and waits for its turn to continue execution.  </p>\n<p>Greenlets are micro-threads with no implicit scheduling. This is useful when you want to control exactly when your code runs. You can build custom scheduled micro-threads on top of Greenlet. We use Greenlets with cooperative scheduling with our custom scheduler.  </p>\n<p>Tornado is a simple, non-\u00adblocking web server framework written in Python, designed to handle<br>\nthousands of asynchronous requests. We use its core components IOLoop and IOStream.  </p>\n<p>We have successfully shipped Dhaga in our product, and it is actively used in our production servers.  </p>\n<p>Example of the improved performance of backup application using Dhaga:  </p>\n<p>Data Size: 1GB (32K files)  </p>\n<p>Time with threads(32 threads) : 44 mins  </p>\n<p>Time with Dhaga(4 threads*32dhagas): 14 mins  </p>\n<p>Data Size: 2.2GB (Windows Program Files)  </p>\n<p>Time with threads(32 threads): 37 mins  </p>\n<p>Time with Dhaga(4 threads*32dhagas): 15 mins  </p>\n<p>In addition, we are able to improve our webserver to process 10K concurrent requests without changing application level code, just replaced threads with dhaga.  </p>\n<p>In my talk, I will be explaining the following concepts  </p>\n<ul>\n<li>Scaling and performance challenges of network applications using threads and blocking sockets, for example, a threaded web server.</li>\n<li>Introducing Dhaga, its architecture, and how it can be used.&lt;/li&gt;</li>\n<li>Replacing threads with dhaga with minimal code changes to improve performance and scale out.</li>\n</ul>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "212-looking-beyond-threads-and-blocking-sockets-dhaga",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/212-looking-beyond-threads-and-blocking-sockets-dhaga",
      "submitted": "2014-05-28T13:00:44.523885Z"
    },
    {
      "links": "",
      "proposer": "nilesh sharma",
      "votes_count": null,
      "comments": 1,
      "id": 211,
      "votes": 31,
      "requirements": "<p>pip install numpy<br>\npip install pandas  </p>\n<p>on ubuntu/mac machine, that's it ...!!!</p>",
      "title": "Introduction to python pandas data structures ",
      "section": "Scientific Computing",
      "votes_groups": null,
      "speaker": "nilesh sharma",
      "objective": "<p>Introduction to python pandas and explain it's benefits for doing the data analysis using a real world example, by explaining two primary data structures of pandas, Series (1-dimensional) and DataFrame (2-dimensional), </p>",
      "type": "",
      "email": null,
      "bio": "<p>Web Professional and Research consultant having more than 5 years of progressive experience in India &amp; UAE with reputed IT organizations.  </p>\n<p>Possess rich knowledge of Software Development Life Cycle phases- Requirement, Design, Development, Unit Testing, Review and Maintenance.  </p>\n<p>Interests: Web Programming, UI Design, Website QA, Website Project Management, Other - Web Development, Research Analysis. Software Development LIfe Cycle. Agile Project Management, Scrum Process.  </p>\n<p>Current project covers: High Level Python web framework - Django  </p>\n<p>Tasks Handled : Requirement Analysis, Impact analysis, Design, Development, Unit<br>\nTesting, Production Deployment, Review, Maintenance, Bug Fixing, Client Communication  </p>\n<p>Programming Languages - HTML, JavaScript, Jquery, Shell Scripting, Python Web Frameworks - Prototype (JS), Django (Python), C, C++, Java.</p>",
      "description": "<p>pandas is an open source Python library for data analysis. Python has always been great for prepping and munging data, but it's never been great for analysis - you'd usually end up using R or loading it into a database and using SQL (or worse, Excel). pandas makes Python great for analysis.  </p>\n<p>pandas is a Python package providing fast, flexible, and expressive data structures designed to make working with \u201crelational\u201d or \u201clabeled\u201d data both easy and intuitive. It aims to be the fundamental high-level building block for doing practical, real world data analysis in Python. Additionally, it has the broader goal of becoming the most powerful and flexible open source data analysis / manipulation tool available in any language. It is already well on its way toward this goal.  </p>\n<p>pandas is well suited for many different kinds of data:  </p>\n<p>Tabular data with heterogeneously-typed columns, as in an SQL table or Excel spreadsheet<br>\nOrdered and unordered (not necessarily fixed-frequency) time series data.<br>\nArbitrary matrix data (homogeneously typed or heterogeneous) with row and column labels<br>\nAny other form of observational / statistical data sets. The data actually need not be labeled at all to be placed into a pandas data structure</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "211-introduction-to-python-pandas-data-structures",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/211-introduction-to-python-pandas-data-structures",
      "submitted": "2014-05-28T05:47:03.385504Z"
    },
    {
      "links": "",
      "proposer": "priya arora",
      "votes_count": null,
      "comments": 4,
      "id": 210,
      "votes": 22,
      "requirements": "<p>Need a laptop with Meteor framework 0.8.0 installed in it.<br>\nCan refer to this website for it's installation part. <a href=\"https://www.meteor.com/\">https://www.meteor.com/</a></p>",
      "title": "Hands on with Real Time Web Framework Meteor + Comparison of high computing dbs",
      "section": "Web Development",
      "votes_groups": null,
      "speaker": "priya arora",
      "objective": "<p>To share what I have learnt while implementing a project for National Health Services.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Passionate about FOSS<br>\nCurrently working on Mirex project on Audio tag classification.<br>\nWorking on meteor framework for building a reporting system for NHS, UK<br>\nHighly passionate to understand the computational difference among different DBs.  </p>",
      "description": "<p>Will discuss:  </p>\n<pre class=\"syntax\"><code>What is real time webframework\nComparison with other frameworks\nHands-on by implementing a small app using this framework\nBeing based on mongodb, so will understand the efficiency among different DBs.</code></pre>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "210-hands-on-with-real-time-web-framework-meteor-comparison-of-high-computing-dbs",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/210-hands-on-with-real-time-web-framework-meteor-comparison-of-high-computing-dbs",
      "submitted": "2014-05-28T00:14:15.793833Z"
    },
    {
      "links": "",
      "proposer": "Subhendu Ghosh",
      "votes_count": null,
      "comments": 1,
      "id": 209,
      "votes": 2,
      "requirements": "",
      "title": "Implementing websocket using pulsar",
      "section": "Web Development",
      "votes_groups": null,
      "speaker": "Subhendu Ghosh",
      "objective": "<p>Pulsar is Event driven concurrent framework for python. With pulsar you can write asynchronous servers performing one or several activities in different threads and/or processes.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I am Subhendu Ghosh currently studying in 3rd year of Dr. B.C.Roy Engineering College ,Durgapur. I am python enthusiast. While making a chat application using django, problem was faced while implementing websocket, which was finally resolved using Pulsar.</p>",
      "description": "<p>Implementing websocket using pulsar and django. Making of small chat application.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "209-implementing-websocket-using-pulsar",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/209-implementing-websocket-using-pulsar",
      "submitted": "2014-05-27T20:04:34.282247Z"
    },
    {
      "links": "Virtual-User :  https://github.com/black-perl/Virtual-User\r\n\r\nVideo: \r\n           https://www.youtube.com/watch?v=Fc3KyU1DVf0&feature=youtu.be\r\n\r\n\r\nTouch-free-flappy-bird-game : https://github.com/black-perl/Touch-free-flappy-bird-game\r\n\r\nVideo : \r\n           https://www.youtube.com/watch?v=1g2kJx1qmyE",
      "proposer": "Ankush Sharma",
      "votes_count": null,
      "comments": 2,
      "id": 208,
      "votes": 17,
      "requirements": "<p>Basic understanding of Python and it's libraries.  </p>\n<p>Here are quick download links:  </p>\n<ol>\n<li>Python 2.7.5 ( <a href=\"https://www.python.org/download/releases/2.7.5\">https://www.python.org/download/releases/2.7.5</a> )  </li>\n<li>Pygame ( <a href=\"http://www.pygame.org/download.shtml\">http://www.pygame.org/download.shtml</a> )  </li>\n<li>OpenCV and other dependencies( <a href=\"http://docs.opencv.org/trunk/doc/py_tutorials/py_setup/py_setup_in_windows/py_setup_in_windows.html\">http://docs.opencv.org/trunk/doc/py_tutorials/py_setup/py_setup_in_windows/py_setup_in_windows.html</a> )  </li>\n<li>Xlib ( <a href=\"https://pypi.python.org/pypi/python-xlib/0.12\">https://pypi.python.org/pypi/python-xlib/0.12</a> )  </li>\n<li>Laptop with preferrably Ubuntu or other linux distro installed  </li>\n<li>A webcam ( Not required in case your laptop have a built-in camera) .</li>\n</ol>",
      "title": "Python, the eyes of real world computer applications",
      "section": "Core Python",
      "votes_groups": null,
      "speaker": "Ankush Sharma",
      "objective": "<p>A talk to give you insight into how real life computer applications can be easily interfaced by using the power of image processing with Python.I will be showing how you can play games,control your computer and do other cool stuff without using any other hardware,just your gestures alone.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I, Ankush Sharma is an undergraduate from IIT BHU Varanasi with 1.5+ years experience  with Python.I have given multiple presentations on this technology in my college.Really looking forward to give one here.  </p>",
      "description": "<p>We are a group of three people from IIT-BHU, Varanasi  whom i will be speaking.I will be showing you the building process of two computer applications we have made for this presentation talk:  </p>\n<ol>\n<li>\n<p>Touch-Free Flappy Bird - Almost all of you have known about the addictive Flappy game in android. I will be showing how to interface this game to let you control the bird by your fingers itself. I will be first showing how to build the game by using Pygame and then how to interface it by using OpenCV.  </p>\n</li>\n<li>\n<p>Virtual User - Through this, I will be showing how to perform clicks,scrolls,mouse movements on your pc without using any hardware; just by your fingers alone.  </p>\n</li>\n</ol>\n<p>The aim of the talk is to present a model which has endless applications in real life; like automated CCTv surveillance, self-capable projectors(no need of having laptop with projector for working) and much more.<br>\nThe motto of the talk is:    Python can make comfort in human life!!  </p>",
      "confirmed": true,
      "slides": "https://docs.google.com/file/d/0B_aMAnqOOFmJNkNBYXZWUlZIZEU/edit?pli=1",
      "phone": null,
      "name": "208-python-the-eyes-of-real-world-computer-applications",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/208-python-the-eyes-of-real-world-computer-applications",
      "submitted": "2014-05-27T05:48:19.959763Z"
    },
    {
      "links": "http://anandology.com/",
      "proposer": "Anand Chitipothu",
      "votes_count": null,
      "comments": 2,
      "id": 207,
      "votes": 37,
      "requirements": "",
      "title": "Messing with government data using Python",
      "section": "Software Development Tools",
      "votes_groups": null,
      "speaker": "Anand Chitipothu",
      "objective": "<p>During this election season, I've spent lot of time scrapping government data, parsing PDFs to extract lot of useful data that was not available anywhere else. I've used Python extensively in this process.  </p>\n<p>This talk is about my learnings during the process and tips of others who are about to take similar adventures.</p>",
      "type": "",
      "email": null,
      "bio": "<p><a href=\"http://anandology.com\">Anand Chitipothu</a> is a software consultant and trainer. He offers corporate trainings on Python and conducts public courses on Python programming in Bangalore.</p>\n<p>He is an active member of Indian Python community, coordinator of PyCon India 2012, organized PythonMonth in 2013 and elected member of PSF.  </p>\n<p>He is co-author of <a href=\"http://webpy.org/\">web.py</a>, a micro web framework in Python and currently works for <a href=\"http://archive.org/\">Internet Archive</a>.  </p>",
      "description": "<p>During this election season, I volunteered to provide technical assistance to couple of election campaigns. During this process, I found that lot of crucial information is very hard to find. To give you an idea, here are some of them:  </p>\n<ul>\n<li>all assembly constituencies in a parliamentary constituency</li>\n<li>all wards in an assembly constituency</li>\n<li>all polling booths in an assembly constituency</li>\n<li>number of polling centers </li>\n</ul>\n<p>I've also built couple of tools using this data to help the campaign.  </p>\n<p>Apart from these, close to the elections I had to build  a website to find polling booth from voterid, knowing that election commission website is not going to work when need. Again this information is available only in the PDFs and had to be extracted using Python.  </p>\n<p>And there were some people keen to use voterlists on paper. So I wrote some python scripts to sort voters of a polling center by name/house-no etc. and generate PDFs in very compact form so that they take very less number of papers. Imagine printing voterlists for all people in Bangalore. I'm sure I would have saved paper equivalent to a dozen trees.  </p>\n<p>I've used reportlab for generating PDFs and got hit by a performance issue in reportlab. It was just a day before elections and I had to finish the task. With no options left, I took couple of servers on the cloud and ran thing in parallel. I found a work-around only after burning my hands.  </p>\n<p>There were lot more adventures. Come and listen to me if you interested!  </p>",
      "confirmed": true,
      "slides": "",
      "phone": null,
      "name": "207-messing-with-government-data-using-python",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/207-messing-with-government-data-using-python",
      "submitted": "2014-05-27T05:31:57.438980Z"
    },
    {
      "links": "",
      "proposer": "Pratik Mandrekar",
      "votes_count": null,
      "comments": 0,
      "id": 206,
      "votes": 7,
      "requirements": "<ul>\n<li>Should have used the interactive Python shell at least once</li>\n<li>Should know how to fix the Python GIL (Yeah, right!)</li>\n</ul>",
      "title": "A Practical Guide to Idioms in Python",
      "section": "Core Python",
      "votes_groups": null,
      "speaker": "Pratik Mandrekar",
      "objective": "<p>If you have used Python as a scripting language, there might be a few things that you never came across that could help you use Python in a more interesting way. Learn about some common patterns that help make life better. Learn about using decorators, the what and why of context managers and some functional programming paradigms along with the usual stuff about data structures.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I have been using Python for a couple of years now and it is the language of choice for many things at the health technology start-up I work for. I have done some general programming, web development and computational things with Python and have a decent grasp on the good and the bad parts.  </p>\n<p>I can be found on the internet <a href=\"http://about.me/pratikmandrekar\">here</a></p>",
      "description": "<p>You will be able to understand and re-visit some Python concepts that you are either unfamiliar with or have never used to their full potential.  </p>\n<p>These would be -  </p>\n<ul>\n<li>Simple things like comprehensions, iterators, lazy evaluations</li>\n<li>Decorators and how they can help you</li>\n<li>Some practical uses of Context Managers</li>\n<li>Functional Programming paradigm and some common patterns</li>\n<li>Fun with some Data Structures</li>\n</ul>",
      "confirmed": false,
      "slides": "http://www.slideshare.net/ratpik/practical-idioms-in-python-pycon-india-2014-proposal",
      "phone": null,
      "name": "206-a-practical-guide-to-idioms-in-python",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/206-a-practical-guide-to-idioms-in-python",
      "submitted": "2014-05-26T19:12:34.727443Z"
    },
    {
      "links": "https://github.com/ajkumar25/FlaskBlog\r\nhttp://flask.pocoo.org/",
      "proposer": "Ajay Kumar",
      "votes_count": null,
      "comments": 2,
      "id": 205,
      "votes": 8,
      "requirements": "<p>Working installation of Flask 0.10 and Python 2.7+ with all the other dependencies like <strong>Flask-SQLAlchemy</strong>, <strong>WTForms</strong>, <strong>Flask-WTF</strong>, <strong>Flask-Migrate</strong> and <strong>WebHelpers</strong>.</p>",
      "title": "Building a CMS in Flask",
      "section": "Web Development",
      "votes_groups": null,
      "speaker": "Ajay Kumar",
      "objective": "<p>This tutorial is about creating the <strong>CMS engine</strong> with <strong>Flask</strong>, <strong>Flask-SQLAlchemy</strong>, <strong>WTForms</strong>, <strong>Flask-WTF</strong>, <strong>Flask-Migrate</strong> and <strong>WebHelpers</strong>.</p>",
      "type": "",
      "email": null,
      "bio": "<p>A junior at SSN College of Engineering with main experience in Python.  </p>\n<p>My research interests lie in artificial life, and artificial intelligence using computer science and statistics as tools to understand life and its numerous aspects.  </p>\n<p>I have done numerous open source projects which includes  </p>\n<ol>\n<li>FlaskBlog -  An extensive tutorial on writing web applications in Python using the Flask microframework.  </li>\n<li>PyTransmit - With more than 2000 downloads per month, PyTransmit is a simple wrapper on top of the ftplib package which provides an object that can be used to make FTP calls to a PyTransmit installation.  </li>\n<li>HNScrapy - Hacker News Crawler based upon Scrapy which crawls the entire site and stores the links in the Database.  </li>\n<li>Pygram - Instagram-like image filters.  </li>\n</ol>\n<p>You can find the source code from my <a href=\"http://github.com/ajkumar25\">github</a> profile.  </p>\n<p>You can contact me at contact@pypix.com</p>",
      "description": "<p>The CMS will include the following features  </p>\n<ol>\n<li>Authentication System.  </li>\n<li>DashBoard.  </li>\n<li>Reddit styled Community Blog.  </li>\n<li>SEO urls.  </li>\n<li>Django styled migrations.</li>\n</ol>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "205-building-a-cms-in-flask",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/205-building-a-cms-in-flask",
      "submitted": "2014-05-26T07:59:30.813269Z"
    },
    {
      "links": "",
      "proposer": "Sayan Chowdhury",
      "votes_count": null,
      "comments": 1,
      "id": 204,
      "votes": 7,
      "requirements": "",
      "title": "Darkserver - Debugging Userspace",
      "section": "Software Development Tools",
      "votes_groups": null,
      "speaker": "Sayan Chowdhury",
      "objective": "<p><a href=\"https://darkserver.fedoraproject.org/\">Darkserver</a> is a set of tools and service written in Python to help developers to debug their applications &amp; libraries. </p>",
      "type": "",
      "email": null,
      "bio": "<p>Sayan Chowdhury is a software developer at <a href=\"www.hackerearth.com\">HackerEarth</a> . He is also a co-maintainer of <a href=\"www.waartaa.com\">Waartaa</a>. Python is primary language for most of his projects.  </p>\n<p>He is also an open source contributor for Fedora, Mozilla etc. He worked on Darkserver as a part of his GSoC 2013 project.  </p>\n<ul>\n<li>Github - <a href=\"https://www.github.com/sayanchowdhury\">https://www.github.com/sayanchowdhury</a></li>\n<li>Twitter - <a href=\"https://www.twitter.com/chowdhury_sayan\">https://www.twitter.com/chowdhury_sayan</a></li>\n</ul>",
      "description": "<p><a href=\"https://darkserver.fedoraproject.org/\">Darkserver</a> project was started to use Build-ID feature of compiler toolchains and help developer tools to identify exact package builds from which process images (e.g. core dumps) come. This can enable their analysis, debugging profiling. The whole idea is based on a feature of BUILD-ID which was completed in Fedora 8 time. </p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "204-darkserver-debugging-userspace",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/204-darkserver-debugging-userspace",
      "submitted": "2014-05-25T17:37:03.794385Z"
    },
    {
      "links": "",
      "proposer": "Narasimha SV",
      "votes_count": null,
      "comments": 9,
      "id": 203,
      "votes": 30,
      "requirements": "<p>laptop with Ubuntu and python 2.7</p>",
      "title": "Werkzeug,Jinja2 and their implementation in flask",
      "section": "Web Development",
      "votes_groups": null,
      "speaker": "Narasimha SV",
      "objective": "<p>Understanding of  WSGI utility libraries Werkzeug and Jinja2 and how they are useful.<br>\nHow these libraries are used to built a web framework.  </p>",
      "type": "",
      "email": null,
      "bio": "<p>A techie working on cloud computing.Enthusiastic in learning new things. I have worked on many platforms from cloud to mobile using different technologies. Almost from past 3 years working on python related work and updating myself with newer technologies to learn things in faster manner.  </p>\n<p>This will be my first public session.</p>",
      "description": "<p>Below are the contents which i want to present.<br>\n1. Introduction to Wrekzeug.<br>\n2. Sample code.<br>\n3. URL Routing in Wrekzeug.<br>\n    i.Rule Format \n    ii. Builtin Converters\n    iii.Maps, Rules and Adapters\n    iv. Rule Factories\n    v. Rule Templates.\n4. HTTP Utilities in Wrekzeug<br>\n   i. Date Functions\n   ii. Header Parsing\n   iii. Header Utilities\n   iv. Cookies\n   v. Conditional Response Helpers\n5. Templating in Wrekzeug using Jinja2<br>\n    i. Introduction to jinja2 \n    ii. Sample jinja2 template code .\n6. Implementation of Wrekzeug and Jinja2 in Flask.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "203-werkzeug-jinja2-and-their-implementation-in-flask",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/203-werkzeug-jinja2-and-their-implementation-in-flask",
      "submitted": "2014-05-25T11:08:09.939762Z"
    },
    {
      "links": "http://www.khanio.com\r\nhttps://plus.google.com/+ZakiullahKhanMohammed/photos\r\nhttps://speakerdeck.com/khanio\r\n",
      "proposer": "Zakiullah Khan Mohammed",
      "votes_count": null,
      "comments": 1,
      "id": 202,
      "votes": 11,
      "requirements": "",
      "title": "Profiling Python Code",
      "section": "Core Python",
      "votes_groups": null,
      "speaker": "Zakiullah Khan Mohammed",
      "objective": "<p>To introduce different techniques and tools to profile a python script's performance related to CPU, Memory &amp; I/O.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Since starting out with a 286 IBM machine in 1992 at the age of 8, Zaki has been a technology guy with a penchant for the<br>\nweb and data, big and small. Loves starting things from scratch and a big believer in simplicity and continuous learning.  </p>\n<p>Through out his career, Python has grown from a third class citizen, to a primary scripting tool at work and home. Currently as a start-up guy, its been a day to day job to evaluate code developed by team, understand its impact in different environments and do the needful optimization as required.  </p>\n<p>He simply loves to make and break, in terminal.  </p>",
      "description": "<p>If you can't measure it, you can't analyze it. Irrespective of development platform, its necessary for every Software Engineer to deliver code that's optimized for the execution environment, for which it becomes necessary to understand how resources are consumed and the written code performance.  </p>\n<p>This talk is more of a practical demonstration, where the audience are introduced to code horrors and tools to bust them out. How Fast, How Much, and How Smart ? these are the questions which would be investigated during the talk.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "202-profiling-python-code",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/202-profiling-python-code",
      "submitted": "2014-05-24T15:29:35.825841Z"
    },
    {
      "links": "https://github.com/elitalobo/HomeTask1/tree/master/note_app",
      "proposer": "Elita Lobo",
      "votes_count": null,
      "comments": 6,
      "id": 201,
      "votes": 34,
      "requirements": "<p>basic knowledge of Javascript and Database Management System preferably Sqlite.<br>\nAttendees should have flask , virtualenv , python &gt; 2.6 and sqlite installed on their laptops.  </p>",
      "title": "Flask: Introduction to its cool features and ShareNote app construction",
      "section": "Web Development",
      "votes_groups": null,
      "speaker": "Elita Lobo",
      "objective": "<p>The main objective of this session is to introduce Flask (web framework)and its unique features in details to the  attendees and help them to get started with  building their own cool  Flask apps. In this session we would cover the basics of Flask  as well as see in depth how to develop a simple note-sharing flask application-ShareNote which would be similar to Fpaste.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I am a 3rd year Electronics and Communication Engineering student from NIT Durgapur . I am a foss enthusiast and a passionate  coder and currently working on a GSOC project. I have worked as a Python developer in a startup company Addittiveware which helped me enhance my knowledge on Flask.<br>\nBlog: <a href=\"http://elitaastridlobo.wordpress.com/\">http://elitaastridlobo.wordpress.com/</a><br>\nLink to Github: <a href=\"https://github.com/elitalobo/HomeTask1\">https://github.com/elitalobo/HomeTask1</a></p>",
      "description": "<p>Basically this session would highlight the following topics:<br>\n1. Introduction to Flask as a micro web framework<br>\n2. Brief Introduction to Werzeug and jinja2 template engine.<br>\n3.Templating and URL Routing in Jinja2 and Werzeug  with a Helloworld Flask application example.<br>\n4. Building note-sharing application which would be similar to Fpaste.<br>\n    The note sharing app would consist of login/signup and users and\n    share notes after logging in, and each note can be made private or public through option of setting a password for each shared note.</p>",
      "confirmed": false,
      "slides": "http://www.slideshare.net/elitaalobo1/flask-35316964",
      "phone": null,
      "name": "201-flask-introduction-to-its-cool-features-and-sharenote-app-construction",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/201-flask-introduction-to-its-cool-features-and-sharenote-app-construction",
      "submitted": "2014-05-24T08:27:51.210022Z"
    },
    {
      "links": "https://www.linkedin.com/in/sastryvedantam\r\n\r\nhttp://www.siliconvalley-codecamp.com/Presenter/2013/Sastry-Vedantam-8637\r\n\r\nhttp://www.stanford.edu/group/ttsdocs/cgi-bin/techbriefingvideos/2013/02/15/mysql-enterprise-server/",
      "proposer": "sastry vedantam ",
      "votes_count": null,
      "comments": 0,
      "id": 200,
      "votes": -3,
      "requirements": "",
      "title": "Python Scripting in Workbench",
      "section": "Software Development Tools",
      "votes_groups": null,
      "speaker": "sastry vedantam ",
      "objective": "<p>In this presentation, you will get an introduction to MySQL Workbench and How to enable Python in the MySQL workbench GRT Shell.  </p>",
      "type": "",
      "email": null,
      "bio": "<p>Sastry has 16+ years of rich, robust and diversified IT and Functional experience in multiple technologies spread across various domains, businesses and verticals.  His strengths are in pre-sales/program/delivery/account management and on time and on budget delivery of large projects adhering to the quality norms and to the utmost customer satisfaction.  He also has strong and proven expertise in providing Architectural Consultancy to global projects.  </p>\n<p>Joined Sun Microsystems in 2008 as Enterprise Solution Architect handling Deployment Architecture using JavaCAPS ( Middleware) applications. After MySQL Merger in to Sun and then later into Oracle worked different technologies including MySQL , Fusion Middleware Solutions. Currently working as sr. technical Consultant in the MySQL team.  </p>",
      "description": "<p>MySQL Workbench is a unified visual tool for database architects, developers, and DBAs. MySQL Workbench provides data modeling, SQL development, and comprehensive administration tools for server configuration, user administration, backup, and much more. MySQL Workbench is available on Windows, Linux and Mac OS X.  </p>\n<p>we will discuss how to enable Python in the MySQL Workbench GRT Shell. explains how to run a simple Python script using Workbench.  </p>\n<p>The Workbench Scripting Shell provides a means for entering and executing scripts. Through the use of the scripting shell, MySQL Workbench can support new behavior and data sources using code written in Lua and Python. The shell can also be used to explore the current Workbench GRT (Generic RunTime) facilities.  </p>\n<p>The scripting shell is not only useful for expanding MySQL Workbench. You can use a script file from the scripting shell command line to perform repetitive tasks programmatically.  </p>\n<p>The built-in grt module contains everything related to the GRT that\u2019s exposed to Python, including:  </p>\n<p>custom types for GRT lists, dicts and objects<br>\nwrappers for GRT classes, that can be used and instantiated as a normal Python class;<br>\nwrappers for registered GRT modules, that can be used like normal modules;<br>\na reference to the root node of the GRT globals tree;</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "200-python-scripting-in-workbench",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/200-python-scripting-in-workbench",
      "submitted": "2014-05-23T16:54:32.322989Z"
    },
    {
      "links": "Github - https://github.com/maninya\r\nGSoC - http://tinyurl.com/pm2kz83\r\nhttp://www.linkedin.com/in/maninya",
      "proposer": "Maninya M",
      "votes_count": null,
      "comments": 1,
      "id": 199,
      "votes": 14,
      "requirements": "<p>Python &gt;= 2.4 and &lt; 3. </p>",
      "title": "Introduction to SCons",
      "section": "Software Development Tools",
      "votes_groups": null,
      "speaker": "Maninya M",
      "objective": "<p>Attendees will learn how using SCons can help them greatly improve the build mechanism for their software, especially if they use make, and also, how easy it is to learn.  </p>\n<h2>Audience</h2>\n<p>Developers (need not be experts in Python) interested in using a powerful build tool written in Python, that has many advantages over the legacy make tool and more besides.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Maninya is an R&amp;D Engineer in the developer productivity tools team at DreamWorks Animation, India. She creates and manages developer workflows in the studio build infrastructure that uses SCons and also trains developers on the same. She graduated with an M.Tech in Information Technology from IIIT-Bangalore. </p>",
      "description": "<p>SCons is an open-source software construction tool, also known as build system, written in Python. It involves writing Python scripts or \u201cconfiguration files\u201d, to describe build environments and dependencies. For those familiar with linux, SCons could serve as a replacement to the whole GNU build system (autoconf, automake). Imagine reading elegant Python code to understand where your build went wrong instead of deciphering make commands!  </p>\n<h2>Detailed Abstract</h2>\n<p><strong>Why should you use SCons?</strong></p>\n<p>SCons gives you the power of a full-fledged programming language. So you can make it do pretty much anything you can write in Python. It\u2019s going to be far easier to understand, learn and extend. There are more advantages.  </p>\n<ul>\n<li>not tied to the external environment, hence easily reproducible</li>\n<li>more reliable - can use MD5 signatures to detect file changes</li>\n<li>automatic dependency analysis</li>\n<li>support for many platforms, compilers, and targets built-in.</li>\n<li>No need to reinvent the wheel, use already available Python functions</li>\n</ul>\n<p><strong>Basic Concepts</strong></p>\n<p><em>SCons environment</em></p>\n<p>SCons does not import any settings from the system environment, such as compiler flags or include paths, implicitly. This is so that it is reproducible in different environments and behaves in a predictable manner. Any such flags or paths need to be imported in the SConscripts explicitly.  </p>\n<p><em>Builder objects</em></p>\n<p>These are the fundamental components in SCons. They are called from SConscripts to build a set of dependent targets from the source files. They may use Scanner objects internally to scan source files for additional dependencies (like #includes).  </p>\n<p><em>Use pre-packaged builders and write your own</em></p>\n<p>SCons comes with pre-written builders for C/C++ and Java. You can import Python modules in your SConscripts. And if all that\u2019s not enough, you could easily write your own builder methods!  </p>\n<p><strong>Outline</strong></p>\n<ul>\n<li>\n<p><em>Why SCons and what is it?</em> (5min)</p>\n<ul>\n<li>What a good build tool does</li>\n<li>Difficulties with make/other tools</li>\n<li>How SCons is awesome (small examples)</li>\n</ul>\n</li>\n<li>\n<p><em>Basic Concepts</em> (8min)</p>\n<ul>\n<li>SConscripts, SConstructs, Builders and Scanners</li>\n<li>Build a simple program with SCons</li>\n</ul>\n</li>\n<li>\n<p><em>How does it work?</em> (8min)</p>\n<ul>\n<li>Overview of how SCons process works</li>\n<li>Some common tasks in SCons (example programs/snippets)</li>\n</ul>\n</li>\n<li>\n<p><em>Some history and some facts</em> (4min)</p>\n<ul>\n<li>Who wrote SCons?</li>\n<li>Who out there uses SCons?</li>\n</ul>\n</li>\n<li>\n<p><em>Questions</em> (5min) </p>\n</li>\n</ul>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "199-introduction-to-scons",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/199-introduction-to-scons",
      "submitted": "2014-05-23T12:01:55.783120Z"
    },
    {
      "links": "",
      "proposer": "Souradeep De",
      "votes_count": null,
      "comments": 1,
      "id": 198,
      "votes": 18,
      "requirements": "<ol>\n<li>RabbitMQ-server  </li>\n<li>python-pika  </li>\n<li>rabbitmqctl  </li>\n<li>RabbitMQ Management plugin</li>\n</ol>",
      "title": "Messaging with RabbitMQ",
      "section": "Core Python",
      "votes_groups": null,
      "speaker": "Souradeep De",
      "objective": "<p>Introduction to message queues. We will use RabbitMQ  to learn how to set up different segments of a messaging system (producer, exchange, queue, consumer).  </p>\n<p>After setting up the message queue, we will learn to monitor our queues using the rabbitmqctl (CLI) and a RabbitMQ Management plugin (GUI).</p>",
      "type": "",
      "email": null,
      "bio": "<p>I am a 3rd year Computer Science and Engineering student at Dr. B. C. Roy Engineering College, Durgapur.  </p>\n<p>Being passionate about python, I have worked on some personal and open source projects based on python.  </p>\n<p>I prefer working on web development projects, primarily, Django.<br>\nDid a lot of work while implementing asynchronous RabbitMQ messaging while interning at Bangalore based startup, HackerEarth, which might be worth sharing.</p>",
      "description": "<p>General introduction to AMQP (Advanced Message Queuing Protocol), message brokers in general and RabbitMQ.  </p>\n<p>Implementation of RabbitMQ message queues for different purposes:  </p>\n<ol>\n<li>\"Hello World!\" example, a basic producer - queue - consumer example.  </li>\n<li>Setting up Task Queues with fair dispatch of messages.  </li>\n<li>Publish/Subscribe example - Using \"fanout\" exchanges.  </li>\n<li>Logging Example - Using \"direct\" exchanges. Multiple queues. Messages routed to queues using binding key.  </li>\n<li>Using \"topic\" exchanges - Bind queues to exchanges in a specific pattern.  </li>\n</ol>\n<p>Demonstrating the rabbitmqctl command line tool, its usage and monitoring the task queues using RabbitMQ Management plugin.  </p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "198-messaging-with-rabbitmq",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/198-messaging-with-rabbitmq",
      "submitted": "2014-05-23T07:16:36.174708Z"
    },
    {
      "links": "http://anandology.com/\r\nhttp://anandology.com/python-practice-book/\r\nhttp://nbviewer.ipython.org/gist/anandology/7460837/advanced-python-day1.ipynb",
      "proposer": "Anand Chitipothu",
      "votes_count": null,
      "comments": 1,
      "id": 197,
      "votes": 22,
      "requirements": "<ul>\n<li>A laptop with Python 2.7 installed.</li>\n<li>Should be comfortable with Python and have basic idea of what decorators are.</li>\n</ul>",
      "title": "Decorators demystified",
      "section": "Workshops",
      "votes_groups": null,
      "speaker": "Anand Chitipothu",
      "objective": "<p>Workshop to understand decorators in detail. At the end of the workshop, the participants will be able to write decorators without any confusion, including the ones that take arguments.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Anand Chitipothu is a software consultant and trainer. He offers corporate trainings on Python and conducts public courses on<br>\nPython programming in Bangalore.  </p>\n<p>He is an active member of Indian Python community, coordinator of PyCon India 2012, organized PythonMonth in 2013 and elected member of PSF.  </p>\n<p>He is co-author of <a href=\"webpy.org\">web.py</a>, a micro web framework in Python and currently works for Internet Archive.</p>",
      "description": "<p>Decorators are heavily used in modern python libraries and web frameworks. But they are still mystery to many people. In this 3-hour long workshop I plan to explain the concept of decorators in detail using lot of examples and exercises.  </p>\n<p>This is a stripped and compressed version of 3-day advanced python course offered by the author, covering only decorators.  </p>\n<p>Outline:  </p>\n<ul>\n<li>Functions that take functions as arguments</li>\n<li>Functions returning functions</li>\n<li>Decorators</li>\n<li>Decorators that take arguments</li>\n<li>Building a simple web framework using decorators</li>\n</ul>\n<p>This workshop is targeted at people who have been using Python and want to decorators in detail.  </p>\n<p>This workshop is not suitable for people who are new to Python. If you have never used a decorator before, this course is not for you.</p>",
      "confirmed": true,
      "slides": "",
      "phone": null,
      "name": "197-decorators-demystified",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/197-decorators-demystified",
      "submitted": "2014-05-23T07:01:03.558671Z"
    },
    {
      "links": "http://scikit-learn.org/stable/\r\nhttps://store.continuum.io/cshop/anaconda/",
      "proposer": "Ajay Kumar",
      "votes_count": null,
      "comments": 4,
      "id": 196,
      "votes": 57,
      "requirements": "<p>This tutorial will require recent installations of numpy, scipy, matplotlib, scikit-learn, and ipython with ipython notebook.  </p>\n<p>For users who do not yet have these packages installed, a relatively painless way to install all the requirements is to use a distribution such as Anaconda CE, which includes all of the requirements, works on Mac, Linux, and Windows, and can be downloaded and installed for free.  </p>",
      "title": "Machine Learning with Scikit-learn",
      "section": "Scientific Computing",
      "votes_groups": null,
      "speaker": "Ajay Kumar",
      "objective": "<p>This tutorial will offer an introduction to the core concepts of machine learning, and how they can be easily applied in Python using Scikit-learn. We will use the scikit-learn API to introduce and explore the basic categories of machine learning problems, related topics such as feature selection and model validation, and the application of these tools to real-world data sets.</p>",
      "type": "",
      "email": null,
      "bio": "<p>A junior at SSN College of Engineering with main experience in Python.  </p>\n<p>My research interests lie in artificial life, and artificial intelligence using computer science and statistics as tools to understand life and its numerous aspects.  </p>\n<p>I have done numerous open source projects which includes  </p>\n<ol>\n<li>FlaskBlog -  An extensive tutorial on writing web applications in Python using the Flask microframework.  </li>\n<li>PyTransmit - With more than 2000 downloads per month, PyTransmit is a simple wrapper on top of the ftplib package which provides an object that can be used to make FTP calls to a PyTransmit installation.  </li>\n<li>HNScrapy - Hacker News Crawler based upon Scrapy which crawls the entire site and stores the links in the Database.  </li>\n<li>Pygram - Instagram-like image filters.  </li>\n</ol>\n<p>You can find the source code from my <a href=\"http://github.com/ajkumar25\">github</a> profile.  </p>\n<p>You can contact me at contact@pypix.com</p>",
      "description": "<p>Scikit-learn provides a range of supervised and unsupervised learning algorithms via a consistent interface in Python. It is licensed under a permissive simplified BSD license and is distributed under many Linux distributions, encouraging academic and commercial use.  </p>\n<p>The library is built upon the SciPy (Scientific Python) that must be installed before you can use scikit-learn. This stack that includes:  </p>\n<ol>\n<li>NumPy: Base n-dimensional array package  </li>\n<li>SciPy: Fundamental library for scientific computing  </li>\n<li>Matplotlib: Comprehensive 2D/3D plotting  </li>\n<li>IPython: Enhanced interactive console  </li>\n<li>Sympy: Symbolic mathematics  </li>\n<li>Pandas: Data structures and analysis  </li>\n</ol>\n<p>This tutorial will focus on the concepts underlying Machine Learning algorithms like supervised, unsupervised and reinforcement with real life examples and its usages in Big Data field.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "196-machine-learning-with-scikit-learn",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/196-machine-learning-with-scikit-learn",
      "submitted": "2014-05-22T13:56:27.771584Z"
    },
    {
      "links": "",
      "proposer": "Vaibhav Mishra",
      "votes_count": null,
      "comments": 0,
      "id": 195,
      "votes": 3,
      "requirements": "",
      "title": "Decorators and Context Managers in Python",
      "section": "Core Python",
      "votes_groups": null,
      "speaker": "Vaibhav Mishra",
      "objective": "<p>This session will cover Decorators and context managers in python and by the end of this session, users will understand how to use decorator and context manager in python.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Vaibhav Mishra is a software engineer at Dion global solutions in Mumbai. He is a Django Developer and is doing python development for 3 years. He's enthusiastic about open source, technology communities, and Python.</p>",
      "description": "<p>Decorator and context managers are very cool feature of python and this session will discuss them in detail, it would discuss how to use some of the present in standard library and how to write your own.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "195-decorators-and-context-managers-in-python",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/195-decorators-and-context-managers-in-python",
      "submitted": "2014-05-21T20:27:09.758037Z"
    },
    {
      "links": "http://click.pocoo.org/\r\nhttp://docopt.org/\r\nhttps://docs.python.org/dev/library/argparse.html",
      "proposer": "Vaibhav Mishra",
      "votes_count": null,
      "comments": 0,
      "id": 194,
      "votes": 13,
      "requirements": "",
      "title": "Building Awesome Command line applications in Python",
      "section": "Core Python",
      "votes_groups": null,
      "speaker": "Vaibhav Mishra",
      "objective": "<p>This session will cover tips and tricks on how to make command line application using python<br>\nIn this presentation I will cover various methodologies to make that app,  </p>\n<p>After the presentation users will be able to make simple to intermediate  command line applications in python</p>",
      "type": "",
      "email": null,
      "bio": "<p>Vaibhav Mishra is a software engineer at Dion global solutions in Mumbai. He is a Django Developer and is doing it for 3 years. He's enthusiastic about open source, technology communities, and Python.</p>",
      "description": "<p>This is a survey talk which will talk about different paths one can take on making a command line application<br>\nthe talk will cover<br>\n- A survey of various option/arguments parsing including docopt, argparse and click\n- Documenting the command line interface\n- Making your application a good Unix citizen -  exit codes, IO/Error streams \n- Making outputs compatible with Unix  pipes\n- Choosing default flags\n- Configuration approaches \n- App distribution - using pypi, github and Linux distributions\n- Testing of command line application\n- Making output lovely\n- Different python packages to ease your development</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "194-building-awesome-command-line-applications-in-python",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/194-building-awesome-command-line-applications-in-python",
      "submitted": "2014-05-21T20:19:59.023182Z"
    },
    {
      "links": "",
      "proposer": "Abhinav Agrawal",
      "votes_count": null,
      "comments": 1,
      "id": 193,
      "votes": 19,
      "requirements": "<p>A beginners knowledge of python and some interest in meta programming with python. A laptop having python installed will be desirable.</p>",
      "title": "Python Meta classes & Meta programming with python",
      "section": "Core Python",
      "votes_groups": null,
      "speaker": "Abhinav Agrawal",
      "objective": "<p>Objective of this session is to discuss about meta programming in general, use cases where meta programming is helpful and How can it be achieved in python. This session dives deep into python meta classes and meta programming.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Meta programming being my area of interest and having experience in C++ and python, I am diving deep into this topic.  </p>\n<p>In my 9 years of career at NEC and HCL Technologies, I have spent most of my time with object oriented programming and python. I hope, I would be able to deliver something really useful for participants.</p>",
      "description": "<p>In Python (and other languages), classes are themselves objects that can be passed around and introspected. Just as regular classes act as templates for producing instances, metaclasses act as templates for producing classes.  </p>\n<p>Python has always had metaclasses. The metaclass machinery became exposed much better with Python 2.2. Specifically, with version 2.2, Python stopped being a language with just one special (mostly hidden) metaclass that created every class object. Now, programmers can subclass the built-in metaclass type and even dynamically generate classes with varying metaclasses.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "193-python-meta-classes-meta-programming-with-python",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/193-python-meta-classes-meta-programming-with-python",
      "submitted": "2014-05-21T17:06:48.948557Z"
    },
    {
      "links": "",
      "proposer": "Soham Dan",
      "votes_count": null,
      "comments": 0,
      "id": 192,
      "votes": -4,
      "requirements": "<p>Basic programming knowledge in python.</p>",
      "title": "Building GUI for Python apps using Tkinter ",
      "section": "Software Development Tools",
      "votes_groups": null,
      "speaker": "Soham Dan",
      "objective": "<p>Introduction to Tkinter - a shared library of python for developing the Graphical User Interface (GUI) for any python app, and building a working application using it. </p>",
      "type": "",
      "email": null,
      "bio": "<p>I am a student of Computer Science and Engineering at Dr. B.C Roy Engineering College, Durgapur and i like building apps in python. Being very fascinated about building the GUI for any app, i recently started using Tkinter and is very satisfied with the ease, with which GUI apps can be made using it. I think everyone should try it.</p>",
      "description": "<ol>\n<li>Introduction to Tkinter  </li>\n<li>Exploring the basic features of Tkinter library.  </li>\n<li>Building a app in a step by step manner.  </li>\n<li>Manipulating some front-end features of the app.  </li>\n<li>Running and using the app. </li>\n</ol>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "192-building-gui-for-python-apps-using-tkinter",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/192-building-gui-for-python-apps-using-tkinter",
      "submitted": "2014-05-21T15:45:30.161883Z"
    },
    {
      "links": "https://launchpad.net/~vishalcdac07\r\nhttps://github.com/vishal-yadav\r\nhttp://www.linkedin.com/profile/view?id=48768005&trk=nav_responsive_tab_profile",
      "proposer": "vishal yadav",
      "votes_count": null,
      "comments": 0,
      "id": 191,
      "votes": 9,
      "requirements": "<ul>\n<li>A Linux machine with python 2.7 and taskflow library.</li>\n<li>Basics of Linux and python would be sufficient for this talk.</li>\n</ul>",
      "title": "TaskFlow: Python State Management Framework",
      "section": "Web Development",
      "votes_groups": null,
      "speaker": "vishal yadav",
      "objective": "<p>The objective of this talk is to introduce the audience about TaskFlow: State Management Framework and demonstration for library usage. </p>",
      "type": "",
      "email": null,
      "bio": "<ul>\n<li>Work experience of 7 years and currently associated with NEC Technologies. </li>\n<li>Designed and contributed to many significant python frameworks and tools for one of the major products of NEC Corporation in variety of categories including test automation, C++/Python integration, build/continuous integration, simulation, product features and plugins.</li>\n<li>For the past 3-4 months, have been active contributor in various OpenStack projects (Swift, Cinder etc.)</li>\n<li>Active speaker and presenter in various technical talks &amp; forums in the organization.</li>\n</ul>",
      "description": "<p>TaskFlow is a lightweight and efficient state management library. It was originally developed for OpenStack projects and has recently become popular and widely used across python community and projects for efficient state management.  </p>\n<p>The agenda for this discussion will be following  </p>\n<ul>\n<li>Motivation &amp; Expectation for State Management</li>\n<li>Usage Scenario</li>\n<li>Basic Concepts and Architecture</li>\n<li>Demonstration and usage of library</li>\n</ul>",
      "confirmed": false,
      "slides": "https://speakerdeck.com/vishalcdac07/python-statemanagement-taskflow",
      "phone": null,
      "name": "191-taskflow-python-state-management-framework",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/191-taskflow-python-state-management-framework",
      "submitted": "2014-05-21T15:37:29.124213Z"
    },
    {
      "links": "A draft of the prework: http://mysliderule.com/web-dev-intro\r\n(This will be refined for the purpose of the workshop)",
      "proposer": "Parul Gupta",
      "votes_count": null,
      "comments": 0,
      "id": 190,
      "votes": 24,
      "requirements": "<p>There are no prerequisites for this workshop. You don\u2019t even need to know coding.  </p>\n<p>However, the workshop day will be useful ONLY for people who have done majority of the pre-work. The learning will come from the self-paced curriculum, an online community, concluding with the hands-on session meant to clear doubts, tie the loose ends, and help you ship your first webapp!</p>",
      "title": "A \"flipped\" workshop on Web Development with Python & Django",
      "section": "Workshops",
      "votes_groups": null,
      "speaker": "Parul Gupta",
      "objective": "<p>The workshop will help the participants understand the fundamentals of Web-Development with Python/Django well enough that they are ready to build any app they want using resources on the web. We want to do this using an innovative \u201cflipped classroom\u201d methodology which teachers &amp; students around the world have found very effective. </p>",
      "type": "",
      "email": null,
      "bio": "<p>(Parul + 3 really smart pythonists will run the workshop. Names will be announced as soon as the workshop &amp; travel plans are final)</p>\n<p>Parul has been building software and doing cool research in a variety of areas like wireless networks, cloud computing and big data analytics for a decade. When she started her education startup SlideRule, she taught herself Python, Django and Web-Development using online resources. She has studied at IIT Bombay and University of California, worked at IBM Research and been named by MIT Technology Review India as a Top Innovator under 35.  </p>\n<p>Why we are the best people to do this:<br>\nThe \"Web Dev with Python/Django\u201d learning path got so popular that it was on the front page of HackerNews for one whole day. We are doing this because we are really passionate about open &amp; accessible education as a means to giving people employable skills. We started SlideRule to build the missing pieces for this movement to materialise.</p>",
      "description": "<p>The workshop will teach Web Development by building a real app (choice of an e-commerce website/a daily deal website/an aggregator) using Python/Django. Web development needs a vast set of skills, including databases, frontend, backend and dev tools, and it is hard to teach it effectively in 3 hours. We could focus on one part, say the Django framework, but the workshop becomes inaccessible for people who don\u2019t have knowledge of all the other prerequisites. Hence we want to use the flipped classroom methodology. All the workshop materials (video lectures, readings etc) will be prepared &amp; shared beforehand - here's a starting resource: <a href=\"http://mysliderule.com/web-dev-intro\">http://mysliderule.com/web-dev-intro</a> .  A mentor aided community forum will be setup to discuss any doubts you have as you go through the material. On the day of the workshop there will be practically no lecture time (maybe just 5 minutes of an opening note) and the entire 3 hours will be spent building and deploying the app in a team of 2. 3-4 mentors with expertise on HTML/CSS/JS/Python/Django/Git/Nginx will work with you whenever you need help.  </p>\n<p>The goal is to spend more time doing and problem-solving, rather than lecturing. Think of it as a lab session as opposed to a lecture.  </p>\n<p>In case you are curious to know more about the flipped class methodology, an interesting info graphic : <a href=\"http://www.livescribe.com/blog/education/2012/07/17/the-flipped-classroom-infographic/\">http://www.livescribe.com/blog/education/2012/07/17/the-flipped-classroom-infographic/</a>  </p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "190-a-flipped-workshop-on-web-development-with-python-django",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/190-a-flipped-workshop-on-web-development-with-python-django",
      "submitted": "2014-05-21T14:01:29.565336Z"
    },
    {
      "links": "",
      "proposer": "Rohit Gupta",
      "votes_count": null,
      "comments": 2,
      "id": 189,
      "votes": 8,
      "requirements": "",
      "title": "Dikhao - Index and relate resources over the internet",
      "section": "Infrastructure",
      "votes_groups": null,
      "speaker": "Rohit Gupta",
      "objective": "<p>Demonstrate, how an indexing service can be built for internet/cloud resources using python.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Rohit Gupta is a developer and foss evangelist. He is passionate about technology and have worked in the area of convergence of telephony over web. Some of the projects he has worked upon include automating the cloud management over Amazon Web Service using boto, enabling high availability, failover solution and auto-scaling to ensure zero downtime and un-interrupted services to customers. As a FOSS enthusiast, he was instrumental in organizing the first ever linux InstallFest, founded the GNU/Linux User Group and presented FOSS tech talks in his University.  </p>\n<p>Blog: <a href=\"http://rohit.io/\">http://rohit.io/</a>  </p>",
      "description": "<p>Open source project: <a href=\"https://github.com/rohit01/dikhao\">https://github.com/rohit01/dikhao</a>  </p>\n<p>In this project, I used Flask, gevent, redis and boto to create an indexing service over AWS. The utility can also relate different AWS resources and display them together (visit link for details).  </p>\n<p>The same concept can be applied to build an indexing service over any platform. This is particularly useful for devops operations and doing a root cause analysis.  </p>\n<p>Key Libraries: gevent, redis, flask and boto / Python client of the resource provider (In above case, boto - AWS).  </p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "189-dikhao-index-and-relate-resources-over-the-internet",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/189-dikhao-index-and-relate-resources-over-the-internet",
      "submitted": "2014-05-20T20:04:47.344455Z"
    },
    {
      "links": "https://play.google.com/store/apps/details?id=org.sauravsinghi.hday\r\n",
      "proposer": "Saurav Singhi",
      "votes_count": null,
      "comments": 4,
      "id": 188,
      "votes": 38,
      "requirements": "<p>Basic Python and comfortable with Linux</p>",
      "title": "Kivy - Python UI Library for Any Platform",
      "section": "Workshops",
      "votes_groups": null,
      "speaker": "Saurav Singhi",
      "objective": "<p>Introduction to app development using kivy and building a publishable application for android.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I am a student of Computer Science and Engineering at NIT Durgapur and have always been fascinated with python. Having used and built a working app using kivy and made available on the Play Store, (Link to the app in links) I believe kivy is a very powerful library and deserves more attention.</p>",
      "description": "<p>Session shall include instructions and information about:  </p>\n<ol>\n<li>Installing and setting up kivy  </li>\n<li>Building a simple 'hello world' app  </li>\n<li>Using a few useful features of kivy  </li>\n<li>Introduction to 'kv' language  </li>\n<li>Packaging a app for the android market</li>\n</ol>",
      "confirmed": false,
      "slides": "https://dl.dropboxusercontent.com/u/50870860/Kivy%20presentation.odp",
      "phone": null,
      "name": "188-kivy-python-ui-library-for-any-platform",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/188-kivy-python-ui-library-for-any-platform",
      "submitted": "2014-05-20T09:35:21.638940Z"
    },
    {
      "links": "",
      "proposer": "indu s",
      "votes_count": null,
      "comments": 2,
      "id": 187,
      "votes": 60,
      "requirements": "",
      "title": "Arduino,plotly and python",
      "section": "Embedded Python",
      "votes_groups": null,
      "speaker": "indu s",
      "objective": "<p>Exploring python api for plotly,implementing and interfacing using interesting arduino sensor motes.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Indu is a senior undergraduate student from computer science and engineering, got into python Development and has experience building web applications using the Google appengine platform and its services. She loves working on interesting cs projects and aspires to take photography as her hobby some day.</p>",
      "description": "<p>We will discuss how to implement sensor motes,mesh networks using ZigBee protocol and design scalable data ingestion architrecture...The discussion will cover implementation of various sensors motes eg (humidity,air quality,ECG,motion).</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "187-arduino-plotly-and-python",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/187-arduino-plotly-and-python",
      "submitted": "2014-05-20T01:08:13.812914Z"
    },
    {
      "links": "http://www.youtube.com/watch?v=smXbx3P91Uk (I was giving a talk about beanstalk but in Indonesian)",
      "proposer": "Vajrasky Kok",
      "votes_count": null,
      "comments": 4,
      "id": 186,
      "votes": 16,
      "requirements": "",
      "title": "Asyncio for Dummies",
      "section": "Core Python",
      "votes_groups": null,
      "speaker": "Vajrasky Kok",
      "objective": "<p>Explain asyncio to Python programmers who is new to asyncio. After attending this session, people will know what asyncio is and how to use it for basic cases and when they should use it.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I am a regular contributor to Python core:<br>\n<a href=\"http://hg.python.org/cpython/search/?rev=vajrasky&amp;revcount=200\">http://hg.python.org/cpython/search/?rev=vajrasky&amp;revcount=200</a></p>\n<p>I am a not-so-regular contributor to Django:<br>\n<a href=\"https://github.com/django/django/commits?author=vajrasky\">https://github.com/django/django/commits?author=vajrasky</a></p>\n<p>I am a creator of Wallpapoz:<br>\n<a href=\"https://github.com/vajrasky/wallpapoz\">https://github.com/vajrasky/wallpapoz</a></p>",
      "description": "<h1>What I will cover:</h1>\n<ul>\n<li>What asyncio is.\nExplain the bottleneck problem in I/O and the asynchronus concept and how asyncio is here to solve the I/O bottleneck problem and the comparison to thread-based solution (or forking-based solution).  </li>\n<li>Basic cases.\nVery very simple demonstration of asyncio code. Something like 'Hello World'.  </li>\n<li>How to solve real world problems?\nMove to more advanced problem. How to crawl many websites to get data? How to be a tcp server and receiving connection from many clients? How to outsource problems to external program and while waiting the result the python program still can do other things? All of these solutions will be compared to thread-based solution.  </li>\n</ul>\n<p>What I will not cover:<br>\n- The inner workings of asyncio.</p>",
      "confirmed": true,
      "slides": "http://vajrasky.net/wp-content/uploads/2014/08/asyncio_for_dummies.pdf",
      "phone": null,
      "name": "186-asyncio-for-dummies",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/186-asyncio-for-dummies",
      "submitted": "2014-05-19T15:51:50.362671Z"
    },
    {
      "links": "",
      "proposer": "shantanu oak",
      "votes_count": null,
      "comments": 2,
      "id": 185,
      "votes": 0,
      "requirements": "",
      "title": "Manage Amazon services using boto",
      "section": "Software Development Tools",
      "votes_groups": null,
      "speaker": "shantanu oak",
      "objective": "<p>boto is the most versatile module to manage AWS resources. I will discuss how to start / stop ec2 instances and redshift clusters using boto.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I have been using boto for about a year and found a number of aspects of it that I would like to share with others.</p>",
      "description": "<p>boto is the most versatile module to manage AWS resources. I will discuss how to start / stop ec2 instances and redshift clusters using boto.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "185-manage-amazon-services-using-boto",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/185-manage-amazon-services-using-boto",
      "submitted": "2014-05-19T09:58:44.074065Z"
    },
    {
      "links": "\"Let's talk testing with Selenium\" at PyCon India 2013: http://goo.gl/ufrnjG",
      "proposer": "Anisha Narang",
      "votes_count": null,
      "comments": 3,
      "id": 184,
      "votes": 11,
      "requirements": "<ul>\n<li>Preferred OS: Linux based (Fedora preferred) </li>\n<li>Browser: Firefox</li>\n</ul>",
      "title": "Test your web app with Selenium",
      "section": "Workshops",
      "votes_groups": null,
      "speaker": "Anisha Narang",
      "objective": "<p>To enable the participants to write automated tests for web applications. This will be a hands on session where you will get introduced to Selenium and gradually move towards writing tests using Selenium with Python bindings. This will include a brief on selenium, play and record using Selenium IDE, writing and maintaining the test scripts and test report generation. </p>",
      "type": "",
      "email": null,
      "bio": "<p>Anisha works as a QA at Red Hat, Pune. She writes test automation scripts, mostly for web UI. Worked with Selenium(with Python), Cucumber + Watir-webdriver. She enjoys testing at work and is keen on attending events/conferences.</p>\n<ul>\n<li>Blog: <a href=\"http://goo.gl/XeSa41\">http://goo.gl/XeSa41</a></li>\n</ul>",
      "description": "<p>This workshop is tailored for beginners willing to learn Selenium with Python as last year's talk on the same received a vibrant response from the audience.  </p>\n<ul>\n<li>Introduction to Selenium</li>\n<li>Brief about test automation and why/how is it a need</li>\n<li>Application under test will be provided to the participants, will start with the installations and setup</li>\n<li>Put your first step -&gt; use Selenium IDE and record/playback your test</li>\n<li>Get introduced to the Webdriver API (Selenium Python bindings)</li>\n<li>Start writing test scripts</li>\n<li>Learn how to generate test reports using HTMLTestRunner.py</li>\n<li>Brief on Lettuce and some of the best practices to follow</li>\n</ul>",
      "confirmed": true,
      "slides": "",
      "phone": null,
      "name": "184-test-your-web-app-with-selenium",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/184-test-your-web-app-with-selenium",
      "submitted": "2014-05-18T12:07:24.719016Z"
    },
    {
      "links": "",
      "proposer": "Gautam Jeyaraman",
      "votes_count": null,
      "comments": 0,
      "id": 183,
      "votes": 1,
      "requirements": "",
      "title": "Analysing unstructured data using gensim",
      "section": "Scientific Computing",
      "votes_groups": null,
      "speaker": "Gautam Jeyaraman",
      "objective": "<p>Learn the basics of text analysis using gensim. This includes building semantic models like lda, lsi and what to do with this extracted data.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I am Gautam Jeyaraman and I work in a startup. We specialize in text analysis and extracting insights from huge corpora containing unstructured data. Basically, I have worked in getting meaningful data out of large text dumps all the time.  Processing text data has always been a big task and people don't have a clue on what vectorizing their document means and where to proceed after they vectorize their documents. I can easily make both these points understandable and make sense on unstructured text analytics.</p>",
      "description": "<p>Text analytics is a growing field in computer science and extracting insights from unstructured data has always been a hard hill to climb. In this session, we will see some of the basic methods with which we can extract basic semantics like topic models and word vectors from our own data using gensim. Also, we will see what to do with this extracted data and how to go forward from this.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "183-analysing-unstructured-data-using-gensim",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/183-analysing-unstructured-data-using-gensim",
      "submitted": "2014-05-17T22:34:12.328946Z"
    },
    {
      "links": "http://github.com/vaidik/\r\nhttp://vaidikkapoor.info/\r\nhttps://speakerdeck.com/vaidik/queue-every",
      "proposer": "Vaidik Kapoor",
      "votes_count": null,
      "comments": 0,
      "id": 182,
      "votes": 10,
      "requirements": "",
      "title": "Data Heavy Lifting with Elasticsearch",
      "section": "Web Development",
      "votes_groups": null,
      "speaker": "Vaidik Kapoor",
      "objective": "<p>Understand what is Elasticsearch, what problems can it solve, the Python ecosystem around it and how we are using all of this at Wingify for search and analytics.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I am a software engineer based out of New Delhi, working for Wingify, a Delhi based bootstrapped startup that develops the A/B testing tool - Visual Website Optimizer (VWO). At Wingify, I am primarily focused on services, scalability and infrastructure engineering, which also happens to involve working with data and analytics and all the problems that come with it. I am an open-source enthusiast. In my free time, I evangelize and try to organize local meetups and watch movies.</p>",
      "description": "<p>Elasticsearch is a flexible and power open-source distributed search engine based on Apache Lucene. Made for distributed environments from the ground up, Elasticsearch is a pragmatic system that tries to be easy to work with, maintain and scale where every other search system fails. Its REST APIs and support for JSON documents makes it extremely simple and flexible to use. While Elasticsearch was built for search, its querying, filtering and faceting capabilities have made Elasticsearch eligible to be one of the few simple solutions available for real-time analytics. We, at Wingify, have been using Elasticsearch for search and analytics both and it has proven to be an amazing solution for our needs.  </p>\n<p>This talk will be about:  </p>\n<ul>\n<li>What is Elasticsearch? - In a gist, its querying and filtering capabilities and the flexibility its APIs have to offer.</li>\n<li>Python libraries to work with Elasticsearch.</li>\n<li>What kind of problems does it solve for us at Wingify and what features of Elasticsearch do we use for each problem.<ul>\n<li>Search</li>\n<li>Analytics</li>\n</ul>\n</li>\n<li>An architectural insight into our current setup to solve the above problems<ul>\n<li>A glance of what Elasticsearch looks like in production in our infra</li>\n<li>What other tools are we using to work with Elasticsearch to make it of use to us</li>\n<li>Indexing and querying</li>\n<li>Maintenance and monitoring</li>\n<li>Scalability problems<ul>\n<li>Sharding strategies and what worked for us</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>The things about Elasticsearch we learned and what helped us the most<ul>\n<li>Understanding mappings and how they can help</li>\n<li>The new Aggregations Framework</li>\n</ul>\n</li>\n<li>The problems we faced with Elasticsearch<ul>\n<li>Avoiding the common gotchas</li>\n<li>Problems with the Python library</li>\n</ul>\n</li>\n<li>A few best practices and tips from our experience</li>\n</ul>\n<p><strong><em>Note</em></strong>: this talk is not a tutorial. It briefly introduces Elasticsearch just enough for the user to understand what it does and moves on to real-world usage scenario.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "182-data-heavy-lifting-with-elasticsearch",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/182-data-heavy-lifting-with-elasticsearch",
      "submitted": "2014-05-17T22:07:56.770365Z"
    },
    {
      "links": "",
      "proposer": "Vaibhav Mishra",
      "votes_count": null,
      "comments": 0,
      "id": 181,
      "votes": 2,
      "requirements": "",
      "title": "Write Faster Django Tests - Path to Solid Test coverage and TDD",
      "section": "Software Development Tools",
      "votes_groups": null,
      "speaker": "Vaibhav Mishra",
      "objective": "<p>Effective approach for developers using TDD- I will cover various techniques that can be used to make tests faster, these methods will save precious development time and frustration and various methodology to follow TDD in django codebase,<br>\nBy the end of it you will know<br>\n1. How to Run tests faster<br>\n2. How to write faster unit tests<br>\n3. Make use of coverage statistics to visualize tests</p>",
      "type": "",
      "email": null,
      "bio": "<p>Vaibhav Mishra is a software engineer at Dion global solutions in Mumbai. He is a Django Developer and is doing it for 3 years. He's enthusiastic about open source, technology communities, and Python. </p>",
      "description": "<p>The Session will cover various techniques to make your tests faster,<br>\noften when tests are slow, they are altogether avoided and put into a dungeon where nobody can see it, this talk will touch into various methods which can be employed to ensure faster tests  </p>\n<ol>\n<li>Use mocking to avoid hitting database / network  </li>\n<li>Use simple database engines for faster test processing  </li>\n<li>an introduction to mocking with a flavor of django  </li>\n</ol>\n<p>Refer slides to look at the content although it is in draft right now.</p>",
      "confirmed": false,
      "slides": "https://speakerdeck.com/vinu76jsr/writing-faster-django-tests",
      "phone": null,
      "name": "181-write-faster-django-tests-path-to-solid-test-coverage-and-tdd",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/181-write-faster-django-tests-path-to-solid-test-coverage-and-tdd",
      "submitted": "2014-05-17T16:22:34.799884Z"
    },
    {
      "links": "http://geeklab.in\r\nhttp://anuragkr.in\r\n\r\n\r\n",
      "proposer": "Anurag  Kumar",
      "votes_count": null,
      "comments": 2,
      "id": 180,
      "votes": 17,
      "requirements": "<p>Attendees should already have a basic knowledge of Python, Flask and a familiarity with command-line tools.<br>\nThe talk will use a simple (pre-made) Flask application.  </p>",
      "title": "Deploying a simple Flask app to heroku",
      "section": "Infrastructure",
      "votes_groups": null,
      "speaker": "Anurag  Kumar",
      "objective": "<p>This talk focuses on deployment of Flask application to Heroku, one of the most popular cloud hosting services. The talk covers some of the key parameters required to deploy web applications on Heroku.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I am passionate about Python and web technology, the open source variety in particular. I am co-founder of <a href=\"http://geeklab.in\">GeekLab</a> , an early staged startup, where we are working on bridging the gap that exists between the student fraternity and the corporate sector.  </p>\n<p>Most of my projects are written in Python and are hosted on <a href=\"https://github.com/anurag619\">Github</a></p>",
      "description": "<p>Now that you have completed your Flask app, you would definetly wish your peers to review/appraise your work. You will be amazed how hassle free deploying to Heroku is.  </p>\n<p>This session will give the attendee an overview on creating and deploying a Flask web app to Heroku.<br>\nThe talk will also cover viewing and monitoring application logs, adding a database, the basis of add-ons, dynos and its impact on performance of the app.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "180-deploying-a-simple-flask-app-to-heroku",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/180-deploying-a-simple-flask-app-to-heroku",
      "submitted": "2014-05-16T10:22:05.347306Z"
    },
    {
      "links": "http://osidays.com/osidays/speaker-lineup/ryusuke-kajiyama-2/",
      "proposer": "Ryusuke Kajiyama",
      "votes_count": null,
      "comments": 0,
      "id": 179,
      "votes": 3,
      "requirements": "",
      "title": "Sharding and scale-out using Python-based MySQL Fabric",
      "section": "Web Development",
      "votes_groups": null,
      "speaker": "Ryusuke Kajiyama",
      "objective": "<p>In this presentation, you will get an introduction to MySQL Fabric and how it support high-availability and sharding as well as how to write and manage applications taking advantage of the latest features of MySQL Fabric.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Ryusuke Kajiyama is Open Source Specialist with 10+ years of experience of systems design using MySQL and open source solutions. He originally joined MySQL AB, and is currently managing MySQL Sales Consultant team of Asia Pacific region at Oracle. Prior to join MySQL, he was Consultant at Nomura Research Institute, working on enterprise systems design with Oracle Database, WebLogic, Solaris, and various Open Source software including MySQL, JBoss and Linux. He is a Co-Founder of Japan JBoss Users Group.</p>",
      "description": "<p>MySQL Fabric is new GPL licensed open source software written in Python released by the MySQL Engineering team at Oracle. It make management of farms of MySQL servers easy and available for both applications with small and large number of servers.  </p>\n<p>In order to provide resilience to failures, MySQL Fabric organizes the servers in groups and deploys high-availability solutions within each group. The concept is independent of the implementation, which can be done using traditional asynchronous primary backup approach, MySQL Cluster or solutions with shared or replicated storage. In the first version, availability is implemented using the asynchronous primary backup approach.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "179-sharding-and-scale-out-using-python-based-mysql-fabric",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/179-sharding-and-scale-out-using-python-based-mysql-fabric",
      "submitted": "2014-05-16T05:03:24.278625Z"
    },
    {
      "links": "http://in.pycon.org/funnel/2013/44-chugging-flask-gyaan-from-building-rest-apis-for-an-android-app",
      "proposer": "Aravind Krishnaswamy",
      "votes_count": null,
      "comments": 6,
      "id": 178,
      "votes": 18,
      "requirements": "<p>Hmm, a state of Zen perhaps?</p>",
      "title": "Gur Mra bs Clguba, ol Gvz Crgref",
      "section": "Core Python",
      "votes_groups": null,
      "speaker": "Aravind Krishnaswamy",
      "objective": "<p><strong>First, take a look at the lines of code below.</strong></p>\n<pre class=\"syntax\"><code>s = &quot;&quot;&quot;Gur Mra bs Clguba, ol Gvz Crgref\n\nOrnhgvshy vf orggre guna htyl.\nRkcyvpvg vf orggre guna vzcyvpvg.\nFvzcyr vf orggre guna pbzcyrk.\nPbzcyrk vf orggre guna pbzcyvpngrq.\nSyng vf orggre guna arfgrq.\nFcnefr vf orggre guna qrafr.\nErnqnovyvgl pbhagf.\nFcrpvny pnfrf nera'g fcrpvny rabhtu gb oernx gur ehyrf.\nNygubhtu cenpgvpnyvgl orngf chevgl.\nReebef fubhyq arire cnff fvyragyl.\nHayrff rkcyvpvgyl fvyraprq.\nVa gur snpr bs nzovthvgl, ershfr gur grzcgngvba gb thrff.\nGurer fubhyq or bar-- naq cersrenoyl bayl bar --boivbhf jnl gb qb vg.\nNygubhtu gung jnl znl abg or boivbhf ng svefg hayrff lbh'er Qhgpu.\nAbj vf orggre guna arire.\nNygubhtu arire vf bsgra orggre guna *evtug* abj.\nVs gur vzcyrzragngvba vf uneq gb rkcynva, vg'f n onq vqrn.\nVs gur vzcyrzragngvba vf rnfl gb rkcynva, vg znl or n tbbq vqrn.\nAnzrfcnprf ner bar ubaxvat terng vqrn -- yrg'f qb zber bs gubfr!&quot;&quot;&quot;\n\nd = {}\nfor c in (65, 97):\n    for i in range(26):\n        d[chr(i+c)] = chr((i+13) % 26 + c)\n\nprint &quot;&quot;.join([d.get(c, c) for c in s])</code></pre>\n\n\n<p>It's nice to know <em>what</em> the output is, but that's <em>not</em> the point.  </p>\n<p>Attend this session, and you'll understand <em>why</em> the output of this program matters.  </p>",
      "type": "",
      "email": null,
      "bio": "<p>I'm a hands on entrepreneur and tech executive.  </p>\n<p><a href=\"http://www.twitter.com/twitortat\">http://www.twitter.com/twitortat</a></p>\n<p><a href=\"www.arg0s.in\">www.arg0s.in</a></p>",
      "description": "<p>This session will talk about 'The Python Way', the guiding philosophy that's a part of every line of code we write.  </p>\n<ul>\n<li>What do the lines mean?</li>\n<li>Why do they matter? Are there some that you disagree with?</li>\n<li>If there was a 20th line, what would it be?</li>\n<li>How can you incorporate this philosophy into what you do?</li>\n</ul>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "178-gur-mra-bs-clguba-ol-gvz-crgref",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/178-gur-mra-bs-clguba-ol-gvz-crgref",
      "submitted": "2014-05-15T19:47:53.333861Z"
    },
    {
      "links": "http://en.wikipedia.org/wiki/Bayesian_inference\r\nPyMC tutorial http://pymcmc.readthedocs.org/en/latest/tutorial.html\r\nProbabilistic programming and Bayesian Methods for Hackers (using PyMC) http://nbviewer.ipython.org/github/CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers/blob/master/Prologue/Prologue.ipynb\r\nWhy Probabilistic Programming Matters - zinkov.com/posts/2012-06-27-why-prob-programming-matters/\r\nPaper with introduction and state-of-the art inference techniques for infering with probabilistic programs -  http://research.microsoft.com/apps/pubs/default.aspx?id=208585",
      "proposer": "Shashi Gowda",
      "votes_count": null,
      "comments": 4,
      "id": 177,
      "votes": 48,
      "requirements": "<p>A laptop with PyMC and its dependencies installed (optional). Preferably with IPython.</p>",
      "title": "Machine learning for mortals: probabilistic programming with PyMC",
      "section": "Scientific Computing",
      "votes_groups": null,
      "speaker": "Shashi Gowda",
      "objective": "<ul>\n<li>\n<p>Introduction to Probabilistic Programming - a powerful new way of expressing machine learning problems that does not require a rigorous understanding of probability theory or machine learning itself.</p>\n</li>\n<li>\n<p>Learn about Markov chain Monte Carlo - the machinery behind PyMC.</p>\n</li>\n<li>\n<p>Explore some examples which exhibit PP's value in reducing complexity of an implementation, and while at it implement a few common ML algorithms as simple probabilistic programs using PyMC.</p>\n</li>\n<li>\n<p>My hope is that attendees go back knowing about a new tool they can use to easily explore probabilistic models for their data and make hypotheses more fearlessly.</p>\n</li>\n</ul>",
      "type": "",
      "email": null,
      "bio": "<p>I am Shashi (<a href=\"http://github.com/shashi\">Github</a> | <a href=\"http://twitter.com/g0wda\">Twitter</a>), an autodidact, polyglot python lover, NITK Surathkal batch of '14 alumnus (hopefully).  </p>\n<p>In the past, I have been a GSoC student for StatusNet (\u201810, \u201811), Sahana Eden (\u201812) and currently for Julia Language (<a href=\"http://www.google-melange.com/gsoc/project/details/google/gsoc2014/g0/5113880120393728\">my project</a> is to create interactive IJulia plots and widgets). I love thinking about code, and sometimes even <a href=\"http://github.com/shashi\">write some</a>. My latest python project is called <a href=\"http://github.com/shashi/phosphene\">phosphene</a>. It\u2019s a library for audio visualization using which I ran visualizations on a handmade disco ball, and other <a href=\"https://www.youtube.com/watch?v=cLFl2TwhwGo\">psychedelic peripherals</a>. I work on a data (ECoG) analysis project under Dr. Kaushik Majumdar from ISI, Bangalore. In my free time I  evangelize purely functional programming, take Paradigms of Programming classes for juniors, read slow, heavy books and listen to intricate music.</p>",
      "description": "<p>This talk assumes no background in Machine Learning or inference and aims to start from first principles. Distributions and (minimal) jargon thrown in will be explained and a general framework for thinking about inference problems will be shown.  </p>\n<p><strong>Introduction</strong></p>\n<p>The most interesting real-world processes involve uncertainty. Tons of data is amassed everyday from such processes in varied fields: science, engineering, medicine, business, the Internet etc. Expertise in probability theory and machine learning has been essential for programmers to employ computers to model and ask the questions about the process. <strong>Probabilistic programming</strong> aims to make such modeling accessible to the working programmer with enough domain knowledge, but not necessarily with a thorough knowledge of probability theory or machine learning. Here\u2019s how:  </p>\n<p>Simulating a random process is easy: you instruct the computer to proceed in the same way as the process--from causes to effects. Inference is the harder, reverse problem: given some evidence about the outcomes observed, the computer needs to infer what configuration of the world could have resulted in the outcomes, and with what certainty. The natural approach to inference is the <a href=\"http://en.wikipedia.org/wiki/Bayesian_inference\">Bayesian method</a> (grown from the <a href=\"http://en.wikipedia.org/wiki/Bayes%27_rule\">Bayes\u2019 rule</a>). To encode Bayesian inference as a program you will need to do derivations that require strong mathematical background and quickly become mind boggling. What if one could do inference just by creating a plausible simulation of the process?  </p>\n<p><strong><a href=\"http://en.wikipedia.org/wiki/Monte_Carlo_method\">Monte Carlo</a></strong> techniques let us do exactly that. Answers got with Monte Carlo are approximately equivalent to those from Bayesian inference without the overhead of the abstract thinking.</p>\n<p>To estimate the expected value of a function <em>f(x)</em> [where x is a vector of random variables in a probabilistic process], one repeats the experiment N times and notes down the value of the function as observed in each trial. The average of these observations is then returned as the estimated expected value of <em>f</em>. This estimation gets better as N gets larger.  </p>\n<p>The function <em>f</em> can be all sorts of things. As a simple example, suppose you would like to estimate the probability that a biased coin comes up head. Your function <em>f</em> will be 1 if a trial results in a head, 0 otherwise. Suppose you toss the coin 10000 times and find that it came out heads 4000 times, you  can now be fairly certain that the probability of getting heads is around 0.4 (average value of <em>f</em>). One famous example used to illustrate Monte Carlo is a method to estimate the value of Pi. Let a circle of diameter d be inset inside a square of edge d, and N random points be chosen from the square. If K of these points also fall inside the circle, then the ratio of the area of the circle to the square is approximately K/N. But we know that this ratio is equal to Pi x (d^2/4) / d^2 (= Pi/4) and thus can approximate the value of Pi. In this case <em>f</em> could have been 4 if the point falls inside the circle, 0 otherwise.  </p>\n<p><img alt=\"Monte carlo simulation for approximating pi\" src=\"http://upload.wikimedia.org/wikipedia/commons/thumb/8/84/Pi_30K.gif/220px-Pi_30K.gif\"></p>\n<p><strong><a href=\"http://en.wikipedia.org/wiki/Markov_chain_Monte_Carlo\">Markov Chain Monte Carlo (MCMC)</a></strong> is an family of MC techniques that are used to estimate integrals, in our case the integrals will be posterior distributions (values of <em>f</em>). You can simply describe the process at hand in terms of well known probability distributions (Bernoulli, Gaussian, Poisson, Uniform etc. -- you need not know the full mathematical details of the distributions, just their high level nature will suffice). Parameters of these distributions can then be inferred by running MCMC on the model leading us to a configuration of the world that would most likely lead to the known evidence (MCMC runs repeated trials incorporating observed data, updating beliefs about these parameters). Here, the function we are estimating, <em>f</em>, can be, for example, the rate of occurrence of coal mine disasters (Poisson process) or say, the probability that a given message is spam, and so on.</p>\n<p><strong>Outline of the talk:</strong></p>\n<ul>\n<li>Conceptual overview of the Math<ul>\n<li>Random processes</li>\n<li>Probability and probability distributions</li>\n<li>Bayesian inference<ul>\n<li>Bayes' theorem</li>\n<li>Conjugate prior distributions</li>\n<li>Examples that show complexity of Bayesian inference</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>The Monte Carlo method<ul>\n<li>Example: <a href=\"http://arxiv.org/pdf/1404.1499v2.pdf\">calculating Pi</a></li>\n<li>Markov Chain Monte Carlo</li>\n</ul>\n</li>\n<li>Generative models and model fitting with MCMC<ul>\n<li>Includes an overview of PyMC</li>\n</ul>\n</li>\n<li>Examples (Discrete)<ul>\n<li>Biased coin toss example - inferring x in Bernoulli(x)</li>\n<li>Judea Pearl\u2019s earthquake alarm (multiple Bernoulli processes)</li>\n<li>Lotka-Volterra predator prey model</li>\n</ul>\n</li>\n<li>Examples (Common ML algorithms)<ul>\n<li>Linear regression</li>\n<li>Naive Bayes</li>\n<li>K-means clustering</li>\n</ul>\n</li>\n<li>Conclusion</li>\n</ul>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "177-machine-learning-for-mortals-probabilistic-programming-with-pymc",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/177-machine-learning-for-mortals-probabilistic-programming-with-pymc",
      "submitted": "2014-05-15T19:41:55.241040Z"
    },
    {
      "links": "https://github.com/sivaa/django-workshop (Used in http://www.meetup.com/BangPypers/events/125797552/)\r\nhttps://github.com/sivaa/django-tdd (Used in http://www.meetup.com/BangPypers/events/125797622/)\r\n\r\nhttp://www.slideshare.net/sivasubramaniam3/whats-new-in-django-16\r\nhttp://www.slideshare.net/sivasubramaniam3/introduction-to-test-driven-development-32882759\r\nhttp://www.slideshare.net/sivasubramaniam3/python-for-high-school-programmers\r\nhttp://www.slideshare.net/sivasubramaniam3/introduction-to-browser-internals\r\nhttp://www.slideshare.net/sivasubramaniam3/introduction-to-cloud-computing\r\nhttp://www.slideshare.net/sivasubramaniam3/web-sockets-in-java-ee-7-javaone-2013\r\n",
      "proposer": "Sivasubramaniam Arunachalam",
      "votes_count": null,
      "comments": 0,
      "id": 176,
      "votes": 12,
      "requirements": "<p>The participants are expected to be familiar with basic web related stuffs like HTTP, HTML, CSS, Javascript, MVC concepts and SQL.  </p>\n<p>Prerequisites:<br>\nLinux or Windows<br>\nPython 2.7.x<br>\nDjango 1.6.x<br>\nSelenium<br>\nGit<br>\nYour favorite text editor or IDE<br>\nA modern web browser  </p>\n<p>Setup Instrucutions:<br>\n(Windows) <a href=\"https://gun.io/blog/setting-up-a-django-project/\">https://gun.io/blog/setting-up-a-django-project/</a> </p>\n<p>(Linux) <a href=\"http://darrenma.wordpress.com/2012/09/12/setting-up-my-django-environment-for-ubuntu/\">http://darrenma.wordpress.com/2012/09/12/setting-up-my-django-environment-for-ubuntu/</a></p>",
      "title": "Getting Started with Django",
      "section": "Workshops",
      "votes_groups": null,
      "speaker": "Sivasubramaniam Arunachalam",
      "objective": "<p>This workshop will focus on how to get started with Django. We will be building a small usable web application which involves the core concepts of Django framework like models, forms, templates and admin interface, etc.. During the course of the workshop, the best practices for core areas and Test Driven Development strategies will be discussed. At the end, suggestions will be provided to take the the knowledge forward with the required resources.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Senior developer at NetApp India Private Limited and working with Django from 0.95.  </p>",
      "description": "<p>The workshop will starts with setting up the correct project structure, TDD specific environments and a successful hello world with MTV flow using various Django components.<br>\nAfter that a web application to maintain the personal movie catalog will be developed iteratively using 11 different steps. At the end, it will be deployed to the production like environment using nginx and uWSGI.  </p>",
      "confirmed": true,
      "slides": "",
      "phone": null,
      "name": "176-getting-started-with-django",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/176-getting-started-with-django",
      "submitted": "2014-05-15T13:32:04.369370Z"
    },
    {
      "links": "http://in.linkedin.com/pub/unais-t/4b/a88/321\r\nhttps://github.com/unais\r\nwww.ros.org\r\nhttp://unais-tp.blogsopt.com/",
      "proposer": "Unais T",
      "votes_count": null,
      "comments": 3,
      "id": 175,
      "votes": 20,
      "requirements": "<p>If you want to execute some quick code snippets , I am recommending you to bring a Laptop (Ubuntu 12.04) with pre-installed installed ROS  </p>\n<p><a href=\"http://wiki.ros.org/hydro/Installation/Ubuntu\">http://wiki.ros.org/hydro/Installation/Ubuntu</a></p>",
      "title": "Introduction to Robotics with ROS(Robotic Operating System) & Python",
      "section": "Embedded Python",
      "votes_groups": null,
      "speaker": "Unais T",
      "objective": "<p>This talk will focus on how Python is  used in Robotics. This will give you a good introduction to ROS(Robotic Operating System) with python and how it used in advanced Robotics.  </p>\n<p>Here I will demonstrate how to program a simple joystick controlled robot using python and ROS  </p>",
      "type": "",
      "email": null,
      "bio": "<p>I am FOSS &amp; Python enthusiast. I have about two year experience with<br>\nrobotics and python.  </p>\n<p>Currently I am working as Robotics engineer at Asimov Robotics Pvt Ltd. </p>",
      "description": "<p>If you love Robotics, ROS (Robot Operating System) is an unavoidable tool for you. If you are develop it using python it makes your life more easy.  </p>\n<p>ROS provides libraries and tools to help you to create robot applications. It provides hardware abstraction, device drivers, libraries, visualizers, message-passing, package management, and more.It provides operating system-like functionality on a heterogeneous computer cluster  </p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "175-introduction-to-robotics-with-ros-robotic-operating-system-python",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/175-introduction-to-robotics-with-ros-robotic-operating-system-python",
      "submitted": "2014-05-15T06:29:40.386911Z"
    },
    {
      "links": "Coming Soon - Live Demo Link",
      "proposer": "Abhishek Hingnikar",
      "votes_count": null,
      "comments": 3,
      "id": 174,
      "votes": 31,
      "requirements": "<ul>\n<li>Basics of Python.</li>\n<li>Some knowledge of Linux is appreciated.</li>\n<li>Pre-installed nltk, scikit-learn would be amazing :D</li>\n<li>Going through <a href=\"http://nltk.org/book/\">http://nltk.org/book/</a> it would be really appreciated but necessary.</li>\n</ul>",
      "title": "Using NLTK & SciPy to build a small task bot accepting natural language",
      "section": "Scientific Computing",
      "votes_groups": null,
      "speaker": "Abhishek Hingnikar",
      "objective": "<p>We will be building a small RESTful bot in flask which performs simple tasks on Natural Language queries like \"Make a Note\", using nltk,scikit-learn.  </p>\n<p>Whats for the listener :  </p>\n<ul>\n<li>A real world use case and example of nltk and machine learning in action</li>\n<li>A high level understanding of how these systems work </li>\n<li>The code methodology can be expanded to make self versions of siri (small case)</li>\n<li>A rather not so booky approach on ml</li>\n</ul>",
      "type": "",
      "email": null,
      "bio": "<p>I love Automation.  </p>\n<p>I love Python.  </p>\n<p>I love Sharing and Learning.  </p>\n<p>I love the web-stack.  </p>\n<p>And  </p>\n<p>I love to do this all together!  </p>\n<p>I am currently a developer at MidNode and a founder of a startup which deals primarily with natural language and machine learning, Our product is in pre-alpha and we are planning for a mid-august / september launch.  </p>\n<p>Our whole techstack is python based (infact the same stack i would be discussing in this talk) and hence I will be giving some tips and suggestions on common pitfalls aswell.  </p>\n<p>In past I have worked on projects like <a href=\"http://pixter.in/\">Pixter</a> and <a href=\"http://colorbay.me/\">Colorbay</a> at MetaRain in past.  </p>\n<p>Some Cool stuff i did with web-stack :<br>\n<a href=\"http://codepen.io/darkyen/\">http://codepen.io/darkyen/</a></p>",
      "description": "<p>Almost everybody today wants to get their share on natural language processing, machine learning etc. We are on the stage where practical applications of systems using natural language as input and machine learning and their own intellect to find solutions upto some extent.  </p>\n<p>This talk will deal with some higher level logic involved in building a bot which is able to perform simple tasks like  </p>\n<ul>\n<li>Taking a Note,</li>\n<li>Sending a message,</li>\n<li>Showing a contact \netc.  </li>\n</ul>\n<p>The interface will be done in web but we can abstract that out since our apis will be RESTful :-) </p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "174-using-nltk-scipy-to-build-a-small-task-bot-accepting-natural-language",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/174-using-nltk-scipy-to-build-a-small-task-bot-accepting-natural-language",
      "submitted": "2014-05-14T20:07:21.734880Z"
    },
    {
      "links": "http://retask.readthedocs.org",
      "proposer": "Kushal Das",
      "votes_count": null,
      "comments": 1,
      "id": 173,
      "votes": 14,
      "requirements": "",
      "title": "Discovering distributed task queue in its simplest form using Retask",
      "section": "Core Python",
      "votes_groups": null,
      "speaker": "Kushal Das",
      "objective": "<p>The primary objective of this talk is to present Retask as a distributed Task/Job queues system.<br>\nRetask uses Redis in the backend and keeps the data in JSON format.<br>\nAfter the talk people will have the knowledge required<br>\nto start using Retask in their own projects as distributed queue.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Kushal Das is a core developer of CPython. He is a Fedora Ambassador and also director at Python Software Foundation.  </p>\n<p>He is a regular speaker in different technical conferences including previous PyCon(s) and also does Python workshops in various events &amp; engineering colleges.  </p>\n<p>He also wrote a beginner Python book called Python for you and me which is targeted to the students for fast paced learning and available freely online.</p>",
      "description": "<p>Ever thought of having a distributed task queue ready to be used and yet very simple ?<br>\n<a href=\"http://retask.readthedocs.org\">Retask</a> is a distributed task queue system written in Python. It has one of the simplest API ever\nwritten for a distributed task queue. It supports both Python 2.x and 3.x.  </p>\n<p>The talk will demonstrate:  </p>\n<ul>\n<li>Using queues can be easy!</li>\n<li>API (5 tiny methods, I promise)</li>\n<li>Asynchronous &amp; synchronous communication between workers and producers.</li>\n<li>Real life use cases in Fedora Infrastructure and inside Red Hat.</li>\n</ul>\n<h2>Talk outline</h2>\n<ul>\n<li>Introduction to Retask</li>\n<li>Retask <em>is not a message queue</em>. It is not AMQP or zmq.</li>\n<li>\n<p>Retask is for creating Task/Job queues\n(All above is for the basic introduction of the library and reason I started writing it).\n^^ 8 minutes</p>\n</li>\n<li>\n<p>Having that simplest queue (First example demoed.)</p>\n</li>\n<li>\n<p>Asynchronous result passing example, showing non-blocking calls from Retask.\n(We will have 1 producer and two workers, workers will return some result data in async non blocking calls)\n^^ 5 minutes</p>\n</li>\n<li>\n<p>Synchronous result passing example, showing blocking calls  from Retask.\n(Using blocking calls, we will try the same example shown above.)\n^^ 5 minutes</p>\n</li>\n<li>\n<p>Use cases inside Fedora Infrastructure: Async Caching in Fedora Packages App &amp; Darkserver \nproject.  </p>\n</li>\n<li>Use cases inside Red Hat</li>\n</ul>\n<p>^ ^ 5 minutes</p>\n<ul>\n<li>Performance tips</li>\n</ul>\n<p>^^  2 minutes</p>\n<p>Rest for QA</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "173-discovering-distributed-task-queue-in-its-simplest-form-using-retask",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/173-discovering-distributed-task-queue-in-its-simplest-form-using-retask",
      "submitted": "2014-05-14T15:51:11.989695Z"
    },
    {
      "links": "Extending Python with C/C++ - https://docs.python.org/2/extending/extending.html\r\n\r\nTalk given at conf.kde.india - http://kde.in/content/one-app-rule-all-your-media",
      "proposer": "Sinny Kumari",
      "votes_count": null,
      "comments": 5,
      "id": 172,
      "votes": 24,
      "requirements": "<p>Basic knowledge of C/C++ and Python</p>",
      "title": " Interfacing Python with C/C++",
      "section": "Core Python",
      "votes_groups": null,
      "speaker": "Sinny Kumari",
      "objective": "<ul>\n<li>Know different approaches to interface Python with C/C++</li>\n<li>Find out which approach to use in a particular situation</li>\n<li>Learn the basics of writing a C/C++ Python extension</li>\n</ul>",
      "type": "",
      "email": null,
      "bio": "<p>I have worked extensively on writing C python extensions as part of my work at Red Hat. The extensions provide data which are consumed by high level Python applications. While primarily a C/C++ programmer, I play with Python (and Django) during my spare time. Additionally, I am an Open Source enthusiast and contribute to the  KDE project and have also given talks at various KDE events.  </p>\n<p>I blog at <a href=\"http://www.sinny.in\">http://www.sinny.in</a></p>",
      "description": "<p>Python is a very powerful language and contains all language features to support most of people\u2019s computing needs. The core feature set is augmented by lot of modules which are available for Python. However, there will be times in a real-world project where you might need to access data or call functions which are implemented in C/C++. The most common reasons for doing this is to reuse existing C/C++ libraries which provide some specific functionality for your project, or simply to boost performance.  </p>\n<p>While different approaches that we will talk about are C/C++ Python extension, ctypes, SWIG, CFFI, boost.python etc, this talk will focus on a working example of a C/C++ Python extension. The talk will also compare the advantages and disadvantages of these approaches to help participants to decide what is best for their usecase.  </p>",
      "confirmed": false,
      "slides": "https://docs.google.com/presentation/d/1UKitmpqeaPvxLaPlTJVzLtI-PZmG4pgxkibbqVgKelY/",
      "phone": null,
      "name": "172-interfacing-python-with-c-c",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/172-interfacing-python-with-c-c",
      "submitted": "2014-05-13T19:39:49.194821Z"
    },
    {
      "links": "",
      "proposer": "Dorai Thodla",
      "votes_count": null,
      "comments": 2,
      "id": 171,
      "votes": -2,
      "requirements": "<p>projector</p>",
      "title": "Python Tools for Data ",
      "section": "Workshops",
      "votes_groups": null,
      "speaker": "Dorai Thodla",
      "objective": "<p>Show how Python can be used  to build tools for data discovery, tracking , analysis and mining information.  </p>",
      "type": "",
      "email": null,
      "bio": "<p>Technopreneur.  Have been building information tools in Java and Python for over a decade. </p>",
      "description": "<p>Python is one of the most popular languages for Data Analysis. In this talk we will show how Python can be used for discovering data sources, collecting/tracking data, analyzing data.  </p>\n<p>We will look at web data, rss feed data, Twitter data collection and mining it for entities.  </p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "171-python-tools-for-data",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/171-python-tools-for-data",
      "submitted": "2014-05-13T04:18:25.565240Z"
    },
    {
      "links": "",
      "proposer": "Anshul Gupta",
      "votes_count": null,
      "comments": 4,
      "id": 170,
      "votes": 13,
      "requirements": "<p>Basic knowledge of linux , python.</p>",
      "title": "Speech Recognization ",
      "section": "Scientific Computing",
      "votes_groups": null,
      "speaker": "Anshul Gupta",
      "objective": "<p>In this session we will be discussing to develop a speech commanding software system for the Linux environment.Will be using modules like matlibplot ,scipy ,numpy . Speech recolonization system works on the trained voices stored in  the system . It finds the best possible match from the database and then follow desired steps to full fill that command. this will give user freedom to operate system more convenient for some distance.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I am an engineering student from computer science branch batch 2011-2015.I do  software development in python .I made software for cricket team selection for my university  using python. I know core  ,GUI development , network programming. kivy for android  in python </p>",
      "description": "<p>Speech recognition is the process of enabling a computer to identify and respond to the sounds produced by human speech. It basically come under three broad categories that are 1.acoustic phonetic<br>\napproach ,which tries directly exploit individual sound properties. 2. Pattern recognition approach which realize only on gross spectral and temporal properties of speech sound . 3. Artificial approach , involves<br>\nlearning.<br>\nExisting systems do not have much accuracy to recognize human voice. We will try to increase the accuracy of speech recognition system in compared to existing system. Speech recognition system createsthe acoustic input as if it were a \"noisy\" version of the source command. In order to decode this noisy command , we will consider all possible commands and for each one we compute the probability of it generating the noisy word. It will also consist of additional Facilities such as file reading , weather telling.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "170-speech-recognization",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/170-speech-recognization",
      "submitted": "2014-05-12T06:54:05.850288Z"
    },
    {
      "links": "www.yashgajera.com\r\nwww.yashgajera.com/projectiot/yashgajera\r\nhttps://www.facebook.com/yashgajera\r\nhttp://in.linkedin.com/pub/yash-gajera/19/63a/96\r\nhttp://www.slideshare.net/yashgajera/internet-of-things-using-raspberry-pi",
      "proposer": "Yash Gajera",
      "votes_count": null,
      "comments": 5,
      "id": 169,
      "votes": 50,
      "requirements": "",
      "title": "Internet of Things - raspberry Pi and Python",
      "section": "Embedded Python",
      "votes_groups": null,
      "speaker": "Yash Gajera",
      "objective": "<p>After Attending this one can understand the concept of Internet of Things.<br>\nBenefits and Future application of Internet of Things.Also people can learn about the raspberry pi and internet of things embedded system using raspberry pi and Zigbee Technology.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Yash Gajera is final Year Electronics and communication engineering Student at AD Patel institute of Technology.Internet of Things Is his final year Project Which is going to be patent.He wrote python library For Zigbee communication with raspberry Pi that he is planing to open source in near future.Also he is planing a start up company working on internet of things.</p>",
      "description": "<p>Session start with the logic Behind the word of Internet Of Things.<br>\nThan Concept of Internet Of things.explaining Whats is Raspberry PI?<br>\nPython programming In Raspberry pi.Internet of things using raspberry pi.<br>\nDemo Applications-live demo of controlling objects and monitor sensor data directly from Internet in form of Web Application.Talking future of Internet of things.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "169-internet-of-things-raspberry-pi-and-python",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/169-internet-of-things-raspberry-pi-and-python",
      "submitted": "2014-05-12T05:47:15.680403Z"
    },
    {
      "links": "https://github.com/vinu76jsr/django_profiler - this will the example project to be used \r\n\r\n",
      "proposer": "Vaibhav Mishra",
      "votes_count": null,
      "comments": 2,
      "id": 168,
      "votes": 4,
      "requirements": "",
      "title": "Python app distribution the right way to PyPI ",
      "section": "Software Development Tools",
      "votes_groups": null,
      "speaker": "Vaibhav Mishra",
      "objective": "<p>Distribute your Python app and make it available to the world,<br>\nthe core presentation topics would be  </p>\n<ol>\n<li>Bootstrapping your Project the right way.  </li>\n<li>survey various options that can be used to distribute your app  </li>\n<li>use PyPI for release distribution.  </li>\n<li>Faster Basic Documentation - make it available to readthedocs.org</li>\n</ol>",
      "type": "",
      "email": null,
      "bio": "<p>Vaibhav Mishra is a software engineer at Dion global solutions in Mumbai. He is a Django Developer and is doing it for 3 years. He's enthusiastic about open source, technology communities, and Python. </p>",
      "description": "<p>This talk will cover following areas  </p>\n<ul>\n<li>bootstrapping a simple python application from scratch. - the app would be a simple python key-value store for command line and a simple django middleware</li>\n<li>Use Audrey Roy's excellent cookiecutter package to jump-start your app from scratch and have lots of goodies available right away</li>\n<li>Use already available cookiecutter templates or customize one for your own use.</li>\n<li>Making your app ready for the prime time - including test coverage and build status in your app page, along with basic documentation</li>\n<li>Register and upload your app to PyPI (the cheeseshop)</li>\n<li>Distributing bleeding edge version through github</li>\n<li>Best practices for setup.py</li>\n<li>Uploading your documentation to readthedocs.org and make it available to the world to see.</li>\n</ul>",
      "confirmed": false,
      "slides": "https://speakerdeck.com/vinu76jsr/distributing-python-application-the-right-way",
      "phone": null,
      "name": "168-python-app-distribution-the-right-way-to-pypi",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/168-python-app-distribution-the-right-way-to-pypi",
      "submitted": "2014-05-11T10:30:28.217319Z"
    },
    {
      "links": "http://twoscoopspress.com\r\nhttp://lanyrd.com/profile/pydanny\r\nhttp://pydanny.com",
      "proposer": "Daniel Greenfeld",
      "votes_count": null,
      "comments": 1,
      "id": 167,
      "votes": 26,
      "requirements": "<p>Something on which to take notes.</p>",
      "title": "Best Practices for Django",
      "section": "Workshops",
      "votes_groups": null,
      "speaker": "Daniel Greenfeld",
      "objective": "<p>Django is a great framework, but there is a lot of knowledge that isn't, or can't be in the core documentation. This talk covers various tips, tricks, patterns, code snippets, and techniques that myself and others have picked up over the years. Presented by one of the authors of Two Scoops of Django, it  expands on that reference.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Daniel Greenfeld is a senior software engineer at Eventbrite. Daniel is the  co-author of Two Scoops of Django: Best Practices for Django and two O'Reilly courses. He is also a co-creator and maintainer of Django Packages, the index for researching Django apps. Before that he spent over five years at NASA as a software engineer, where he won numerous awards. He's enthusiastic about open source, technology communities, and Capoeira. He blogs regularly at pydanny.com.</p>",
      "description": "<p>This talk will cover the following areas:  </p>\n<ul>\n<li>Model Composition</li>\n<li>App Cache Strategies</li>\n<li>REST APIs: Resources versus Remote Procedural Calls</li>\n<li>django.db.migrations</li>\n<li>Class-based views</li>\n<li>Function-based views</li>\n<li>Utility functions</li>\n<li>Python 2 vs Python 3</li>\n<li>New packages to make development easier and faster</li>\n<li>Much more!</li>\n</ul>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "167-best-practices-for-django",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/167-best-practices-for-django",
      "submitted": "2014-05-10T22:52:22.528143Z"
    },
    {
      "links": "Tutorial used in previous SciPy (http://certik.github.io/scipy-2013-tutorial/html/index.html)\r\n\r\nSymPy's official Tutorial(http://docs.sympy.org/latest/tutorial/index.html)\r\n",
      "proposer": "Akshay Narasimha",
      "votes_count": null,
      "comments": 2,
      "id": 166,
      "votes": 20,
      "requirements": "<p>A laptop with Python 2.x or 3.x, SymPy (most recent version) .<br>\nOptional packages: IPython, matplotlib, NetworkX, GMPY, numpy, scipy</p>",
      "title": "Symbolic computing with SymPy",
      "section": "Scientific Computing",
      "votes_groups": null,
      "speaker": "Akshay Narasimha",
      "objective": "<p>This talk will include  </p>\n<ul>\n<li>Basics of expressions in SymPy</li>\n<li>Mathematical problem solving with SymPy</li>\n<li>Perform basic calculus tasks (limits, differentiation and integration) with symbolic expressions.</li>\n<li>Solve polynomial and transcendental equations.</li>\n<li>Solve some differential equations.</li>\n<li>Solve algebraic geometry problems.</li>\n</ul>",
      "type": "",
      "email": null,
      "bio": "<ul>\n<li>\n<p>Akshay Narasimha :\nUndergrad student at BITS Pilani Goa Campus. FOSS enthusiast. Developer at SymPy, will be contributing to it this summer as a part of Google Summer of Code.  </p>\n</li>\n<li>\n<p>Sudhanshu Mishra :\nUndergrad student at BITS Pilani Goa Campus. Lead developer at BinPy. Developer at SymPy, will be contributing to it this summer as a part of Google Summer of Code.  </p>\n</li>\n<li>\n<p>Harsh Gupta:\nUndergrad student at IIT Kharagpur. Developer at team AGV. Developer at SymPy, will be contributing to it this summer as a part of Google Summer of Code.</p>\n</li>\n</ul>",
      "description": "<p>What is SymPy? SymPy is a Python library for symbolic mathematics. It aims to become a full featured computer algebra system that can compete directly with commercial alternatives (Mathematica, Maple) while keeping the code as simple as possible in order to be comprehensible and easily extensible. SymPy is written entirely in Python and does not require any external libraries.  </p>\n<p>Sympy documentation and packages for installation can be found on <a href=\"http://sympy.org/\">http://sympy.org/</a></p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "166-symbolic-computing-with-sympy",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/166-symbolic-computing-with-sympy",
      "submitted": "2014-05-10T17:45:24.651614Z"
    },
    {
      "links": "https://www.youtube.com/watch?v=aKCXj1DyEhM\r\nhttps://www.youtube.com/watch?v=YLiwCKpoW1Q\r\nhttps://www.youtube.com/watch?v=Xx4sN9bfb2A\r\nhttps://www.youtube.com/watch?v=JAlZ0uJnqkA\r\nhttp://www.slideshare.net/gramener/automated-data-analysis-with-python\r\n",
      "proposer": "Anand S",
      "votes_count": null,
      "comments": 0,
      "id": 165,
      "votes": 45,
      "requirements": "<p>A good working knowledge of Python and the standard libraries</p>",
      "title": "Faster data processing in Python",
      "section": "Scientific Computing",
      "votes_groups": null,
      "speaker": "Anand S",
      "objective": "<p>To understand libraries, techniques and benchmarks to help you speed up your data storage, retrieval and processing.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Anand is the chief data scientist at Gramener. He explores data stories visually with Python and Javascript.  </p>\n<p>He blogs at <a href=\"http://www.s-anand.net/\">http://www.s-anand.net/</a></p>",
      "description": "<p>Working with data in Python requires making a number of choices, ranging from the simple to the complex.  </p>\n<ul>\n<li>Should I use pickle, CSV or JSON? (Ans: CSV).</li>\n<li>What do I read it with: csv.DictReader or csv.reader? (Ans: Pandas). </li>\n<li>How should I parse dates? (Ans: Anything but Pandas / dateutil)</li>\n<li>How do I optimise numpy calculations? (Ans: Learn vector algebra)</li>\n<li>How do I run a function in parallel?</li>\n<li>How to make my program restartable?</li>\n<li>How do I use multiple cores?</li>\n</ul>\n<p>This session will explain how to benchmark code and share insights on the patterns of programming that make your application faster.</p>",
      "confirmed": true,
      "slides": "",
      "phone": null,
      "name": "165-faster-data-processing-in-python",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/165-faster-data-processing-in-python",
      "submitted": "2014-05-10T02:15:23.990017Z"
    },
    {
      "links": "",
      "proposer": "Aravind Krishnaswamy",
      "votes_count": null,
      "comments": 9,
      "id": 164,
      "votes": 19,
      "requirements": "",
      "title": "Deep dive into the code and internals of Flask/Bottle/Requests",
      "section": "Core Python",
      "votes_groups": null,
      "speaker": null,
      "objective": "<p>I'd love to see a few advanced talks at PyCon. One possible topic would be to take a few popular libraries or framework and do a deep dive into the code.  </p>\n<p>This would help advanced developers develop a deeper understanding of what it takes to  </p>\n<ul>\n<li>write great code - learn from the best</li>\n<li>design great libraries and frameworks</li>\n<li>understand the nuances of the libraries under the hood</li>\n</ul>",
      "type": "",
      "email": null,
      "bio": "<p>Open -  looking for a speaker</p>",
      "description": "<p>Possible libraries/frameworks to consider, which IMO are good examples of small, well written, powerful libraries/frameworks  </p>\n<ul>\n<li><a href=\"https://github.com/mitsuhiko/flask/blob/master/flask/app.py\">Flask</a></li>\n<li><a href=\"https://github.com/defnull/bottle/blob/master/bottle.py\">Bottle</a></li>\n<li><a href=\"https://github.com/kennethreitz/requests/tree/master/requests\">Requests</a></li>\n</ul>\n<p>If there are other popular libraries that are better candidates for a dive, feel free to suggest them in the comments.  </p>\n<p>And perhaps most importantly, who would be a good person from the local community to take up these topics? Feel free to nominate someone you know or respect.  </p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "164-deep-dive-into-the-code-and-internals-of-flask-bottle-requests",
      "level": "Advanced",
      "url": "http://in.pycon.org/funnel/2014/164-deep-dive-into-the-code-and-internals-of-flask-bottle-requests",
      "submitted": "2014-05-09T17:04:33.129563Z"
    },
    {
      "links": "Homepage: http://web.iiit.ac.in/~pankaj.malhotra/\r\nGitHub: https://github.com/bitgeeky\r\nQuality Assurance/Testing/Automation Awards: https://badges.mozilla.org/en-US/profiles/profile/bitgeeky\r\nBlog: http://codechepo.blogspot.in/\r\nProject: http://www.google-melange.com/gsoc/project/details/google/gsoc2014/bitgeeky/5741031244955648",
      "proposer": "Pankaj Malhotra",
      "votes_count": null,
      "comments": 1,
      "id": 160,
      "votes": 3,
      "requirements": "<p>1 A Laptop with Linux based operating System(Preferably Fedora/Ubuntu)<br>\n2 Python 2.7  Installed Link: <a href=\"https://www.python.org/download/\">https://www.python.org/download/</a><br>\n3 Pytest 2.5.2 Installed Link: <a href=\"https://pypi.python.org/pypi/pytest\">https://pypi.python.org/pypi/pytest</a><br>\n4 Django 1.6 Installed <a href=\"https://www.djangoproject.com/download/\">https://www.djangoproject.com/download/</a><br>\n5 GitHub and Travis account for Continuous Integration.</p>",
      "title": "Test Automation using pytest and Advanced Testing practices in Django",
      "section": "Software Development Tools",
      "votes_groups": null,
      "speaker": "Pankaj Malhotra",
      "objective": "<p>Objective is to talk about:  </p>\n<p>1 Testing Practices, elaborating on Unit and Functional Testing.<br>\n2 Features offered by pytest that make it a better testing tool.<br>\n3 Using pytest to test and demonstrate some test examples.<br>\n4 Testing in Django using pytest compared to Django TestCase.<br>\n5 Useful pytest plugins and Continuous Integration.  </p>",
      "type": "",
      "email": null,
      "bio": "<p>I am a Computer Science student at IIIT-Hyderabad with more than two years of experience with Python and Automation.<br>\nI have been working as a FOSS contributor from the past two years working with organizations like Mozilla closely with the Quality Assurance(QA) team and also received honours and awards for my contributions to code.<br>\nI am also a Google Summer of Code Intern with Mozilla working with Web QA team on a project which involves developing Functional Test Suite for a Web Application.<br>\nI am an organizer and a regular speaker at Hackathons organized by Open Source Developers group in my College.<br>\nAlso I am an attendee and speaker at various Mozilla events and a formal Mozilla Representative.<br>\nI have also worked with Privly in field of Continuous Integration and configured Travis CI Instance for one of their projects.</p>",
      "description": "<p>The objective of this talk as mentioned is to elaborate more on using pytest as tool for Test Automation in Python and using pytest for Django Application Testing. This talk also aims to cover best practices in testing and discussion on Unit and Functional Testing, and an insight into Continuous Integration using Travis as a CI server.  </p>\n<p>The duration of talk is estimated to be around 1 hour and this is how this one hour would be divided.  </p>\n<p>1 (5 min) Introduction to pip and virtualenv, Installing pytest and setting up a test environment.<br>\n2 (10 min) Discussion on Unit testing and Functional testing, elaborating difference between the two and where to use each one of them.<br>\n3 (5 min) Introduction to pytest and the Features that it offers making it better than the other testing tools.<br>\n4 (10 min) Writing tests with pytest and code examples covering most of its features like Fixtures and Markers.<br>\n5 (10 min) Using pytest to test Django Applications and data population for tests using advanced API called FactoryBoy and it comparison with Django Fixtures and compatibility with django TestCase.<br>\n6 (10 min) Discussion on pytest plugins and Continuous Integration with Travis CI.<br>\n7 (10 min) Doubts and QA session.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "160-test-automation-using-pytest-and-advanced-testing-practices-in-django",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/160-test-automation-using-pytest-and-advanced-testing-practices-in-django",
      "submitted": "2014-05-09T04:32:51.763456Z"
    },
    {
      "links": "Link to ConnectX video\r\n\r\nhttps://www.youtube.com/watch?v=6Oh6B4xGj38&feature=youtu.be\r\n\r\nPoster for product launch event (credits: design team Shaastra) https://drive.google.com/file/d/0Bxq-BT_8yTIqV2Z1N1BXRlFFVmZyM1JMMlkwNmlONThWeG1F/edit?usp=sharing",
      "proposer": "Sagar Joshi",
      "votes_count": null,
      "comments": 2,
      "id": 159,
      "votes": 4,
      "requirements": "<p>Projector screen</p>",
      "title": "ConnectX: The Serial Emulator Application",
      "section": "Software Development Tools",
      "votes_groups": null,
      "speaker": "Sagar Joshi",
      "objective": "<p>ConnectX is a stand alone serial emulator application (GUI) built entirely in python that helps user communicate with USB devices like micro-controllers and plot real time graphs from the data acquired. User has to simply specify parameters to establish connection and can plot graphs with click of a button. The objective is to make the viewers understand the scope and range of application development in python with ConnectX as the standard.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Sagar is a undergraduate engineering student at IIT Madras studying in Engineering Design department . For him python was literally a love at first sight..!! python programming is a part of daily life for him. Sagar also designs games in Python for windows and android platform and has children educational games operational for NGOs. </p>",
      "description": "<p>ConnectX is a stand alone serial emulator application (GUI) built entirely in python. It is a blend of Tkinter, Matplotlib and Pyserial libraries working in harmony to achieve serial communication and plotting real time simulation graphs from the data acquired. ConnectX is a example of how python powered applications can be better alternatives, with all the standard features and more, thanks to the rich array of python libraries.  </p>\n<p>The talk would give a overview of this project and the future scope/improvements for such endeavors in python application development.  </p>\n<p>Features include: 1.Easy Connection: ConnectX gives a list of active ports. User has to enter 'COM' name and baud-rate(standard radio-button input or custom entry)  </p>\n<p>2.Status-bar: Dynamically changing connection status(connected/error), COM name, baud-rate, data-logging (on/off)  </p>\n<p>3.Graph-plotting:If the data is in the form of columns or of the form velocity:[HTML_REMOVED] time:[HTML_REMOVED] ConnectX can plot graph. The application can be modified to plot graphs for any type of data. . Just enter colour, dot type, titles to plot. Inbuilt features like zoom, pan, instantaneous display of co-ordinates for displayed graph  </p>\n<p>4.Live-plotting:Enables instantaneously updating graph plotting simulation. Data so acquired can be monitored through instantaneously updating graph  </p>\n<p>5.Convenient data display: Large text-box for data display,auto-scroll check-box, clear text-box button, save-load data, data logging (saving data up to certain point).  </p>\n<p>6.Stand alone application: The application has been packaged to .exe using py2exe library.  </p>\n<p>ConnectX was launched at product-launch event at 'Shaastra' the annual technical festival of Indian Institute of Technology Madras (IIT-M) as a Python powered alternative to other Serial Emulation software. </p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "159-connectx-the-serial-emulator-application",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/159-connectx-the-serial-emulator-application",
      "submitted": "2014-05-08T14:54:18.105769Z"
    },
    {
      "links": "G.Raja Sumant \r\n in.linkedin.com/pub/gurajapu-sumant/57/867/919/\r\n\r\nAshok Ashwin\r\n http://www.linkedin.com/pub/ashwin-ashok/54/183/b5b\r\n\r\ncuda\r\nhttp://www.nvidia.in/object/cuda_home_new.html\r\nhttps://developer.nvidia.com/cuda-toolkit\r\n\r\nslides:\r\nhttp://www.authorstream.com/Presentation/ashwinashok91119-2144578-pycon-2014/\r\n\r\nprereading:\r\nhttp://documen.tician.de/pycuda/tutorial.html \r\n\r\nhttp://on-demand.gputechconf.com/gtc/2010/presentations/S12041-PyCUDA-Simpler-GPU-Programming-Python.pdf \r\n\r\n",
      "proposer": "Gurajapu Raja Sumant",
      "votes_count": null,
      "comments": 26,
      "id": 158,
      "votes": 75,
      "requirements": "<p>The audience are not expected to bring their laptops ,but if they do want to execute some quick code snippets, it is recommended they<br>\nbring along the following :  </p>\n<p>1) A computer with NVIDIA GPU supporting CUDA or an AMD GPU supporting OpenCl (even 3rd generation i3/i5/i7 have experimental support for their IGP`s )  </p>\n<p>2)Softwares:  </p>\n<blockquote>\n<p>python2.7</p>\n<p>cuda toolkit, pycuda , numpy ,scipy</p>\n<p>Any OS will do(win7,linux3.4+,MacOSX)</p>\n</blockquote>\n<p>If anyone has trouble installing the required toolkits to work, please leave the discription of the problem in the comment and we will be<br>\nwilling to sort out your problem.</p>",
      "title": "GPU accelerated high performance computing primer",
      "section": "Embedded Python",
      "votes_groups": null,
      "speaker": "Gurajapu Raja Sumant",
      "objective": "<p>The talk will focus on the emergence of <em>GPU</em> computing and how python can help us in taking the first steps towards it.<br>\n The audience will witness the full power of <em>CUDA/OpenCL</em> technology and how python can truly bring super computing to the masses.</p>",
      "type": "",
      "email": null,
      "bio": "<p><strong>There are two speakers dealing with the topic.</strong></p>\n<p><strong>G.Raja Sumant</strong> is a TCS employee who happens to be an undergraduate in the field of Electronics and Communications Engineering who has 3 years of experiance in conducting various \npython and embedded related workshops in conjunction with the IEEE Hyderabad Section. He has won the innovative project showcase at the IEEE<br>\nPES AISC 2013 for Smart Grid technology application for household devices using MSP430 microcontroller. He has good programming skills in<br>\ndifferent python modules such as NumPy,Scipy,MatPlotLib and other signal processing libraries of Python. He has also good expertise in<br>\nembedded Python and embedded C ,thanks to his projects on BeagleBoard,ARM,MSP430,Atmel,RL78 and RaspberryPi.  </p>\n<p>He has completed a short term course in embedded system design from C-DAC(CENTER FOR DEVELOPMENT OF ADVANCED COMPUTING) an initiative of DIEIT(DEPARTMENT OF ELECTRONICS AND INFORMATION TECHNOLOGY).  </p>\n<p>You can find the speakers linkedIn profile in the links section  </p>\n<p><strong>Ashok Ashwin</strong> is currently pursuing Bachelors degree in Electronics and Communications Engineering. He spents most of his spare time working on embedded \nprojects and Python happens to be a subject of great interest to him. He is actively involved  in propagating the use of python as a viable<br>\nalternative to numerical computational packages like MATLAB.He is currently the vice president of the IEEE student branch in his college and many<br>\nworkshops regarding Python were conducted under his leadership.His most noteworthy achivement till date is his project in creating an  oscillosope using<br>\npython and MSP430 microcontroller. His expertise also extends to GUI programming with Qt and scientific computing using NumPy and SciPy . His current interests<br>\ninclude image processing using GPU computing and efficient digital filter synthesis using microcontrollers.<br>\nYou can find his code in the github links and youtube channel given below in the links section.  </p>",
      "description": "<p>If one is to realize the high performance computing \"mantra\" , i.e.<br>\nconcurrency and parallelism one has to look no further than GPUs .<br>\nTo over come the bottlenecks the CPUs are imposing by serial mode of computation,we embrace the fully parallel nature of the GPU.<br>\nGranted the GPUs were initially targetted towards graphics, we have witnessed a paradigm shift towards the inclusion of GPUs in<br>\nnumerical and scientific computing . To this end , the speakers strive to potray python as a bridge between conventional computation<br>\nand this new ground breaking field of GPU computing .  </p>\n<p>We intend to acheive this by introducing our audience to technologies like PyCuda ,PyOpenCl and their numerous wrapper libraries.  </p>\n<p>We aim to familiarize the audience with predominantly PyCuda as it is the most mature GPU (NVIDIA) computing library till date as<br>\nit puts the entire power(read cores and threads!) at our disposal.<br>\nAlso the abundance of great documentation and comprehensive code<br>\nexamples make it the right candidate to lay emphasis on .  </p>",
      "confirmed": true,
      "slides": "https://docs.google.com/presentation/d/1ALkPN61_yYaqit9-B8J2zC2UEF7q8tPsi_TMcRLITJw/edit?usp=sharing",
      "phone": null,
      "name": "158-gpu-accelerated-high-performance-computing-primer",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/158-gpu-accelerated-high-performance-computing-primer",
      "submitted": "2014-05-06T16:39:11.661005Z"
    },
    {
      "links": "You can find documentation of the project here http://docs.binpy.org\r\nGitHub repository is located here https://github.com/BinPy/BinPy",
      "proposer": "Sudhanshu Mishra",
      "votes_count": null,
      "comments": 6,
      "id": 157,
      "votes": 38,
      "requirements": "<p>You should bring a laptop with following software installed:  </p>\n<ul>\n<li>Python</li>\n<li>IPython notebook (optional)</li>\n<li>BinPy (Refer <a href=\"https://github.com/BinPy/BinPy#installation\">this</a> for help)</li>\n</ul>",
      "title": "Introduction to BinPy - An Electronic Simulation Library ",
      "section": "Scientific Computing",
      "votes_groups": null,
      "speaker": null,
      "objective": "<ul>\n<li>\n<p>The sessions intends to demonstrate the usage of BinPy to learn electronics</p>\n</li>\n<li>\n<p>The session will cover following topics</p>\n</li>\n<li>Using connectors to connect gates</li>\n<li>Using inbuilt algorithms to minimize complexity of circuits</li>\n<li>Developing registers</li>\n<li>Using Flip Flops and inbuilt clock to make counters</li>\n<li>Showing how to make ICs using BinPy</li>\n<li>How to make a complete working circuit using inbuilt ICs and test it with inbuilt oscilloscope</li>\n</ul>\n<p>There are a lot of other things which will be explained during the session.</p>",
      "type": "",
      "email": null,
      "bio": "<p>The <a href=\"https://github.com/salil93\">speaker</a> is a third year computer science undergrad student at BITS Pilani Goa Campus. He is one of the maintainers of the <a href=\"https://github.com/BinPy/BinPy\">BinPy</a> project. Beside BinPy he has also contributed to projects like <a href=\"https://github.com/sightmachine/SimpleCV\">SimpleCV</a> and <a href=\"http://krita.org/\">Krita</a>.  </p>",
      "description": "<p>BinPy is a Python library to simulate electronic circuits. It is a pure python library created and maintained by students of BITS Pilani, India targeted towards students and electronics enthusiasts to assist them learn digital electronics by simulating them virtually.  </p>\n<p>The library has a strong educative theme in mind, as a result of which a major portion of the library consists of examples in the form of IPython notebooks.  </p>\n<p>As of now the library supports over 100 ICs and various sequential and combinational circuits covering all basic circuits like gates, flip flops, register files, binary operators, counters, encoder, decoder, etc.  </p>\n<p>It includes modules to implement algorithms like Quine McCluskey algorithm for minimization of digital logic, Moore optimizer, Expression conversions, etc. It also features a command line ASCII oscilloscope to view the time waveforms of the simulations.  </p>\n<p>BinPy has been selected for <a href=\"http://www.google-melange.com/gsoc/project/details/google/gsoc2014/rvraghav93/5676830073815040\">GSoC 2014</a> under the umbrella of <a href=\"https://wiki.python.org/moin/SummerOfCode/2014\">Python Software Foundation</a> so we hope that some interesting features will be added over the summer.</p>",
      "confirmed": true,
      "slides": "",
      "phone": null,
      "name": "157-introduction-to-binpy-an-electronic-simulation-library",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/157-introduction-to-binpy-an-electronic-simulation-library",
      "submitted": "2014-05-05T20:57:59.389945Z"
    },
    {
      "links": "http://sanyamgarg.blogspot.com\r\nhttp://www.mathworks.com/matlabcentral/fileexchange/authors/445917",
      "proposer": "Sanyam Garg",
      "votes_count": null,
      "comments": 3,
      "id": 156,
      "votes": 62,
      "requirements": "<ol>\n<li>\n<p>A laptop with Windows OS installed (preferable) . You may work on any OS but I will be using Windows.  </p>\n</li>\n<li>\n<p>Python 2.7. Download Link: <a href=\"https://www.python.org/download/\">https://www.python.org/download/</a>  </p>\n</li>\n<li>\n<p>OpenCV for Python<br>\nDownlaod link: <a href=\"http://opencv.org/downloads.html\">http://opencv.org/downloads.html</a><br>\nInstallation guide: <a href=\"http://docs.opencv.org/trunk/doc/py_tutorials/py_setup/py_setup_in_windows/py_setup_in_windows.html\">http://docs.opencv.org/trunk/doc/py_tutorials/py_setup/py_setup_in_windows/py_setup_in_windows.html</a>  </p>\n</li>\n<li>\n<p>An external webcam. (the front camera on the laptop will also work)</p>\n</li>\n</ol>",
      "title": "Computer Vision using Python: Can webcams serve as eyes for the blind?",
      "section": "Core Python",
      "votes_groups": null,
      "speaker": "Sanyam Garg",
      "objective": "<p>The talk will help introduce the audience with the recent developments in computer vision. I will be covering the current trends in object recognition and scene understanding. Finally, I will explain how we can code to detect humans in a live video. </p>",
      "type": "",
      "email": null,
      "bio": "<p>I am a student at BITS-Pilani Hyderabad Campus with more than 2 years of experience in Python and Matlab. I am a computer vision enthusiast with significant experience in active contours (Snakuscules) and color constancy algorithms (Intern - IISC, Bangalore). One of my research works on estimating glucose concentration using image processing is currently in the proceedings of 'IEEE International Conference on Image Processing'. I have lately with working on the concepts of machine learning that can be incorporated in vision systems.  </p>",
      "description": "<p>The best results for object detection in images were obtained when a new descriptor using grids of histogram of oriented gradients was suggested by Dalal and Triggs in their paper: \"Histogram of Oriented Gradients for Human Detection\". The descriptor outperformed previous feature sets for object/human detection. In my talk I will be explaining the following concepts:  </p>\n<p>a) How HOG descriptor is formed for every image<br>\nb) Training the SVM classifier using the pedestrian dataset<br>\nc) Finding objects/humans in a new image<br>\nd) Utilizing the above concepts to find humans in a live video.  </p>\n<p>The entire concept will be implemented using the OpenCV library in Python.  </p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "156-computer-vision-using-python-can-webcams-serve-as-eyes-for-the-blind",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/156-computer-vision-using-python-can-webcams-serve-as-eyes-for-the-blind",
      "submitted": "2014-05-05T16:07:37.283168Z"
    },
    {
      "links": "http://www.sonalraj.com/\r\nhttps://github.com/sonal-raj/\r\nhttp://www.slideshare.net/sonal-raj/pycon-india-talk\r\nhttp://www.slideshare.net/sonal-raj/storm-serc-ppt",
      "proposer": "Sonal Raj",
      "votes_count": null,
      "comments": 2,
      "id": 155,
      "votes": 17,
      "requirements": "<ul>\n<li>Python 2.7</li>\n<li>Numpy, Scipy, Cython, Matplotlib and Qutip 2</li>\n</ul>",
      "title": "Quantum Computing with Python",
      "section": "Scientific Computing",
      "votes_groups": null,
      "speaker": "Sonal Raj",
      "objective": "<p>This talk introduces the use of Python for simulating capabilities of subatomic computational systems or quantum computers.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Sonal Raj is a pythonista, geek, and an open source developer with a passion for gadgets and technology.  </p>\n<p>He works on Distributed Computing, Real Time processing and Android in his spare time with Python as the primary weapon. He began his entrepreneural journey with <a href=\"http://www.enfoss.org/\">Enfoss</a> and <a href=\"http://www.botcubes.com\">Botcubes</a>.He is currently a Software Engineer at <a href=\"http://sigmoidanalytics.com/\">Sigmoid Analytics</a>.  </p>\n<p>He has published code and Contributed to several Open Source Projects. He has also spoken at SERC @ IISc-B and  PyCon 2013.  </p>",
      "description": "<p><a href=\"http://en.wikipedia.org/wiki/Quantum_computing\">Quantum Computing</a> is one of the less talked about areas, but it is futuristic, and that's what makes it so amazing. This talk will be about the use of Python as a Quantum Computing Language.\nThe highlights of the talks would include:  </p>\n<ul>\n<li>Quantum Computers: Introduction</li>\n<li>qubits: The foundation of QC</li>\n<li>Programming QC</li>\n<li>Introduction to <a href=\"http://www.qutip.org\">qutip</a></li>\n<li>Quantum Data Types</li>\n<li>Writing methods</li>\n<li>Ok, Got it . . What do I do with it?</li>\n</ul>\n<p>We will then take a look at immense prospects that Python holds as a valuable aid to Quantum Computing Researchers and also realizing QC into real world practical applications.  </p>\n<p>Despite the vastness of the area itself, this talk will serve the purpose of getting you started and help you get your first handshake with Quantum Codes.If you love crazy and non-human hobbies, then Quantum Computing should definitely be on your list, and if you have already considered the thought then here's where the wizards hang out: <a href=\"http://www.quantiki.org/\">Quantiki Portal</a>  </p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "155-quantum-computing-with-python",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/155-quantum-computing-with-python",
      "submitted": "2014-05-04T12:17:26.546320Z"
    },
    {
      "links": "- Quick introduction to python: http://kracekumar.com/post/71171551647/introduction-to-python\r\n\r\n- Python by example exercise: https://github.com/kracekumar/pythonbyexamplestutorial/tree/master\r\n\r\n- Pymonth 2013, Introduction to python: https://github.com/kracekumar/python-training",
      "proposer": "Kracekumar Ramaraju",
      "votes_count": null,
      "comments": 1,
      "id": 154,
      "votes": 9,
      "requirements": "<ol>\n<li>\n<p>Laptop with Python 2.7 installed <a href=\"https://www.python.org/download/releases/2.7/\">https://www.python.org/download/releases/2.7/</a>.  </p>\n</li>\n<li>\n<p>Text editor setup like <a href=\"http://www.sublimetext.com/\">Sublime Text</a>  </p>\n</li>\n</ol>\n<h3>Installation instructions:</h3>\n<ol>\n<li>\n<p><a href=\"http://docs.python-guide.org/en/latest/starting/install/osx/\">Mac OS X</a>  </p>\n</li>\n<li>\n<p><a href=\"http://docs.python-guide.org/en/latest/starting/install/win/\">Windows 7 and above</a>  </p>\n</li>\n<li>\n<p><a href=\"http://docs.python-guide.org/en/latest/starting/install/linux/\">GNU/Linux</a>  </p>\n</li>\n</ol>",
      "title": "Learn python in minutes",
      "section": "Workshops",
      "votes_groups": null,
      "speaker": "Kracekumar Ramaraju",
      "objective": "<p>To teach participants to program in Python with confidence. At the end of the sessions participants should be confident enough to write standalone python program.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Kracekumar works at <a href=\"http://recruiterbox.com/\">Recruiterbox</a>. Python occupies most of his time. Whenever he needs to write code it is mostly Python.  </p>\n<p>Kracekumar has handled quite a number of python workshops. Workshops were of few hours, one day or two days. I enjoy teaching python. April month bangpypers workshop conducted by me received <a href=\"http://www.meetup.com/BangPypers/events/171450392/\">very well</a>  </p>\n<p>Kracekumar has built web applications with <a href=\"https://www.djangoproject.com\">Django</a>, <a href=\"http://flask.pocoo.org/\">Flask</a> and other libraries.  </p>\n<ul>\n<li>Github: <a href=\"https://github.com/kracekumar\">https://github.com/kracekumar</a></li>\n<li>Blog: <a href=\"http://kracekumar.com\">http://kracekumar.com</a></li>\n</ul>",
      "description": "<p>Best part of python is with 50 lines of code, it is possible to do useful task. Not yet convinced see an example <a href=\"https://github.com/kracekumar/Song-Fetcher/blob/master/yuvan_songs.py\">Song downloader</a>. Yes old code (42 lines).  </p>\n<p>The workshop will be tailored for beginners. The workshop will cover basic concepts like  </p>\n<ul>\n<li><code>Variables</code></li>\n<li><code>Numbers</code> </li>\n<li><code>Conditional branching (if else)</code> </li>\n<li><code>Loops (for loop)</code> </li>\n<li><code>Data structure - List, dictionary</code></li>\n<li><code>Functions</code></li>\n<li><code>File handling - Reading and writing to file</code></li>\n<li><code>Getting user input</code></li>\n<li><code>inbuilt functions like sum, min, max</code></li>\n</ul>\n<p>Yes in 3 hours I will be covering all the above concepts. All the above mentioned concepts will be covered hands on with exercises.  </p>",
      "confirmed": true,
      "slides": "",
      "phone": null,
      "name": "154-learn-python-in-minutes",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/154-learn-python-in-minutes",
      "submitted": "2014-05-02T20:21:44.741429Z"
    },
    {
      "links": "https://fedoraproject.org/wiki/User:Sarupbanskota\r\nhttps://github.com/sarupbanskota\r\nhttp://gnokii.fedorapeople.org/talks/character_slide_en.svg\r\nhttp://www.slideshare.net/sarupbanskota/sarup-fossasia-1\r\nhttp://www.slideshare.net/sarupbanskota/helloworld-33181550\r\nhttp://www.slideshare.net/sarupbanskota/using-open-source-software-to-uncover-extra-terrestrials\r\n",
      "proposer": "Sarup Banskota",
      "votes_count": null,
      "comments": 7,
      "id": 153,
      "votes": 16,
      "requirements": "<p>A laptop, preferably with a GNU/Linux variant on it.<br>\nIf you want to please me, come with Fedora installed ;-)</p>",
      "title": "Getting started with FOSS techniques (student friendly)",
      "section": "Workshops",
      "votes_groups": null,
      "speaker": "Sarup Banskota",
      "objective": "<p>Identify open source projects that interest you, jump the initial hurdles, and work towards becoming a FOSS contributor! If you're lucky, find yourself a mentor ;-)</p>",
      "type": "",
      "email": null,
      "bio": "<p>20 year old student, Fedora design team. I help run the tech{know}logy club in college, where we help new students aboard interesting projects. I've also co-authored GlitterGallery, a discussion space for open source designers. Currently on my second GSoC spicing it up! :)</p>",
      "description": "<p>If my observations from last year are any indication, there will be a lot of students at PyCon, especially ones who are starting out with stuff. The talks at PyCon are great and interest a lot of students, but many face hurdles when they start out (and they aren't exactly technical - I'm a student myself, I must know).  </p>\n<p>I propose to introduce interested students to the idea of contributing to FOSS, and help them get started with the basics - finding projects, IRC, mailing lists, version control (anything else I'm missing?). Since it's a student crowd, introduce some opportunities they can involve with. I'll lay emphasis on how non-programmers can contribute to free and open source communities.  </p>\n<p>PyCon is a wonderful converging point for contributors from various open source communities, so it would be great if some of them come forward with areas that are looking for new contributors and mentor some of the attendees. I'm with Fedora myself, so I can help onboard some into our projects.</p>",
      "confirmed": false,
      "slides": "http://www.slideshare.net/sarupbanskota/sarup-fossasia-1",
      "phone": null,
      "name": "153-getting-started-with-foss-techniques-student-friendly",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/153-getting-started-with-foss-techniques-student-friendly",
      "submitted": "2014-05-01T13:44:07.993073Z"
    },
    {
      "links": "http://pydanny.com/python-partials-are-fun.html\r\nhttp://pydanny.com/python-yields-are-fun.html\r\nhttp://lanyrd.com/profile/pydanny/",
      "proposer": "Daniel Greenfeld",
      "votes_count": null,
      "comments": 8,
      "id": 152,
      "votes": 45,
      "requirements": "<p>A basic knowledge of Python</p>",
      "title": "Advanced Python Tricks for Beginners",
      "section": "Core Python",
      "votes_groups": null,
      "speaker": "Daniel Greenfeld",
      "objective": "<p>It's ambitious, but I want to do a talk for beginners that includes material like:  </p>\n<ul>\n<li>partials</li>\n<li>async</li>\n<li>writing generator functions</li>\n<li>custom sorts with keys</li>\n<li>Enums</li>\n<li>Context managers</li>\n</ul>\n<p>My concept is that by explaining these things verbally, and more importantly providing immediately usable code snippets, I can help accelerate beginners into a better place. I plan to create a project on rtfd.org to host the code snippets.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Daniel Greenfeld is a senior software engineer at Eventbrite. Daniel is the  co-author of Two Scoops of Django: Best Practices for Django and two O'Reilly courses. He is also a co-creator and maintainer of Django Packages, the index for researching Django apps. Before that he spent over five years at NASA as a software engineer, where he won numerous awards. He's enthusiastic about open source, technology communities, and Capoeira. He blogs regularly at pydanny.com.</p>",
      "description": "<p>Python is an incredibly powerful language that allows coders to become effective immediately. However, Python has a lot of depth, and it can be years before a developer becomes aware of what it can do. This code-heavy but easy-to-comprehend talk will cover some of the more interesting things that Python can do while providing immediately usable snippets of code.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "152-advanced-python-tricks-for-beginners",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/152-advanced-python-tricks-for-beginners",
      "submitted": "2014-05-01T06:59:44.981375Z"
    },
    {
      "links": "http://pydanny.com/experiences-with-django-python3.html\r\nhttp://lanyrd.com/profile/pydanny/",
      "proposer": "Daniel Greenfeld",
      "votes_count": null,
      "comments": 2,
      "id": 151,
      "votes": 16,
      "requirements": "",
      "title": "Getting the Planets to Line Up: Django & Python 3",
      "section": "Web Development",
      "votes_groups": null,
      "speaker": "Daniel Greenfeld",
      "objective": "<p>To educate Django developers on what works for Django that's in Python 3, what doesn't work yet in Python 3, and how to mitigate compatibility problems.  </p>\n<p>I've been doing an increasing amount of development with Python 3. Unfortunately, I've had to bring projects back to Python 2.7 a couple times because of missing components, and I'm not the only one. Therefore, I'm trying to not only increase community awareness of what's missing in the Django ecosystem in regards to Python 3, but also how we can fix it.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Daniel Greenfeld is a senior software engineer at Eventbrite. Daniel is the  co-author of Two Scoops of Django: Best Practices for Django and two O'Reilly courses. He is also a co-creator and maintainer of Django Packages, the index for researching Django apps. Before that he spent over five years at NASA as a software engineer, where he won numerous awards. He's enthusiastic about open source, technology communities, and Capoeira. He blogs regularly at pydanny.com.</p>",
      "description": "<p>Python 3 has been out for years now, and Django supports it. Unfortunately, while the list of third-party Django packages that support Python 3 is growing, there are still some pain points. This talk will cover existing missing pieces, how they are being worked on, and what steps to take when a mitigation isn\u2019t possible. The content of this talk will be a combined presentation of case study and technical material.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "151-getting-the-planets-to-line-up-django-python-3",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/151-getting-the-planets-to-line-up-django-python-3",
      "submitted": "2014-05-01T06:53:06.529274Z"
    },
    {
      "links": "http://www.youtube.com/watch?v=zG8FYPFU9n4\r\nhttp://www.wired.com/2013/12/creating-plots-with-python-and-plotly/\r\nhttp://nbviewer.ipython.org/gist/jackparmer/7729584\r\nhttps://twitter.com/plotlygraphs",
      "proposer": "Jack Parmer",
      "votes_count": null,
      "comments": 0,
      "id": 150,
      "votes": 14,
      "requirements": "<p>Easy! A laptop with Python or IPython notebook ready-to-go.</p>",
      "title": "New Scientific Plotting in Python",
      "section": "Scientific Computing",
      "votes_groups": null,
      "speaker": "Jack Parmer",
      "objective": "<p>The objective of this talk is to describe new scientific graphing options available to engineers, scientists, and programmers in Python, beyond basic matplotlib. A session attendee will gain a broad overview of the new tools in this field available to them, how to use them, as well as what we might expect in the future. Open-source, IPython notebooks available on GitHub will be used to give examples.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I'm the CEO and cofounder of Plotly, a sharing and visualization platform for data tools and languages like Python, IPython, MATLAB, and R. I studied Engineering Physics at Stanford University, and have been working with Python for scientific, data, and web applications for 5 years.</p>",
      "description": "<p>Matplotlib has wonderfully served the Python community as the cornerstone of scientific graphics. Recently, many additional Python plotting options have surfaced, aimed to make it easier to create graphics that are interactive and web-publishable. This talk will outline these new options with some easy-to-follow, IPython notebooks.</p>",
      "confirmed": true,
      "slides": "http://www.slideshare.net/JackParmer/pycon-prez-34137101",
      "phone": null,
      "name": "150-new-scientific-plotting-in-python",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/150-new-scientific-plotting-in-python",
      "submitted": "2014-04-30T17:56:44.216191Z"
    },
    {
      "links": "https://pypi.python.org/pypi/jenkinsapi\r\nhttp://jenkins-ci.org/\r\nhttp://www.cloudbees.com/jenkins/juc-2014/boston/sessions#PraveenKumar\r\nhttp://kumar-pravin.blogspot.in/\r\nhttps://fedoraproject.org/wiki/User:Kumarpraveen\r\n\r\n\r\n",
      "proposer": "Praveen Kumar",
      "votes_count": null,
      "comments": 0,
      "id": 149,
      "votes": 3,
      "requirements": "<p>A laptop. We will use a remote Jenkins Instance to show demo. If participant want to try-out then require module is python-jenkinsapi (on pypi)  </p>",
      "title": "Automate Jenkins operation using python-jenkinsapi",
      "section": "Infrastructure",
      "votes_groups": null,
      "speaker": "Praveen Kumar",
      "objective": "<p>The idea of this talk to introduce Jenkins (CI) tool and using python how can we perform different operation on Jenkins (creating/configuring/triggering a job) and get result back. </p>",
      "type": "",
      "email": null,
      "bio": "<p>Praveen Kumar worked on automating different project using python and Jenkin as part of his work at RedHat. He contributes to fedora as packager where he is also managing python-jenkinsapi package. He coordinates python workshop over IRC and gave talks at various fedora events.  </p>",
      "description": "<ol>\n<li>A short walk through about Jenkins and how it's useful for Continuous Integration (CI).  </li>\n<li>Introduce python-jenkinsapi which use to handle most of Jenkins operations.  </li>\n<li>A short demo about creating/configuring and triggering job using python.</li>\n</ol>",
      "confirmed": false,
      "slides": "http://www.cloudbees.com/sites/default/files/juc/juc2014/boston/2014-0618-Boston-Praveen_Kumar-Automate_Jenkins_With_Jenkins_API.pdf",
      "phone": null,
      "name": "149-automate-jenkins-operation-using-python-jenkinsapi",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/149-automate-jenkins-operation-using-python-jenkinsapi",
      "submitted": "2014-04-28T04:03:27.334125Z"
    },
    {
      "links": "Portfolio: http://sauravtom.com/projects\r\nGithub : https://github.com/sauravtom\r\nHomepage/Blog: http://sauravtom.com\r\n\r\nBrython: www.brython.info",
      "proposer": "Saurav Tomar",
      "votes_count": null,
      "comments": 0,
      "id": 148,
      "votes": 21,
      "requirements": "",
      "title": "Python in the browser: Flying with Brython",
      "section": "Web Development",
      "votes_groups": null,
      "speaker": "Saurav Tomar",
      "objective": "<p>An in-depth introduction to Brython, an implementation of python which compiles to javascript and runs in your web browser.</p>",
      "type": "",
      "email": null,
      "bio": "<p>My name is Saurav Tomar,I am a javascript and python programmer, also a second year student at Delhi Technological University (formerly DCE)<br>\nI have been programming in python for past 3 years and have worked on various projects (for self and for corporations) related to the same.<br>\nAll of these(almost) can be found on my github profile mentioned below.  </p>\n<p>I am interested about brython and would like to share this awesome client side implementation of python with you all.<br>\nUpvote my proposal if you wish to see it happen.  </p>\n<p>I have previously spoken at osdconf (Open Source Developer Conference) and CoDelhi (Hackathon at Delhi Technological University)  </p>\n<p>osdconf slides &amp; code : <a href=\"https://github.com/sauravtom/OSDconf_coslides\">https://github.com/sauravtom/OSDconf_coslides</a>  </p>\n<p>Email: stomatrix@gmail.com<br>\nTwitter: @sauravtom</p>",
      "description": "<p>I plan to cover these broad topics in my talk  </p>\n<ul>\n<li>\n<p>What is brython ?</p>\n</li>\n<li>\n<p>Diving into the source code of brython.</p>\n</li>\n<li>\n<p>Making powerful widgets and chrome extensions with brython.</p>\n</li>\n<li>\n<p>Limitations and future of brython.</p>\n</li>\n</ul>",
      "confirmed": false,
      "slides": "https://docs.google.com/presentation/d/13uAQ1r81XKjibbx1nM5tZjrJ6_TGcJJrrkRH9nZpQfE/pub?start=false&loop=false&delayms=3000",
      "phone": null,
      "name": "148-python-in-the-browser-flying-with-brython",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/148-python-in-the-browser-flying-with-brython",
      "submitted": "2014-04-27T15:34:18.274768Z"
    },
    {
      "links": "http://www.slideshare.net/KiranGangadharan\r\nhttps://github.com/kirang89\r\nhttp://kirang.in\r\nhttps://www.facebook.com/kirang89\r\n",
      "proposer": "Kiran Gangadharan",
      "votes_count": null,
      "comments": 2,
      "id": 147,
      "votes": 20,
      "requirements": "<p>Python 2.x</p>",
      "title": "Building an open source Python application the right way",
      "section": "Core Python",
      "votes_groups": null,
      "speaker": "Kiran Gangadharan",
      "objective": "<p>This talk focuses on general guidelines/tips that one must follow when open sourcing a Python application. </p>",
      "type": "",
      "email": null,
      "bio": "<p>My name is Kiran Gangadharan. I currently work as a developer at WalletKit, Inc. Apart from that, I do open source development and read a lot about different technologies.  </p>\n<p>I love to learn a lot about computers and try hard to write simple, clean code that solves sensible/real world problems.  </p>\n<p>Currently in love with Python, and doing most my development with it.  </p>",
      "description": "<p>The world is moving towards open-source, yet a lot of folks don't really know the right way of writing an open source application. This talk focuses on general guidelines/tips that everyone must follow when open sourcing a Python application.  </p>\n<p>~ What does \"the right way\" mean ?</p>\n<p>It means making your application easier to setup, use, develop and contribute.</p>",
      "confirmed": false,
      "slides": "https://speakerdeck.com/kirang89/building-an-open-source-python-application-the-right-way",
      "phone": null,
      "name": "147-building-an-open-source-python-application-the-right-way",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/147-building-an-open-source-python-application-the-right-way",
      "submitted": "2014-04-23T18:04:03.695406Z"
    },
    {
      "links": "My blog on computer vision: http://aishack.in\r\nPersonal blog: http://utkarshsinha.com\r\nhttps://www.linkedin.com/in/sinhautkarsh",
      "proposer": "Utkarsh Sinha",
      "votes_count": null,
      "comments": 1,
      "id": 146,
      "votes": 19,
      "requirements": "",
      "title": "Image processing with Python",
      "section": "Scientific Computing",
      "votes_groups": null,
      "speaker": "Utkarsh Sinha",
      "objective": "<p>Understand how to write image processing applications with Python. Once done, the attendees can write more advanced and diverse applications (Intelligent robots, writing cool mobile apps, etc)  </p>\n<h2>Audience</h2>\n<p>Machine learning and computer vision enthusiasts</p>",
      "type": "",
      "email": null,
      "bio": "<p>I've been working with image processing for over the past five years - mostly as a hobbyist and sometimes as a consultant for organizations and startups. I have a popular blog on image processing with OpenCV: <strong><a href=\"http://aishack.in\">AI Shack</a></strong>.  </p>\n<p>I'm a graduate from BITS-Pilani - Goa Campus. I'm currently working with DreamWorks Animation - where Python is the daily driver. </p>",
      "description": "<p>The OpenCV library is a powerful one - it comes with hundreds of built in functions. We'll see how to quickly get started with using the library and see some basic techniques in image processing.  </p>\n<h2>Detailed abstract</h2>\n<p>Computer vision is one of the many aspects of machine learning. The applications of it range across a very wide variety: industrial robots, street cameras, sports robots, self driven cars, etc.  </p>\n<p>This talk will introduce to the audience how these ideas can be implemented. This isn't a workshop - but a quick stepping through the process.  </p>\n<p>Traditionally people use languages like C/C++ for such tasks. However, <strong>Python</strong> has the advantage of quickly prototyping your idea. The low verbosity of the language helps write idiomatic computer vision code.  </p>\n<p>In the talk, I'll go over the entire development cycle for a computer vision project: getting things setup, writing vision code, investigating if it works as expected/testing and deployment.  </p>\n<h2>Outline</h2>\n<p><strong>OpenCV</strong> <em>(5 minutes)</em></p>\n<p>Introduction to OpenCV as a library and it's capabilities  </p>\n<p><strong>Interesting projects</strong> <em>(5 minutes)</em></p>\n<p>Some open source projects that use OpenCV to spark interest. (<a href=\"https://www.youtube.com/watch?v=-Y4H3Sox_4I\">Soccer robots</a>, <a href=\"https://www.youtube.com/watch?v=XXv_qFXEBWw\">augmented reality</a>, <a href=\"http://www.teliportme.com/\">panaromas</a>)  </p>\n<p><strong>Python + Opencv</strong> <em>(10 minutes)</em></p>\n<p>Python bindings for OpenCV and a quick look at getting up and running with the library. This includes installation of OpenCV and getting it working with Python.  </p>\n<p><strong>Writing a prototype</strong> <em>(15 minutes)</em></p>\n<p>With OpenCV setup, I go through how to write scripts that process images. We'll write a script that tries to solve a Su Do Ku puzzle (after you've taken a picture of it)  </p>\n<p><strong>Writing thumbnailer in Python + OpenCV</strong> <em>(5 minutes)</em></p>\n<p>A personal project I did - it generates better thumbnails of videos (for nautilus).  </p>\n<p><strong>Alternatives to OpenCV</strong> <em>(5 minutes)</em> </p>\n<p>Other libraries that are easier to use  </p>\n<p><strong>Questions</strong> <em>(10 minutes)</em></p>\n<p>A Q&amp;A session with the audience  </p>\n<p><strong>Duration:</strong> 1 hour</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "146-image-processing-with-python",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/146-image-processing-with-python",
      "submitted": "2014-04-22T03:38:50.041058Z"
    },
    {
      "links": "I gave a lightning talk at PyCon '13 on \"Python & BeagleBone Black\"\r\n\r\nI have hosted a few meetups(workshops as well as talks) at our local hackerspace in Pune. http://www.meetup.com/The-Internet-of-Things/#past\r\nSome of the topics include BeagleBone Black+Image processing, Rovers using Arduino. \r\n\r\nBBB Workshop https://github.com/anujdeshpande/bbb-workshop",
      "proposer": "Anuj Deshpande",
      "votes_count": null,
      "comments": 1,
      "id": 145,
      "votes": 32,
      "requirements": "",
      "title": "Bluetooth Smart with Python : Future of IoT",
      "section": "Embedded Python",
      "votes_groups": null,
      "speaker": "Anuj Deshpande",
      "objective": "<p>The talk will introduce the audience to Bluetooth Low Energy and it's applications. I will be talking about developing applications using Python for Internet of Things, with a focus on BLE.  </p>",
      "type": "",
      "email": null,
      "bio": "<p>I use Python with OpenCV, Django, Beautiful Soup as well as for interfacing sensors on RPi &amp; BBB.<br>\nI previously interned with <a href=\"http://beagleboard.org/\">BeagleBoard.org</a> and was part of the <a href=\"https://github.com/prpplague/Userspace-Arduino\">Userspace Arduino project</a>.<br>\nI work on <a href=\"https://github.com/beaglepilot\">BeaglePilot</a> in my spare time.  </p>\n<p>I am an Embedded Systems Engineer at <a href=\"http://revealinghour.in\">RHC</a> and work on creating new applications using BLE.  </p>\n<p><a href=\"https://github.com/anujdeshpande\">GitHub</a><br>\n<a href=\"https://twitter.com/anujdeshpandey\">Twitter</a><br>\n<a href=\"http://www.anujdeshpande.com/CV_Anuj_Deshpande.pdf\">CV</a><br>\n<a href=\"http://in.linkedin.com/pub/anuj-deshpande/34/b73/785\">LinkedIn</a></p>",
      "description": "<p>BLE aka Bluetooth Smart is the latest standard developed by the Bluetooth SIG. It enables you to connect smartphones to low power sensors that run off coin cell batteries for years. Kickstarter projects using BLE range from object trackers, robots, game consoles &amp; smart wallets.<br>\nThe talk will discuss some salient features of the BLE protocol and implementations of it in Python. I will be creating a simple hardware 'hello world' on stage to give an idea about developing and testing applications for BLE.  </p>\n<ul>\n<li>Introduction to BLE</li>\n<li>Why BLE for all your IoT needs ?</li>\n<li>(P)iBeacon </li>\n<li>Get started with development</li>\n<li>What kind of applications are possible </li>\n<li>Showcase  1-2 applications using BeagleBone Black and Raspberry Pi</li>\n<li>Interesting projects that are being done using Python in open source hardware </li>\n</ul>",
      "confirmed": true,
      "slides": "",
      "phone": null,
      "name": "145-bluetooth-smart-with-python-future-of-iot",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/145-bluetooth-smart-with-python-future-of-iot",
      "submitted": "2014-04-21T10:18:31.478000Z"
    },
    {
      "links": "http://heynemann.github.io/pyvows/\r\nhttps://github.com/gabrielfalcao/lettuce",
      "proposer": "Amit Singh Sethi",
      "votes_count": null,
      "comments": 0,
      "id": 144,
      "votes": 16,
      "requirements": "<p>Laptop with preferably a linux distro<br>\nPython - Basic Knowledge<br>\nBasic understanding of software testing</p>",
      "title": "Behaviour Driven Development with Python ",
      "section": "Software Development Tools",
      "votes_groups": null,
      "speaker": "Amit Singh Sethi",
      "objective": "<p>Will introduce to basics of BDD development. And how someone could incorporate it for his own project</p>",
      "type": "",
      "email": null,
      "bio": "<p>I have worked as a Software Developer for last 5 years in various startups.  </p>\n<p>Currently dabble with node and python as a  tech consultant </p>",
      "description": "<ol>\n<li>\n<p>The idea is to talk about the basics of BDD and why it should be incorporated in your software development process.  </p>\n</li>\n<li>\n<p>Also introduce some of the tools in python that make life easy for incorporating BDD .  </p>\n</li>\n<li>\n<p>A walk through of some examples of using these tools  </p>\n</li>\n<li>\n<p>Integrating with continuous integration systems and remote browser drivers  </p>\n</li>\n</ol>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "144-behaviour-driven-development-with-python",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/144-behaviour-driven-development-with-python",
      "submitted": "2014-04-18T12:37:14.517478Z"
    },
    {
      "links": "http://www.sukhbindersingh.com",
      "proposer": "Sukhbinder Singh",
      "votes_count": null,
      "comments": 2,
      "id": 143,
      "votes": 7,
      "requirements": "<p>A beginners knowledge of python and abundance of interest in using python for science.  </p>\n<p>A laptop having python and the above mentioned libraries installed will be desirable.</p>",
      "title": "Discovering Python for Scientific Computing",
      "section": "Scientific Computing",
      "votes_groups": null,
      "speaker": "Sukhbinder Singh",
      "objective": "<p>So, what happens when you put an aerospace engineer habituated with fortran with a system having python. Find out as I describe how I used Python as a vehicle of \"discovery\" in an epic journey from command line to scientific computing and visualisation using python.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I\u2019m an Interdisciplinary scientific programmer and aerospace engineer working for Rolls-Royce account. For last 10 years I am using fortran, c and lately python to solve complex engineering problems ranging from gas turbine performance,  centrifugal compressor design to uncertainty quantification in gas turbine blades.  </p>\n<p>I've also published quite a bit of open source code in fortran and python. Check out my blog for more info.  </p>",
      "description": "<p>I'll walk you through my journey from Fortran to Python and focus on how to use python for scientific data analysis and visualisation along the way.  </p>\n<p>The talk will feature numpy, pandas , matplotlib and VTK.  </p>\n<p>I'll show you how to read in data, clean it up, visualise it using some interesting models as examples.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "143-discovering-python-for-scientific-computing",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/143-discovering-python-for-scientific-computing",
      "submitted": "2014-04-17T02:56:41.078533Z"
    },
    {
      "links": "http://sakshiii.wordpress.com/2014/04/16/my-first-talk-at-a-conference/",
      "proposer": "Sakshi Bansal",
      "votes_count": null,
      "comments": 2,
      "id": 142,
      "votes": 13,
      "requirements": "",
      "title": "Python Requests",
      "section": "Web Development",
      "votes_groups": null,
      "speaker": "Sakshi Bansal",
      "objective": "<p>We can write Python scripts that are more-or-less similar to that of a web browser. There are various advantages of using Python to interact with the web. Python Requests is a module which provides HTTP capabilities and integration with web seamless when compared with traditional Python modules like urllib2.  </p>",
      "type": "",
      "email": null,
      "bio": "<p>I am a final year student pursuing B.Tech in Computer Science from Amrita Vishwa Vidyapeetham, India. I am a FOSS enthusiast and have contributed to Open Source projects like Mozilla Thunderbird. I am a part of University hacking team - \u2018bi0s\u2019 which participates in various national and international level Capture The Flag(CTF) Ethical Hacking Contests.</p>",
      "description": "<p>Using Python on Web  </p>\n<p>Python contains libraries which make it help to interact with web-sites to perform tasks like logging into gmail, viewing web pages, filling forms, viewing and saving cookies with nothing more than a few lines of code. Once a request is sent to a server, a Python script would return the information in almost the same way a browser would return.  </p>\n<p>Urllib/Urllib2  </p>\n<p>Urllib is the default Python module used for opening HTTP URL\u2019s. It can accomplish other functions like Basic Authentication, getting Cookies, GET and POST requests, Error handling, viewing headers.  Urllib2 provides additional functionalities such as fetching URLs using a variety of different protocols like HTTP, FTP.  In spite of using both urllib and urllib2 there are various drawbacks.  </p>\n<p>Python Requests  </p>\n<p>Requests is a simple, easy-to-use HTTP library written in Python. Urllib3 is embedded within Requests providing additional features like Keep-alive and HTTP connection pooling to be 100% automatic. Requests makes interaction with web services seamless. It overcomes most of the difficulties faced while using urllib/urllib2 like manually adding query strings to your URLs, encoding of data while making GET/POST requests etc. We need to import a single Python module import requests before writing code. The main lead developer of Python-Requests is Kenneth Reitz.  </p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "142-python-requests",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/142-python-requests",
      "submitted": "2014-04-16T06:41:56.969734Z"
    },
    {
      "links": "",
      "proposer": "Owais Lone",
      "votes_count": null,
      "comments": 4,
      "id": 141,
      "votes": 22,
      "requirements": "<p>Good understanding of web architecture, Django, JS, DOM, APIs etc.</p>",
      "title": "Django single-page applications without JS MVCs.",
      "section": "Web Development",
      "votes_groups": null,
      "speaker": "Owais Lone",
      "objective": "<p>To share how to create single-page applications without using JS MVC frameworks on the frontend and duplicating code in JS.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I'm the CTO at Vetted (thevetted.com). I've worked with Django and Python for years and have worked for months on a SaaS application built on top of Django.  </p>\n<p>Previously, I was CTO+co-founder at Seesr where we worked to create an interactive video platform for media and advertising companies. I've also worked as in independent contractor and contracted for sexy startups like oDesk and Krome Photos (http://kromephotos.com/). I've also published quite a bit of open source code. </p>",
      "description": "<p>I'll talk about how to create sexy and fast single-page applications with Django without duplicating logic on the frontend in JS. </p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "141-django-single-page-applications-without-js-mvcs",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/141-django-single-page-applications-without-js-mvcs",
      "submitted": "2014-04-15T13:03:24.703504Z"
    },
    {
      "links": "",
      "proposer": "Owais Lone",
      "votes_count": null,
      "comments": 4,
      "id": 140,
      "votes": 22,
      "requirements": "",
      "title": "Multi-Tenant SaaS applications with Django",
      "section": "Web Development",
      "votes_groups": null,
      "speaker": "Owais Lone",
      "objective": "<p>To share what we learned at Vetted (thevetted.com) while creating a multi-tenant SaaS app.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I'm the CTO at Vetted (thevetted.com). I've worked with Django and Python for years and have worked for months on a SaaS application built on top of Django.  </p>\n<p>Previously, I was CTO+co-founder at Seesr where we worked to create an interactive video platform for media and advertising companies. I've also worked as in independent contractor and contracted for sexy startups like oDesk and Krome Photos (http://kromephotos.com/). I've also published quite a bit of open source code.  </p>",
      "description": "<p>Will discuss:  </p>\n<ul>\n<li>What is multi-tenant architecture and why/when to use it.</li>\n<li>How to implement it in Django.</li>\n<li>Common pitfalls we faced while creating a multi-tenant SaaS app.</li>\n<li>Patterns we used to build the SaaS architecture at Vetted. </li>\n</ul>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "140-multi-tenant-saas-applications-with-django",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/140-multi-tenant-saas-applications-with-django",
      "submitted": "2014-04-15T12:47:43.878403Z"
    },
    {
      "links": "http://nbviewer.ipython.org/url/jdj.mit.edu/~stevenj/IJulia%20Preview.ipynb\r\nhttp://nbviewer.ipython.org/github/gibiansky/IHaskell/blob/master/demo/IHaskell.ipynb\r\nhttp://nbviewer.ipython.org/github/ellisonbg/talk-pydata-nyc2013/blob/master/Multi-lingual.ipynb\r\nhttps://github.com/rudimk\r\nhttps://twitter.com/rudimk\r\nhttp://mathharbor.com/#team\r\nhttps://udemy.com/u/rudimk\r\n",
      "proposer": "Rudi MK",
      "votes_count": null,
      "comments": 2,
      "id": 139,
      "votes": 20,
      "requirements": "<p>A laptop. We'll use hosted IPython notebooks on the cloud, so nothing needs to be installed. Tablets work too, although it might be a little complicated.</p>",
      "title": "Interfacing Python with Julia, Haskell and more, for computational math",
      "section": "Scientific Computing",
      "votes_groups": null,
      "speaker": "Rudi MK",
      "objective": "<p>The idea of this talk is to take participants through a walk-through of mixing Python with languages such as Julia, Haskell, Octave, R, F# and more, and to showcase this sort of interaction between languages as a really powerful tool for computational math and stats. </p>",
      "type": "",
      "email": null,
      "bio": "<p>I'm Rudraksh, and I specialize in computational math. I've got varied experience in using math and data science for journalism, events management as well as ed-tech and social media startups. Currently, I'm working on a startup called MathHarbor, where we're building a cloud platform and hub for computational math and stats using open-source languages and toolsets. You can check it out here: <a href=\"http://mathharbor.com\">http://mathharbor.com</a>  </p>\n<p>Also, I've given a talk on tech and data journalism, at a Startup Saturday event in Delhi back in 2013. Check it out here: <a href=\"https://www.youtube.com/watch?v=peF47AwmLG4\">https://www.youtube.com/watch?v=peF47AwmLG4</a></p>",
      "description": "<ol>\n<li>A short walkthrough of math libraries in Python such as numpy, scipy, as well as CAS systems like sympy and sage.  </li>\n<li>Introduce Octave, and walk through oct2py, a module for calling Octave code from Python.  </li>\n<li>Talk about R and rpy2, a module for R, similar to oct2py.  </li>\n<li>Integrate Octave, R and Python in IPython notebooks.  </li>\n<li>Move on to IPython kernels, and the ease of porting languages to the IPython architecture.  </li>\n<li>A short demo, featuring IPython notebooks running Julia, Haskell, F#, Scala and Go, among others. </li>\n</ol>",
      "confirmed": false,
      "slides": "http://slides.com/rudimk/python-julia-haskell-more",
      "phone": null,
      "name": "139-interfacing-python-with-julia-haskell-and-more-for-computational-math",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/139-interfacing-python-with-julia-haskell-and-more-for-computational-math",
      "submitted": "2014-04-15T09:12:07.187552Z"
    },
    {
      "links": "http://simple.wikipedia.org/wiki/Representational_state_transfer\r\nhttp://flask-restful.readthedocs.org/en/latest/\r\nhttp://www.django-rest-framework.org/",
      "proposer": "Mir Nazim",
      "votes_count": null,
      "comments": 1,
      "id": 138,
      "votes": 11,
      "requirements": "<p>Understand of web development in general will very helpful for the attendees.</p>",
      "title": "Rest API Development for Django/Flask apps",
      "section": "Web Development",
      "votes_groups": null,
      "speaker": "Mir Nazim",
      "objective": "<p>Objective of this talk are:  </p>\n<ul>\n<li>What is an API.</li>\n<li>What is REST.</li>\n<li>Why REST is important.</li>\n<li>How to layout/architect a good REST API (Best Practices)</li>\n<li>How to develop REST API for Django and Flask apps (Code)</li>\n<li>Basics of API authentication using various methods.</li>\n<li>Consuming REST APIs.</li>\n</ul>",
      "type": "",
      "email": null,
      "bio": "<p>A programmer currently involved in web development using Python and related technologies.</p>",
      "description": "<p>The session will cover basics to intermediate level knowledge for developing REST API for Flask and Django apps.  </p>\n<p>Talk will start from basics of API, REST, etc. and move on to code examples, best practices, and authentication.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "138-rest-api-development-for-django-flask-apps",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/138-rest-api-development-for-django-flask-apps",
      "submitted": "2014-04-15T07:26:54.884485Z"
    },
    {
      "links": "",
      "proposer": "Aniket Maithani",
      "votes_count": null,
      "comments": 3,
      "id": 137,
      "votes": 47,
      "requirements": "<p>A laptop having python and the above mentioned libraries installed.  </p>\n<p>Python version 2.7 preferred but the libraries will work fine on latest version of Python too. </p>",
      "title": "Scientific Computation, Data Analysis and Visualisation Using Python",
      "section": "Scientific Computing",
      "votes_groups": null,
      "speaker": "Aniket Maithani",
      "objective": "<p>The main focus of the talk will be on how to use PYTHON for Data Analysis and Visualisation.</p>",
      "type": "",
      "email": null,
      "bio": "<p>FOSS/FLOSS enthusiast.<br>\nBeen experimenting with Python for more than 2 years now.<br>\nWorked extensively with Pandas [Python Library]  </p>\n<p>To find out more about me you can visit my blog :<a href=\"http://aniketmaithani.net/\">FreeSpace</a> </p>",
      "description": "<p>The talk will cover the following topics<br>\n1. Data Analysis Using PANDAS<br>\n2. Basic Libraries such as MATPLOTLIB and Visualisation<br>\n3. Dynamic Visualisation using Python<br>\n4. Other libraries such as SEABORN for statistical data visualisation<br>\n5. Using SciPy [Scipy.org]  </p>\n<p>Links :<br>\n<a href=\"http://pandas.pydata.org/\">http://pandas.pydata.org/</a></p>\n<p>[Seaborn] http://www.stanford.edu/~mwaskom/software/seaborn/</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "137-scientific-computation-data-analysis-and-visualisation-using-python",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/137-scientific-computation-data-analysis-and-visualisation-using-python",
      "submitted": "2014-04-14T21:38:16.149673Z"
    },
    {
      "links": "http://www.slideshare.net/atmb4u/faster-python\r\nhttp://www.slideshare.net/atmb4u/lets-contribute\r\nhttp://www.slideshare.net/atmb4u/pycon-2012-scikitlearn\r\nhttp://www.slideshare.net/atmb4u/future-of-computing-26904577\r\nhttp://www.slideshare.net/atmb4u/redis-way-ofanaylticspythonfifthelephant2012\r\nhttp://www.slideshare.net/atmb4u/opensource-company-building\r\nhttp://www.slideshare.net/atmb4u/test-driven-development-in-python\r\nhttps://twitter.com/atmb4u/\r\nhttp://infiniteloop.in/\r\n\r\n",
      "proposer": "Anoop Thomas Mathew",
      "votes_count": null,
      "comments": 1,
      "id": 136,
      "votes": 15,
      "requirements": "<ul>\n<li>Enough knowledge in Python to know what does <code>class</code> and  <code>def</code> mean.</li>\n<li>A laptop with python, nose and py.test would be great if you want to code along. <em>(not necessary)</em></li>\n</ul>",
      "title": "Going Bug-free",
      "section": "Software Development Tools",
      "votes_groups": null,
      "speaker": "Anoop Thomas Mathew",
      "objective": "<p>Talk will enable attendees to be able to write bug-free (less buggy) code. Live demos on how to leverage different types of testing in different stages of development for producing stable and maintainable python code, saving the time and effort going into fixing bugs in a later point of time.</p>",
      "type": "",
      "email": null,
      "bio": "<p><a href=\"https://twitter.com/atmb4u\" title=\"Anoop Thomas Mathew\">Anoop Thomas Mathew</a>  is a Python Architect with years of experience in working with python and software development in general. With the title of Chief Technology Officer @ <a href=\"http://profoundis.com\" title=\"Profoundis Pvt. Ltd.\">Profoundis</a>, he leads the engineering efforts at Profoundis and now focusing on <a href=\"https://vibeapp.co\" title=\"vibeapp.co\">vibe</a> . He has spoken at conferences like Fifth Elephant 2012, PyCon 2012, FOSSMeet 2013, PyCon 2013, FOSSMeet 2014 to name a few. More info: <a href=\"http://infiniteloop.in\" title=\"infiniteloop.in\">infiniteloop.in</a></p>",
      "description": "<p>We all rely on software heavily and can\u2019t afford a bug in it. Yet, we are humans, and we commit mistakes. Bugs can affect user experience, financial value, may cause downtime and will require extra labor to fix them. Overall, bugs are a costly affair. Only option is to hunt them down by finding if the code is working the way it is intended to.  </p>\n<p>The aim of the talk is to educate attendees on how to quickly make sure that they write less buggy software, without breaking the existing system in place. Talk will provide quick look at the most common types of bugs, reasons why they exist and how not to cut them loose. Talk will give a quick introduction to unittests and doctests for quick and easy testing.  </p>\n<p>The talk highlights different techniques and practices for building resilient and fault sensing software in python. Emphasis of testing before the code that causes the bug is even born with test oriented strategies.  And introduction other testing frameworks like nose and py.test. Ideal strategies in managing code bases and deployment will also be discussed so that only a stable version goes into the production line.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "136-going-bug-free",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/136-going-bug-free",
      "submitted": "2014-04-14T12:30:39.499341Z"
    },
    {
      "links": "Link to the same talk given at PyCon this year - http://pyvideo.org/video/2672/which-messaging-layer-should-you-use-if-you-want \r\n\r\nSlides - https://speakerdeck.com/pycon2014/which-messaging-layer-to-use-in-a-loosely-coupled-distributed-app-by-narahari-allamraju ",
      "proposer": "Narahari Allamraju",
      "votes_count": null,
      "comments": 1,
      "id": 135,
      "votes": 9,
      "requirements": "<p>Basic knowledge of Python and an idea about distributed applications</p>",
      "title": "Which messaging layer should you use if you want to build a loosely coupled distributed Python app?",
      "section": "Software Development Tools",
      "votes_groups": null,
      "speaker": "Narahari Allamraju",
      "objective": "<p>Loosely coupled, distributed, even driven, asynchronous - all these are terms that you will hear when you want to build an application that is scalable and handles large amounts of work load as if nothing happened, no sweat. There are many ways of building these, but when you talk about an application distributed across servers and talking to each other, the obvious mechanism is messaging - whether you send your own message or even using simple sockets like with Twisted or if you use a full blown broker like RabbitMQ. Even if you use something like Celery, you will have to choose a messaging backend which you want to use. And this choice is the problem - how to evaluate the various options? You can expect to learn from this session about how you can evaluate the tools and match them to your long term strategy and current requirements and then take an informed decision.  </p>",
      "type": "",
      "email": null,
      "bio": "<p>Hari is a developer with over 9 years of experience in building large scale messaging and low latency applications using Java at various investment banks, and working on integration projects at large companies. Hari is interested in exploring and building knowledge in other technologies and likes to use Python where possible in daily tasks - primarily using Jython to script some Java test cases and utilities. Hari also likes to explore Django and attempt to build a web application ans is also interested in Celery and ZeroMQ for server side development similar to his experience. </p>",
      "description": "<p>Loosely coupled, distributed, even driven, asynchronous - all these are terms that you will hear when you want to build an application that is scalable and handles large amounts of work load as if nothing happened, no sweat. There are many ways of building these, but when you talk about an application distributed across servers and talking to each other, the obvious mechanism is messaging - whether you send your own message or even using simple sockets like with Twisted or if you use a full blown broker like RabbitMQ. Even if you use something like Celery, you will have to choose a messaging backend which you want to use.  </p>\n<p>And this choice is the problem - how to evaluate the various options?  </p>\n<p>The choice is not governed by external factors, although things like licence, cost, support etc make an impact on your final decision. The choice is primarily driven by what your application is built to do, whether it wants to handle only the functionality part and wants the underlying messaging layer to provide guarantees about message delivery and caching, querying etc.  </p>\n<p>This talk will distill my experience with seeing, building and designing such messaging applications and provide a methodology that you can use.  </p>\n<p>The talk will broadly follow these points to flesh out the methodology  </p>\n<p>The basic needs<br>\nDetermining whether the application will benefit by distributing it into components that communicate using a messaging layer<br>\nDetermine of we would like to have one or more instances of each of these components<br>\nDetermine the basic layout of how they will communicate and maybe a simple flow and dependency analysis for each<br>\nIdentifying the underlying patterns that we need when we say we need messaging<br>\nDetermining the the type of interface these components will provide- request-reply or publish subscribe or queuing<br>\nDo we need to separate out messages based on types<br>\nDo we expect certain components to have a higher throughput of messages and do we need to accommodate them in a separate environment<br>\nUnderstanding any additional requirements that we will need and any assumptions of features that we expect the messaging layer to provide for us rather than we build.<br>\nDo we expect the messaging system to provide durable messages, guaranteed delivery?<br>\nDo we expect messages to be persisted to disk for crash recovery?<br>\nDo we need good monitoring tools for the messaging layer?<br>\nHow easy is it provision new queues or topics or new instances of the messaging layer?<br>\nLatency, Routing and Priority<br>\nDetermining what kind of latency do we need for these messages?<br>\nCan we afford messages sitting on a queue for a few hours?<br>\nDo we need message expiry?<br>\nDo we need message priority so that some messages can be routed to be processed faster?<br>\nHow easy is it to route messages on this platform?<br>\nUnderstanding some of these messaging tools and what they provide to us<br>\nRabbitMQ<br>\nZeroMQ<br>\nJMS servers<br>\nTIBCO RV<br>\nRedis<br>\nA database<br>\nComing up with a quick reference matrix that we can use to evaluate<br>\nA brief summary of all the above tools and their best features<br>\nApplying future growth considerations<br>\nThinking about volume growth - will the messaging layer handle a simple 15% year on year growth?<br>\nHow much more storage or how many more brokers do we need if we grww year on year by 50% or more?<br>\nNo previous experience with messaging is required - basic assumption is that you are comfortable with an application where two standalone components doing separate tasks wish to talk to each other.</p>",
      "confirmed": true,
      "slides": "",
      "phone": null,
      "name": "135-which-messaging-layer-should-you-use-if-you-want-to-build-a-loosely-coupled-distributed-python-app",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/135-which-messaging-layer-should-you-use-if-you-want-to-build-a-loosely-coupled-distributed-python-app",
      "submitted": "2014-04-09T15:48:42.556829Z"
    },
    {
      "links": "thedjangoblog.blogspot.in",
      "proposer": "Tejas Sathe",
      "votes_count": null,
      "comments": 2,
      "id": 134,
      "votes": 7,
      "requirements": "<p>Basics of Python, HTML, CSS and SQL.</p>",
      "title": "An introduction to Django, a Python web framework",
      "section": "Workshops",
      "votes_groups": null,
      "speaker": "Tejas Sathe",
      "objective": "<p>The audience will be taken through the basics of Django (a Python web framework). They will learn how to make webpages, how to link them and how to host the site and develop on the go.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I'm a Third Year Computer Engineering student (will go the final year in June) from Pune. I have been coding in Python since my second year, and started desktop app/software development in Tkinter. I moved to Django and web apps last year. I can make the tough spots simpler for those who need it, having painstakingly done so myself.</p>",
      "description": "<p>I will start off with creating a Django project. Then I'll move to creating apps, adding webpages, establishing connection to a database, and in the end, I will show them how to host it on a free server so that they can develop it from anywhere with an Internet connection. Basically everything covered on my blog (the link given below) and if possible hands on development of a basic website which would demonstrate all of the above.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "134-an-introduction-to-django-a-python-web-framework",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/134-an-introduction-to-django-a-python-web-framework",
      "submitted": "2014-04-09T15:14:41.031317Z"
    },
    {
      "links": "http://in.pycon.org/2011/talks/67-image-processing-and-computer-interaction\r\nhttp://in.pycon.org/2011/talks/68-quick-multitouch-apps-using-kivy-and-python\r\nurtalk.kpoint.com/kapsule/gcc-0b356a25-fdd0-4068-8bc8-ea552f6a6c61/search/nitin\r\nhttp://www.linkedin.com/in/upcomingnewton\r\n",
      "proposer": "nitin chadha",
      "votes_count": null,
      "comments": 3,
      "id": 133,
      "votes": 50,
      "requirements": "",
      "title": "UnicodeDecodeError: Python Strings are not what you think !",
      "section": "Core Python",
      "votes_groups": null,
      "speaker": "nitin chadha",
      "objective": "<p>World is not in ASCII anymore !! This session aims to introduce Unicode, it's implementation in python, and why strings are not the same as they are in C / Java etc. It covers all things starting from evolution of strings ( characters ) to their storage and how they are handled by python ( which is not so-perfect ). At the end, I will make sure that you are able to decipher text from even Portuguese for your applications.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I am not a geek by nature, but have good understanding of technology and programming. I am naturally motivated to help someone begin or take first steps in programming, and as such am co-founder of Panjab Univ LUG (pulug@googlegroups.com), and have spoken at various conferences also ( including pycon-2011 ).<br>\nI love to understand and design systems and architectures and as such, I have worked with companies like Google, Amazon and presently, LinkedIn where i am working on challenges everyday ( and yes, i am loving it all ! )<br>\nIn free time, I do not know what I do but mostly my time passes away planning my schedules, reading articles and running.</p>",
      "description": "<p>As the internet grows, we have support for new languages and as the new languages on-board, complexity for handling them also increases. Today, Strings form the basis of many realms like web-development, NLP, machine-learning etc but how they are implemented, stored in memory and processed upon is often overlooked as people coming from different backgrounds have their own assumptions. But that does not hold true anymore.<br>\nThis session introduces what, why and know-how of Unicode and its implementation by Python  and talks about various ways you can avoid errors like UnicodeDecodeError etc. We will go in detail of how complex system of Unicode evolved, understand its various nuisances, why programmers often overlook these details and why your customers see tons of lines of \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd.<br>\nI will also explain how Python supports Unicodes, and how it messes it up!  and also how upto varying degrees python's libraries and frameworks support Unicodes. and how python 3.0 improves on it.<br>\nAfter the session, you will be able to make out why emails from Japan are shown as \ufffd and what you need to do to avoid such things in your own websites or applications.<br>\nI will also touch on Internationalization and Localization.</p>",
      "confirmed": true,
      "slides": "",
      "phone": null,
      "name": "133-unicodedecodeerror-python-strings-are-not-what-you-think",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/133-unicodedecodeerror-python-strings-are-not-what-you-think",
      "submitted": "2014-04-09T04:47:08.911637Z"
    },
    {
      "links": "https://speakerdeck.com/anubhavsinha/pycon2014-anubhav-sinha",
      "proposer": "Anubhav Sinha",
      "votes_count": null,
      "comments": 2,
      "id": 132,
      "votes": 52,
      "requirements": "<p>Some knowledge of vagrant and Docker will be helpful but not a deal breaker. This talk will give you required knowledge of all of the tools required.  </p>\n<p>We will discuss:</p>\n<ul>\n<li>Docker</li>\n<li>Vagrant</li>\n<li>The development workflow</li>\n<li>Drone (for CI)</li>\n</ul>",
      "title": "Development to Production",
      "section": "Software Development Tools",
      "votes_groups": null,
      "speaker": "Anubhav Sinha",
      "objective": "<p>To discuss a no-nonsense write once run anywhere, very easy to setup python development workflow using modern tools like Vagrant, Docker, Drone and more.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Anubhav Sinha works for a fast growing startup, Flux7 Labs, Texas, Austin. For past several years he has been mostly involved with web application engineering for the cloud platforms like GAE and AWS. He also has experience in building predictive models using Machine Learning and loves doing Data Science with the Internet of things. He is an Amazon certified architect+developer and a Google certified digital marketeer.</p>",
      "description": "<p>A new developer joins some team which is developing some software A and now it takes ages for the new developer to setup the development environment because of the dependency hell. Moreover, software A is meant to run on OS Z,  but this new developer loves working on his favorite editor E which doesn't ship for OS Z and s/he is now stuck with a compromise while working on OS Z.  And if none of these then, the new developer just finds out that his/her fixes do work on the development environment but refuses to run in production setup due to some known mismatch that the team knew but s/he missed because of being new in the team. I bet most of you have experienced at least one or more of these problems even after years of experience as developers. Not any more. We will discuss a real write once and forget solution with no-nonsense and within a minute development environment setup using hot tools and technologies like Vagrant and Docker. We will also discuss Drone, a light and easy solution for Continuous Integration compared to Jenkins.The ideas discussed here can be used for any other programming language development workflow, useful not only to Python. But, this discussion will be Python specific.</p>",
      "confirmed": true,
      "slides": "",
      "phone": null,
      "name": "132-development-to-production",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/132-development-to-production",
      "submitted": "2014-04-07T19:00:52.129858Z"
    },
    {
      "links": "",
      "proposer": "Pooja Salpekar",
      "votes_count": null,
      "comments": 1,
      "id": 131,
      "votes": -2,
      "requirements": "",
      "title": "When SMS/USSD feeds data to WebApp.",
      "section": "Web Development",
      "votes_groups": null,
      "speaker": "Pooja Salpekar",
      "objective": "<p>Developing a Web App can become trickier when you have data coming in via SMS or USSD inputs. Also, with development, testing becomes more challenging.<br>\nThis talk covers challenges and learnings from past experiences.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Pooja Salpekar is an Application Developer at ThoughtWorks. Pooja has been developing software in Ruby on Rails and Python-Django based web-apps throughout her career. She has worked on SMS integrated web apps and USSD based projects in Africa, drove the development of Test Trend Analyzer (a ThoughtWorks product) and was part of the team that worked on load balancing on Cloud Computing environment.  </p>\n<p>She enjoys mentoring, and has conducted ruby sessions for college students in Uganda, teaching them the basics of Ruby based Web-Development. Passionate about writing clean code, Pooja has a penchant for exploring anything new, be it frameworks, development paradigms, technical or non-technical.</p>",
      "description": "<p>For most of us who have been involved in web development/desiging, would know that even though they say- \"Its just a web app, how hard it can be?\", it's never that simple. Every web development has got its own hitches. Yes, we always manage to solve them, and not to forget- the learnings.  </p>\n<p>On similar note, some of my learnings while working on sms-based  and USSD-based web apps.<br>\nWhen your development is based on inputs from these data sources, testing your application and more importantly automating these tests becomes challenging.  </p>\n<p>Writing an applications that sends and handles USSD responses, was truely one of my proud learnings. Specially now-a-days when all kind of jazz is done in your smart phones, getting a chance to deal with pains and perks USSD is worth mentioning.  </p>\n<p>Session will include:<br>\n- A quick demo app integrating responses from USSD/SMS. \n- Testing strategies to cover end to end tests for these kind of applications.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "131-when-sms-ussd-feeds-data-to-webapp",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/131-when-sms-ussd-feeds-data-to-webapp",
      "submitted": "2014-04-07T03:45:17.192794Z"
    },
    {
      "links": "https://github.com/rahul080327/medusa\r\nhttps://www.dartlang.org",
      "proposer": "Rahul De",
      "votes_count": null,
      "comments": 5,
      "id": 130,
      "votes": 26,
      "requirements": "<p>Familiarity with Python, C++, Dart(an added bonus) and Programming Language Translation.</p>",
      "title": "Medusa: A much faster Python implementation based on the Dart Virtual Machine",
      "section": "Core Python",
      "votes_groups": null,
      "speaker": "Rahul De",
      "objective": "<p>Get to know about Medusa: a new innovative Python implementation harnessing Google's super fast Dart Virtual Machine running Python at near native speeds.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I am a 22 year old final year Computer Science undergrad from VIT University, Vellore, India. I love systems programming and am really passionate about core systems and programming. My areas of interest are compilers, virtual machines, server programming and game development. I have done quite a few notable projects including a DMBS engine written from scratch and a whole new Symmetric Stream Cipher. I love exploring new creative and unorthodox possibilities and believe in the art rather than the science of computer programming.</p>",
      "description": "<p>The session will formally unveil the Medusa project.  </p>\n<p>Python being an interpreted language has its pros and cons and at this PyCon we are going fix one of the most obvious cons of Python: its execution speed.<br>\nWe all love Python for its simplicity and flexibility but when it comes to writing large volumes of code involving complex operations and recursions Python somewhat falls short compared to the other native/JIT languages.  </p>\n<p>In late 2012, Google came up with Dart, a language aiming for the unification of server and client side web development and scalable apps. Along with it came The Dart Virtual Machine. A hyper fast VM which builds upon the V8 js engine and even outperforms it. We decided why not let Python have a go on this?  </p>\n<p>The main aim behind creating the Medusa project is giving a typless and flexible language like Python a faster execution environment while still maintaining all its flexibility which we all love. Numerous projects such as the ShedSkin project which converts implicitly typed Python to C++ have tried doing it, but have put some or the other restriction on the input Python code. The Medusa project aims at running pre-existing Python code without any or minimal modification at a much faster rates compared to the usual implementations.  </p>\n<p>Still in its nascent stages and implemented using Qt/C++, Python and Dart, the project works by compiling Python code to a highly optimized Dart code in real time, persistently caching it and letting it rip on the Dart VM. The Dart VM like V8 compiles the dart code directly to machine code and using its vast array of runtime optimizations runs at a much higher speed compared to the CPython implementation and at times upto a 1000 - 1500% faster while maintaining all the features Python offers. Apart from this Python is further enriched with extra features provided by the Dart VM and you can do more stuff with Python which isn't possible with the vanilla Python.</p>",
      "confirmed": true,
      "slides": "https://docs.google.com/presentation/d/1ClsPDKYtCTZGsSOAwYm4N8pGQ_lx-8GzMX21mZ9vikE/pub?start=false&loop=false&delayms=5000",
      "phone": null,
      "name": "130-medusa-a-much-faster-python-implementation-based-on-the-dart-virtual-machine",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/130-medusa-a-much-faster-python-implementation-based-on-the-dart-virtual-machine",
      "submitted": "2014-04-06T14:41:12.784951Z"
    },
    {
      "links": "http://continuum.io/downloads\r\n\r\nhttp://docs.continuum.io/anaconda/ide_integration.html\r\n\r\nhttps://code.google.com/p/pythonxy/\r\n\r\n\r\n\r\n",
      "proposer": "Jalem Raj Rohit",
      "votes_count": null,
      "comments": 2,
      "id": 129,
      "votes": 39,
      "requirements": "<p>A laptop with all the libraries installed.  </p>\n<p>All the necessary libraries can be installed at once, from the Anaconda package from Continuum Analytics.  </p>\n<p>The pandasql is not available in the Anacondas package, so please install it separately.<br>\nSome alternatives to the Anacondas package: Python(x,y) , Canopy.  </p>\n<p>It would be better if the participants get their IDE's configured for the Anaconda package. The steps are available in the Anacondas documentation.</p>",
      "title": "Python for Data Science and NLP.",
      "section": "Scientific Computing",
      "votes_groups": null,
      "speaker": "Jalem Raj Rohit",
      "objective": "<p>An insight into analyzing and visualizing a dataset using various libraries of Python, and also get the audience started in NLP, using NLTK.<br>\nAfter the talk, the audience would have a good understanding about using Python as an effective Data Science tool.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I am a 20 year old undergrad at IIT Jodhpur. Being a passionate Data Scientist, I have been practicing Data Science and also pursuing active research with a research paper to my credit.  </p>\n<p>I have given talks on Data Science and Data metrics as part of the Mozilla Team. So, I am well experienced with providing a learner-friendly environment and an interesting and engaging talk for beginners at Data Science, and help them take home the confidence of getting started and going at the skill.  </p>\n<p>Being an undergraduate student, I would be very compatible with the audience, in helping them understand the concepts from the root-level, having known it's importance being an active learner myself.  </p>\n<p>LinkedIn profile:  <a href=\"http://in.linkedin.com/in/jalemrajrohit\">http://in.linkedin.com/in/jalemrajrohit</a><br>\nPersonal Website:  <a href=\"http://dawny33.github.io/\">http://dawny33.github.io/</a></p>",
      "description": "<p>Data Science have become a buzz-word in the recent days. Python have emerged as a very powerful tool for Data Scientists.  </p>\n<p>The main motive behind this session is to get people started at using Python for analyzing datasets, right from munging and wrangling a dataset to developing and deploying some cool Machine Learning algorithms.  </p>\n<p>At the end of the session, the participants would get well acquainted with the libraries essential for Data Science practice and also with scraping and analyzing data using API's, databases, and directly from data available in the local system, and also get started at nltk and try to make sense of text snippets and try to understand the magic of search engines and complexity of the NLP world.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "129-python-for-data-science-and-nlp",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/129-python-for-data-science-and-nlp",
      "submitted": "2014-04-04T14:55:54.008154Z"
    },
    {
      "links": "http://kushaldas.in/talks/documentyourcode/#/step-1\r\nhttp://www.dgplug.org/irclogs/2012/rst-primer/\r\nhttps://fedoraproject.org/wiki/User:Kushal#Talks_.26_Workshops",
      "proposer": "Kushal Das",
      "votes_count": null,
      "comments": 0,
      "id": 128,
      "votes": 15,
      "requirements": "<ul>\n<li>python-sphinx</li>\n<li>An open mind to learn</li>\n</ul>",
      "title": "Document your code",
      "section": "Workshops",
      "votes_groups": null,
      "speaker": "Kushal Das",
      "objective": "<p>To learn how to write documentation for your codebases. Documentation is the key for communication and developers are the best person to start writing it. Projects can succeed or fail because of their documentation. </p>",
      "type": "",
      "email": null,
      "bio": "<p>Kushal Das is a core developer of CPython. He is a Fedora Ambassador and also fellow of Python Software Foundation.  </p>\n<p>He is a regular speaker in different technical conferences including previous PyCon(s) and also does Python workshops in various events &amp; engineering colleges.  </p>\n<p>He also wrote a beginner Python book called Python for you and me which is targeted to the students for fast paced learning and available freely online .</p>",
      "description": "<p>In the workshop the people will be introduced to reStructuredText &amp; sphinx. Starting from quick-start of a project to document organization, code and topic cross-referencing, indexing. We will also go through running tests from your documentation, initial ideas on themes and deployment in readthedocs.<br>\nLast year this workshop was very well accepted among the participants.  </p>\n<h2>Quick summary of the workshop</h2>\n<ul>\n<li>Introduction to reStructuredText</li>\n<li>Introduction to sphinx</li>\n<li>A project structure with docs</li>\n<li>hands-on tutorial with sphinx</li>\n<li>Integration with readthedocs</li>\n</ul>\n<h2>Takeaway</h2>\n<p>The participants should be able to start working on documentation of their respective projects or start contributing to other projects using sphinx and other tools. </p>",
      "confirmed": true,
      "slides": "",
      "phone": null,
      "name": "128-document-your-code",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/128-document-your-code",
      "submitted": "2014-04-03T17:49:31.039330Z"
    },
    {
      "links": "http://hardwarefun.com/news/control-raspberry-pi-gpio-pins-from-python\r\nhttps://github.com/sudar/raspberry-pi-sketches\r\nhttp://sudarmuthu.com/my-talks",
      "proposer": "Sudar Muthu",
      "votes_count": null,
      "comments": 2,
      "id": 127,
      "votes": 7,
      "requirements": "<ul>\n<li>Good understanding of Python</li>\n<li>Basic knowledge about Raspberry Pi</li>\n<li>Basic knowledge about GPIO, I2C etc (optional)</li>\n</ul>",
      "title": "Building Robots using Python and Raspberry Pi",
      "section": "Embedded Python",
      "votes_groups": null,
      "speaker": "Sudar Muthu",
      "objective": "<p>Introduce people to robotics using Python and Raspberry Pi</p>",
      "type": "",
      "email": null,
      "bio": "<p>I build robots as a hobby and have <a href=\"http://sudarmuthu.com/my-talks\">given talks</a> on how to interact with hardware using various technologies and tools.  </p>\n<p>For my day job, I work as a Research Engineer at Yahoo! Labs.</p>",
      "description": "<p>This will be a continuation of my <a href=\"http://in.pycon.org/funnel/2013/21-python-in-raspberry-pi\">earlier talk in PyCon 2013 about Raspberry Pi and Python</a>.  </p>\n<p>In my earlier talk, I introduced Raspberry Pi and Python. In this talk, I will build upon those and introduce people to robotics using Python and Raspberry Pi.</p>",
      "confirmed": true,
      "slides": "",
      "phone": null,
      "name": "127-building-robots-using-python-and-raspberry-pi",
      "level": "Advanced",
      "url": "http://in.pycon.org/funnel/2014/127-building-robots-using-python-and-raspberry-pi",
      "submitted": "2014-04-02T11:16:20.947525Z"
    },
    {
      "links": "http://osidays.com/osidays/speaker-lineup/nitin-mehta/\r\nhttp://in.linkedin.com/in/nitinmht/\r\nmysqlbits.blogspot.com",
      "proposer": "Nitin Mehta",
      "votes_count": null,
      "comments": 0,
      "id": 126,
      "votes": 7,
      "requirements": "<p>MySQL Utilities requires Python 2.6+.  </p>\n<p>MySQL Utilities requires MySQL Connector/Python GA release (version &gt; 1.0.8) for connecting to MySQL. If you do not have Connector/Python installed, see the download section for Connector/Python to &lt;u&gt;&lt;a href=\"http://dev.mysql.com/downloads/connector/python/\"&gt; download &lt;/a&gt;&lt;/u&gt; the appropriate repository.</p>",
      "title": "MySQL Utilities: Scaling MySQL with Python",
      "section": "Workshops",
      "votes_groups": null,
      "speaker": "Nitin Mehta",
      "objective": "<p>Attendees will learn about MySQL Utilities (written in Python) to manage and scale MySQL databases. Several utilities also enable to automate tasks which otherwise require lot of configuration/manual intervention.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Nitin is employed with Oracle India as a Principal Pre-Sales Consultant helping customers to design and improve the databases.  </p>\n<p>Nitin has been using MySQL since release 3.23 and has been instrumental in designing and configuring some of the largest databases on MySQL in India. He is also a certified Database professional and does a lot of scripting and automation in his free time.</p>",
      "description": "<p>MySQL Utilities allow a non-DBA to &lt;b&gt;automate routine tasks&lt;/b&gt; and make the MySQL databases scale with the least possibility of error. A more advanced user / DBA can use and extend these utilities to manage &lt;b&gt; large databases &lt;/b&gt;for growing requirements and scale these with minimal inputs using &lt;b&gt;database layer sharding&lt;/b&gt;.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "126-mysql-utilities-scaling-mysql-with-python",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/126-mysql-utilities-scaling-mysql-with-python",
      "submitted": "2014-04-01T11:27:53.343447Z"
    },
    {
      "links": "https://www.python.org/success-stories/snick-a-programming-language-created-in-python/\r\n\r\nhttp://www.softpedia.com/progMoreBy/Publisher-Nirman-Dave-75689.html\r\n\r\nhttps://www.youtube.com/watch?v=ywCtTeRtL74\r\n\r\nhttp://www.snick.uni.me/\r\n\r\nhttps://www.youtube.com/watch?v=KtIzXrECxpA\r\n\r\nhttp://buddybits.com/stars/two-young-school-guys-developed-a-multi-touch-surface-table/\r\n\r\nhttp://www.sourcenet.blogspot.in/\r\n\r\nhttp://www.sourcenick.blogspot.in/\r\n\r\nhttp://www.nirman.uni.me/",
      "proposer": "Nirman Dave",
      "votes_count": null,
      "comments": 4,
      "id": 125,
      "votes": 38,
      "requirements": "<p>Requirements for presentation :<br>\nA Projector<br>\nA remote to control the powerpoint presentation<br>\nA computer with good audio quality and video playing functionality<br>\nA Collar mike</p>",
      "title": "Python the future of innovative technology?",
      "section": "Embedded Python",
      "votes_groups": null,
      "speaker": "Nirman Dave",
      "objective": "<p>An insight into understanding the applications of python!<br>\nAfter the talk, the audience would have a good understanding about its infinite amount of uses!!!</p>",
      "type": "",
      "email": null,
      "bio": "<p>I am just 17 years old, I have done alot of extraordinary projects and i aspire to become the best in my own field. Apart from that, I am also a very good speaker and presenter. My work and my quality of speech has allowed me to excell in my field. Local universities (in Gujarat) such as Gardi, Mica, Nirma, LD Engineering college, Atmiya college and Christ college have invited me to speak about my projects and how i have worked on them. Not only that but I am also a part time professor at the Kansagra college in my town, where i teach python programming. My work, skill, and passion from programming (especially with python) makes me the most suitable person for this session.  </p>\n<p>1) Article on YourStory.com : <a href=\"http://yourstory.com/2014/04/nirman-dave-techie-tuesdays/\">http://yourstory.com/2014/04/nirman-dave-techie-tuesdays/</a>  </p>\n<p>2) Interview on BuddyBits.com : <a href=\"http://buddybits.com/stars/two-young-school-guys-developed-a-multi-touch-surface-table/\">http://buddybits.com/stars/two-young-school-guys-developed-a-multi-touch-surface-table/</a>  </p>\n<p>3) Interview on Movzio.com : <a href=\"http://www.movzio.com/columns/in-conversation-with-nirman-dave/\">http://www.movzio.com/columns/in-conversation-with-nirman-dave/</a>  </p>\n<p>4) Interview on RoughPolish : <a href=\"http://roughpolish.com/interview-magician-coding-mr-nirman-dave-founder-sourcenet/\">http://roughpolish.com/interview-magician-coding-mr-nirman-dave-founder-sourcenet/</a>  </p>\n<p>5) Article on TheTechPanda : <a href=\"http://thetechpanda.com/2014/04/28/17-year-old-nirman-dave/\">http://thetechpanda.com/2014/04/28/17-year-old-nirman-dave/</a>  </p>\n<p>6) Video interview by WakeUp productions: <a href=\"https://www.youtube.com/watch?v=Jd59Kb_8UZ8\">https://www.youtube.com/watch?v=Jd59Kb_8UZ8</a>  </p>\n<p>7) Interview on InGujarat: <a href=\"http://ingujarat.in/talent/interview-with-nirman-dave/\">http://ingujarat.in/talent/interview-with-nirman-dave/</a>  </p>\n<p>8) Article on The Startup Journal: <a href=\"http://www.thestartupjournal.com/nirman-dave-coder-ceo-professor-at-17-year-old/\">http://www.thestartupjournal.com/nirman-dave-coder-ceo-professor-at-17-year-old/</a>  </p>\n<p>9) Official website: <a href=\"http://www.sourcenet.in\">http://www.sourcenet.in</a>  </p>\n<p>10) About me: <a href=\"http://www.sourcenet.in/p/about.html\">http://www.sourcenet.in/p/about.html</a>  </p>\n<p>11) More links: <a href=\"http://www.bit.ly/snmedia\">http://www.bit.ly/snmedia</a></p>",
      "description": "<p>I am Nirman Dave, I am 17 years old and have been invited as guest speaker to many local python groups. That include groups such as PyGuj, etc. I have worked on three main projects using python, which have been very successful. I will hence, be talking about these three projects and will make the audience realize why python is the future of innovative technology.Below are my projects that I will talk about and their details.  </p>\n<p>All these projects are done by me and are all my copyrights.  </p>\n<p>1) Snick : Its a programming language i made using python. Check these links for more about this project.<br>\nLinks:  </p>\n<blockquote>\n<p><a href=\"https://www.python.org/success-stories/snick-a-programming-language-created-in-python/\">https://www.python.org/success-stories/snick-a-programming-language-created-in-python/</a>\n<a href=\"http://www.softpedia.com/get/Programming/Coding-languages-Compilers/Snick.shtml\">http://www.softpedia.com/get/Programming/Coding-languages-Compilers/Snick.shtml</a>\n<a href=\"https://www.youtube.com/watch?v=ywCtTeRtL74\">https://www.youtube.com/watch?v=ywCtTeRtL74</a>\n<a href=\"http://snick.uni.me/\">http://snick.uni.me/</a>\n<a href=\"http://sourcenet.blogspot.in/2014/03/snick-v20-trailer.html\">http://sourcenet.blogspot.in/2014/03/snick-v20-trailer.html</a></p>\n</blockquote>\n<p>2) Antable : It is a project where i converted a piece of paper into a multi touch surface table. To do this, i did not use any touch sensors or stuffs. The idea was simple, when we touch the paper, a shadow of your finger is formed underneath the paper. A webcam is placed below the paper which recognizes the shadow of your finger and moves the cursor with it. To do this I created a software, using python.<br>\nLinks:  </p>\n<blockquote>\n<p><a href=\"http://buddybits.com/stars/two-young-school-guys-developed-a-multi-touch-surface-table/\">http://buddybits.com/stars/two-young-school-guys-developed-a-multi-touch-surface-table/</a>\n<a href=\"https://www.youtube.com/watch?v=KtIzXrECxpA\">https://www.youtube.com/watch?v=KtIzXrECxpA</a>\n<a href=\"http://antable.uni.me/\">http://antable.uni.me/</a></p>\n</blockquote>\n<p>3) Drive bud : It is a project where you can listen to songs using earbuds (the top part of earphones) and does not require you to have any music storing device such as a phone or PC. All you have to do is say the name of a song and it will be played. Not only that but, functions such as GPS, Information search, Phone calling, Texting can also be done. The operating system for this device is coded by me using python.<br>\nLinks for this project will be online soon.  </p>\n<p>4) Benedict : Benedict is an artificial intelligence software. Yes, it's something similar to Siri and Cortana. But for PC! Not only that, Benedict supports multiple languages and colloquial terms! Benedict is currently under-construction. But you can follow its construction on GitHub!  </p>\n<blockquote>\n<p><a href=\"https://github.com/nddave/BenAIIncomplete/blob/master/BenAIIncCode.py\">https://github.com/nddave/BenAIIncomplete/blob/master/BenAIIncCode.py</a></p>\n</blockquote>",
      "confirmed": false,
      "slides": "http://www.slideshare.net/nirman1234/nirman-dave-on-why-python-is-the-future-of-innovative-technology",
      "phone": null,
      "name": "125-python-the-future-of-innovative-technology",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/125-python-the-future-of-innovative-technology",
      "submitted": "2014-04-01T05:37:44.189426Z"
    },
    {
      "links": "",
      "proposer": "Shashank Shekhar",
      "votes_count": null,
      "comments": 3,
      "id": 124,
      "votes": 30,
      "requirements": "<p>A laptop with:<br>\n- Linux\n- Internet Connectivity (Provided at the Venue?)\n- Python\n- BeautifulSoup4\n- Requests\n- Selenium\n- Chrome/Firefox\n- Redis Server\n- Redis(python wrapper)\n- Celery-with-Redis</p>",
      "title": "Scrape Anything - Even the most difficult sites",
      "section": "Workshops",
      "votes_groups": null,
      "speaker": "Shashank Shekhar",
      "objective": "<p>This workshop will start from the basics of web scraping and proceed to the techniques required to scrape even the hard-to-scrape sites and running concurrent scrapers to scale up the process.  </p>\n<p>Hard-to-scrape can be described as sites which load the DOM with Javascript, need authentication, etc.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I am Shashank Shekhar.  </p>\n<p>I work as a Developer in Noida. I spend most of my time making REST APIs and web scrapers in Python.  </p>",
      "description": "<p>Python and available modules make Web Scraping an easy task.  </p>\n<p>But some sites require you to be creative in your approach in writing your scraping solutions. e.g. appannie.com, jelly.com  </p>\n<p>In this workshop we will discuss about such common roadblocks and how to overcome them.  </p>\n<p>We will also discuss how to introduce concurrency to your scrapers.</p>",
      "confirmed": true,
      "slides": "",
      "phone": null,
      "name": "124-scrape-anything-even-the-most-difficult-sites",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/124-scrape-anything-even-the-most-difficult-sites",
      "submitted": "2014-03-31T12:45:26.748623Z"
    },
    {
      "links": "",
      "proposer": "Sarthak Dev",
      "votes_count": null,
      "comments": 1,
      "id": 123,
      "votes": 17,
      "requirements": "<p>A laptop with the development environments set up.</p>",
      "title": "NLTK - A look into Natural Language Processing with Python",
      "section": "Scientific Computing",
      "votes_groups": null,
      "speaker": "Sarthak Dev",
      "objective": "<p>Python is amazing. So is Natural Language Processing. Once the talk is over, the audience would be adept at the core fundamentals behind NLP and how to apply them using Python. </p>",
      "type": "",
      "email": null,
      "bio": "<p>I'm a 23 year-old, working with start-ups for the last two years, where I've had to work with Machine Learning and NLP. I like to tend to the Computer Scientist side more than the Engineer side, which is why my high interest levels in both.  </p>\n<p>Having recently passed out of college, I also understand the importance of keeping a talk/workshop fun and interesting if the audience is to gain anything out of it.  </p>\n<p>What I lack in raw experience, I'd probably make up with energy and a student-like approach. </p>",
      "description": "<p>In the day and age of predictive software and reduced click-motion, natural language processing plays a huge role in our daily technical lives. We all like to use speech-based systems to trigger actions on our mobile/computers.  </p>\n<p>The main motive behind this session is to open up more people to the myriad possibilities that NLP opens up for us developers. To start things off, we'll be going through some basic operations using NLTK. Once the idea of using it is established, there'll be a full demo on how to make a predictive system using two kinds of datasets: self-created and library-imported. </p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "123-nltk-a-look-into-natural-language-processing-with-python",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/123-nltk-a-look-into-natural-language-processing-with-python",
      "submitted": "2014-03-31T07:01:47.306802Z"
    },
    {
      "links": "http://www.linkedin.com/in/lakshmag\r\n",
      "proposer": "lakshmag",
      "votes_count": null,
      "comments": 2,
      "id": 122,
      "votes": -4,
      "requirements": "<p>None</p>",
      "title": "SMAC(k) It! - Using Python",
      "section": "Web Development",
      "votes_groups": null,
      "speaker": "lakshmag",
      "objective": "<p>SMAC - Social, Mobile, Analytics, Cloud is the new/next IT.  </p>\n<p>How Python can help in the SMAC software development? </p>",
      "type": "",
      "email": null,
      "bio": "<p>Lakshmanan, nurtures the community of IT architects at Infosys. He holds a Master of Engineering from Anna University. His current areas of interest are around coaching professionals for Excellence and Innovation leveraging emerging technology. </p>",
      "description": "<p>SMAC development using Python:  </p>\n<p>Social - Social Integration and Analytics using Python (Facebook, Twitter, Youtube, Linkedin - API connect using Python)  </p>\n<p>Mobile - Development using Kivy Python (iOS and Android)  </p>\n<p>Analytics - Big Data - Hadoop using MRJob Python and Data Analysis using Pandas Python  </p>\n<p>Cloud - PaaS (Heroku Python, Pythonanywhere, GAE Python) and IaaS (AWS Boto Python)</p>",
      "confirmed": false,
      "slides": "http://lakshmag-notes.blogspot.in/",
      "phone": null,
      "name": "122-smac-k-it-using-python",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/122-smac-k-it-using-python",
      "submitted": "2014-03-24T13:48:48.185407Z"
    },
    {
      "links": "Project Page [ http://simversity.github.io/mongorm/ ]\r\nProfile Link [ http://siminars.com/133071947969939498163702 ]",
      "proposer": "Piyush Verma",
      "votes_count": null,
      "comments": 3,
      "id": 121,
      "votes": 23,
      "requirements": "<ul>\n<li>Working Laptop (running any flavor of Linux)</li>\n<li>Working MongoDB binary</li>\n<li>Prior experience with Python</li>\n</ul>",
      "title": "Write your own mongoDB ORM (for fun and profit)",
      "section": "Workshops",
      "votes_groups": null,
      "speaker": "Piyush Verma",
      "objective": "<p>A take-home ORM written by you, ready-to-be-used in your current applications without having to bother about the lack of data sanitizations and data consistencies in MongoDB.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Piyush Verma has been using Python for bread &amp; butter for for over 7 years. He started out as a Summer Of Code student with KDE. Through out his career he has worked with small &amp; successful startups &amp; is currently the Director of Engineering at siminars.com (solves different problems with Python). He likes Coding, Coffee, Cycling and following logics &amp; patterns.</p>",
      "description": "<p>NoSQL databases like MongoDB are really a hot tool these days. The ease of usage and the speed of development make them the right choice of tool for most of application use cases. If you really do not have the luxury of developers who are comfortable with SQL, you might as well use it as your primary data source.  </p>\n<p>We at siminars.com have been using MongoDB for almost all of our needs like 1. Payments 2. User Data 3. Logs 4. Job Queue and have been using it well for over 4 years now.  </p>\n<p>The fact that you can dump any JSON (read BSON) data to databases is the real advantage over tight physical schemas. But the lack of data integrity and validations could mean that all the validations and datatype checks have to re-implemented at the application layer.  </p>\n<p>This session orients around implementing a really light weight ORM for Mongo in Python, all from scratch, which would ensure basic data valdiations like:  </p>\n<ol>\n<li>Required fields  </li>\n<li>Default values  </li>\n<li>Datatype checks  </li>\n<li>OnUpdate/ OnInsert / OnDelete triggers  </li>\n</ol>\n<p>and yeah a lot more.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "121-write-your-own-mongodb-orm-for-fun-and-profit",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/121-write-your-own-mongodb-orm-for-fun-and-profit",
      "submitted": "2014-03-22T11:24:53.292388Z"
    },
    {
      "links": "http://expeyes.in\r\nhttp://expeyes.wordpress.com",
      "proposer": "praveen patil",
      "votes_count": null,
      "comments": 6,
      "id": 120,
      "votes": 6,
      "requirements": "<p>Projector, Power terminals</p>",
      "title": "ExpEYES : Python Powered Open Source Portable Science Lab",
      "section": "Workshops",
      "votes_groups": null,
      "speaker": "praveen patil",
      "objective": "<p>An understanding of science and technology is necessary in every students life. The main challenge in the field of  science Education at a global level is the declining interest of students into science. Unfortunately the performance of a student is often measured by the ability to memorize than the real understanding. as a result most of them fail to apply what they learn in the classroom to the things they encounter in real life. Students also lose interest because of absence of appropriate motivation and also due to the of lack of equipment.  </p>\n<p>The key to combating this  is the adoption of an inquiry-based, 'learn-by-doing' approach i.e. learning by exploring and experimenting. However, almost everywhere science is mostly taught from the textbooks without giving importance to experiments, partly due to lack of equipment. ExpEYES (Experiments for Young Engineers and Scientists)  is the most affordable solution to this problem. ExpEYES brings the ability to perform experiments with reasonable accuracy, opens up an entirely new path for learning science.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Praveen Patil<br>\nA Physics Teacher and free software enthusiast.  </p>\n<p>M.Sc. in Physics from Karnatak University Dharwad, India. Currently pursuing PhD from Visvesvaraya Technological University, Belgaum.  </p>\n<p>Profession: Working as a  Lecturer in Physics since last 12 years at Govindram Seksaria Science College Belgaum, India.  </p>\n<p>Involvement in Free Software :<br>\nUsing Free Software and ExpEYES for classroom and laboratory  demonstrations for 11th and 12 grade.<br>\nMaintaining a blog for ExpEYES.<br>\nInvolved in FOSS training programs for science teachers.<br>\nWorking  e-content developer for National Repository of Open Educational Resources (NROER) for School Education by Central Institute of Education Technology (CIET), NCERT, New Delhi.  </p>\n<p>Worked  as a member of committee for \u201cDevelopment of ICT Refresher Course forstudents and teachers\u201d @ CIET-NCERT, New Delhi.Developed Three Refresher courses ExpEYES: An open Source Science Lab, STEP : Physics Simulation Environment &amp; IWICT -Interacting with ICT tools.  </p>\n<p>ExpEYES Workshops/Training programs conducted :  </p>\n<p>\uf0a7   Carmel College, Nuvem, Goa.\n\uf0a7   Jansons Institute of Technology, Coimbatore, Tamilnadu.\n\uf0a7   G S S College, Belgaum, Karnataka and several other schools and colleges.\n\uf0a7   Resource person for \u2018UGC Sponsored State Level Workshop\u2019 on \u201cExperiments for Young Engineers andScientists\u2013ExpEYES\u201d on November 15 - 16, 2013 Organized byDepartment of Physics &amp; Electronics P.V.K.N. Govt. Degree College, Chittoor, Andhra Pradesh.</p>\n<p>Talks at International Event<br>\n\uf0a7   Invited Speaker @ FOSSASIA - 2014 hosted at Norton University in Phnom Penh City, Cambodia on February 28 - March 2, 2014. ( Delivered a Talk and conducted workshop)</p>\n<p>Conference at RMLL-2014 at Montpellier, France <a href=\"https://2014.rmll.info/conference88\">https://2014.rmll.info/conference88</a>  </p>",
      "description": "<p>With the objectives of developing  affordable laboratory equipment and training science teachers, ExpEYES is from the PHOENIX project of Inter-University Accelerator Centre, New Delhi.  It is an Open Hardware and Free Software framework for developing science experiments, classroom demonstrations and projects without getting in to the details of electronics or computer programming. It converts your PC into a portable science laboratory.  </p>\n<p>ExpEYES can be used to perform a large number of experiments. For example, the device can be used to study electromagnetic induction, interference of sound waves, Lissajous Figures, to measure gravity by time of flight, alongside many other applications. Concepts like Lissajous Figures and Electromagnetic induction are quite  difficult for most students. ExpEYES allows the study of fast changing phenomena and is an effective tool for exploring electromagnetic phenomena  and  the laws of electromagnetic induction\u2014namely, Faraday\u2019s law and Lenz\u2019s law. The ability to capture real-time graphs offers the important beni\ufb01t for students to better visualize the associated phenomena and develop a deeper understanding of it.  </p>\n<p>In this presentation we will be demonstrating and discussing how ExpEYES can be used to explore and study various phenomena like Interference of Sound, Lissajous Figures and  Electromagnetic Induction in different situations: a magnet oscillating in a coil, magnet falling through a coil, a ferromagnetic material and a magnet swinging over a coil.  </p>",
      "confirmed": true,
      "slides": "",
      "phone": null,
      "name": "120-expeyes-python-powered-open-source-portable-science-lab",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/120-expeyes-python-powered-open-source-portable-science-lab",
      "submitted": "2014-03-11T12:20:04.925865Z"
    },
    {
      "links": "",
      "proposer": "Narahari Allamraju",
      "votes_count": null,
      "comments": 2,
      "id": 119,
      "votes": 2,
      "requirements": "<p>A basic knowledge of python</p>",
      "title": "Building a journey planner in an evening with Python, scrapy, networkx",
      "section": "Web Development",
      "votes_groups": null,
      "speaker": "Narahari Allamraju",
      "objective": "<p>We all have heard about journey planners - there is one on BMTC website, and Chennai MTC website, and its very common for major cities around the world. The journey planner simply provides us with all the routes from point A to point B with details of time, distance and cost.<br>\nHow do these work? And how difficult will it be to build one? lets see if we can build a simple journey planner in an evening.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Hari is a developer with over 9 years of experience in building large scale enterprise messaging/middleware and electronic trading systems. He is interested in Python and likes to work with Celery, Django, Scrapy and other tools to build simple solutions to interesting problems.  </p>\n<p>Hari has conducted workshops on Celery at PyCon SG and PyCon India 2013; he will also be conducting a workshop at PyCon 2014 in Montreal.  </p>\n<p>Some of his Python experiments can be found at - <a href=\"https://github.com/supercoderz\">https://github.com/supercoderz</a></p>",
      "description": "<p>This talk will go into the details of<br>\n- What data do we need to build a journey planner\n- How we should architect a journey planner\n- The individual components\n- The algorithms\n- Plotting on a map (if time permits)</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "119-building-a-journey-planner-in-an-evening-with-python-scrapy-networkx",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/119-building-a-journey-planner-in-an-evening-with-python-scrapy-networkx",
      "submitted": "2014-03-08T02:19:05.646415Z"
    },
    {
      "links": "http://in.pycon.org/2009/talkfull/60/\r\n\r\n",
      "proposer": "Chandrashekar Jayaraman",
      "votes_count": null,
      "comments": 3,
      "id": 118,
      "votes": 10,
      "requirements": "<ol>\n<li>Basic understanding of Python programming  </li>\n<li>Basic understanding of Messaging  </li>\n</ol>",
      "title": "Python and ZeroMQ",
      "section": "Software Development Tools",
      "votes_groups": null,
      "speaker": "Chandrashekar Jayaraman",
      "objective": "<p>Will introduce the audience to ZeroMQ and how Python integrates with ZeroMQ. It would also cover python wrappers around simple to intermediate messaging patterns associated with ZeroMQ.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I am a Python Developer and Tech Lead at  Zeomega, Bangalore. I have been in the industry for around 8 years now with extensive experience in Python and Java technologies. I have conducted a Python workshop representing FSMK ( Free Software Movement Karnataka ) at PA College of Engineering Mangalore . I had given an introductory talk on Django during pycon 2009.</p>",
      "description": "<p>ZeroMQ is an excellent and simple message queue to solve specific use cases for distributed operations. Python has an excellent API to interact with ZeroMQ. Combining them gives us a powerful set of tools to create beautiful distributed applications. The talk would cover basic integration patterns and some intermediate stories as well. This would be demonstrated by a  framework explaining what the tool set is capable off.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "118-python-and-zeromq",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/118-python-and-zeromq",
      "submitted": "2014-02-28T04:07:21.619984Z"
    },
    {
      "links": "http://www.slideshare.net/JacksonIsaac1994/contributing-to-gnome-music-31348619\r\n\r\nhttp://jacksonisaac.wordpress.com/\r\n\r\nLink for bug-fix requiring line_profiler testing: https://github.com/gnome-prototypes-team/gnome-music/issues/114",
      "proposer": "Jackson Isaac",
      "votes_count": null,
      "comments": 0,
      "id": 117,
      "votes": 26,
      "requirements": "",
      "title": "Python3 code profiling using line_profiler",
      "section": "Software Development Tools",
      "votes_groups": null,
      "speaker": "Jackson Isaac",
      "objective": "<p>The audience will learn about line_profiler, it's use in Software Development and how it helps in making the software efficient by calculating the memory used by the modules and each instructions under them.  </p>\n<p>The talk will show how we can use it with Python3 by testing it on GNOME-Music code-base.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I am pursuing second year of B.Tech Computer Science Engineering from Amrita Vishwa Vidyapeetham, Kollam. I am part of Amrita FOSS club. I have worked on multiple bugs in GNOME-Music and Mozilla Firefox. I have used python technologies like Clone-Digger and line_profiler in GNOME-Music. I am sure that my knowledge about these technologies and tools will definitely help the audience to build better applications and write better code. I have also presented a talk on 'Contributing to GNOME-Music' at FOSSMeet '14 conducted by NIT Calicut.</p>",
      "description": "<p>1) The talk will begin with a brief introduction about Python and it's tools for software testing.  </p>\n<p>2) We will be discussing about installation process of line_profiler for python3.  </p>\n<p>3) A sample test would be presented on GNOME-Music codebase which is developed using python3 followed by the steps to run the profiler.  </p>\n<p>4) The talk will conclude with a small discussion about benefits of line_profiler during  software development and testing.  </p>",
      "confirmed": false,
      "slides": "http://www.slideshare.net/JacksonIsaac1994/using-line-profiler-with-python3",
      "phone": null,
      "name": "117-python3-code-profiling-using-line-profiler",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/117-python3-code-profiling-using-line-profiler",
      "submitted": "2014-02-18T17:43:32.242994Z"
    },
    {
      "links": "http://foss.in/2007/register/slides/Contributing_to_Zope_project_432.pdf\r\nhttp://www.youtube.com/watch?v=UEMjz5A_M5o\r\nhttp://muthukadan.net/presentation/python_workshop/fossmeet14.pdf\r\nhttp://in.pycon.org/2009/talkfull/21/\r\n",
      "proposer": "Baiju Muthukadan",
      "votes_count": null,
      "comments": 0,
      "id": 116,
      "votes": 16,
      "requirements": "<ol>\n<li>Basic understanding of Python programming  </li>\n<li>Basic understanding of Software versioning  </li>\n<li>Basic skill to use any of the command line shells like Bash, Zsh, cmd.exe etc. (This talk will be only using Bash shell for demonstration)  </li>\n</ol>",
      "title": "Distributing Python Packages Using Setuptools",
      "section": "Software Development Tools",
      "votes_groups": null,
      "speaker": "Baiju Muthukadan",
      "objective": "<p>Explain and demonstrate the fundamental workflow of using Setuptools for distributing Python packages. The talk will cover setting up a basic environment for development using Virtualenv and Pip. All the major parameters used in a typical setup.py file will be explained. The talk will also cover setting up a local package index server for development.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Baiju Muthukadan is a Python developer working as a Technical Architect at ZeOmega, Bangalore. He has been a contributor to Zope project since 2006 and has authored the book titled, A Comprehensive Guide to Zope Component Architecture. He founded the Swathanthra Malayalam Computing project in 2001 while studying at REC, Calicut. He was also employed by Free Software Foundation of India in 2002-2003. He had contributed to Koha in 2003-2004 years and also implemented it in few libraries during that time. Baiju has conducted many Python related talks and workshops in various parts of India including FOSS.IN. He is the main author of Selenium Python documentation. During PyCON India 2013, he received the first Kenneth Gonsalves Award.</p>",
      "description": "<p>This talk will explain the need for distribution and why Python developers should care about that. Packaging and distribution related technologies will be explained later. Next, setting up a basic development environment using Virtualenv and Pip will be covered. A simple package development and creating a source distribution will be demonstrated. Once the demo is finished, a complete walk through of setup.py will be given. This will cover all the parameters used inside a typical setup.py file. This will include namespace package, entry points install requirements etc. All the major command line options and arguments when running setup.py script will be explained. Finally setting up a local package index server will be covered.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "116-distributing-python-packages-using-setuptools",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/116-distributing-python-packages-using-setuptools",
      "submitted": "2014-02-18T10:51:31.368093Z"
    },
    {
      "links": "Resume:\r\nhttps://docs.google.com/document/d/1QZf9l6Wg96SLMVeiK8kQ3hBlyWjB6Ssy1t96GBy80Xo\r\nSlides:\r\nslideshare.net/yashinm\r\nGithub:\r\ngithub.com/sp3ctr3\r\nLinkedIn:\r\nin.linkedin.com/pub/yashin-mehaboobe/38/a2/367",
      "proposer": "Yashin Mehaboobe",
      "votes_count": null,
      "comments": 4,
      "id": 115,
      "votes": 14,
      "requirements": "<p>Ubuntu/Windows with Python2.7<br>\nFollowing libraries:<br>\nscapy:http://www.secdev.org/projects/scapy/<br>\nimpacket:http://corelabs.coresecurity.com/index.php?module=Wiki&amp;action=view&amp;type=tool&amp;name=Impacket<br>\nrequests:http://docs.python-requests.org/en/latest/user/install/#install<br>\nBeautifulSoup:http://www.crummy.com/software/BeautifulSoup/bs4/doc/<br>\nKeyczar:http://www.keyczar.org/<br>\npefile:https://code.google.com/p/pefile/<br>\nyara:https://plusvic.github.io/yara/</p>",
      "title": "Security Toolsmithing: Writing security tools in Python",
      "section": "Workshops",
      "votes_groups": null,
      "speaker": "Yashin Mehaboobe",
      "objective": "<p>This talk will be a hands on session that will cover how to create new security tools using Python. We'll go over the basics of python, how to utilize various modules and mainly on how Python can be utilized in various different security domains.</p>",
      "type": "",
      "email": null,
      "bio": "<p>Yashin Mehaboobe is a security researcher with the OpenSecurity and a Student Partner with Microsoft. His areas of interest in this field span hardware security,network security, malware analysis and reverse engineering. He had discovered a denial of service vulnerability in Android that he reported to Google and presented at Defcon Kerala. His work includes creating a static file based web application fingerprinting script for nmap, automated malware detection system for the Raspberry Pi, a network proxy in Python and a malware analysis framework in Python. He's been also invited to speak at HITB Asmterdam, Defcon Bangalore,Nullcon, c0c0n and Toorcon San Diego.</p>",
      "description": "<p>Automated tools make up a large part of a penetration test or a forensic investigation. There are a large amount of tools available for almost every security related job, but sometimes the available tools just won't do for a particular scenario. This is when you need to start coding your new tool or improve upon an existing tool. Python is one of the tools widely used for this purpose. Its ease of use along with the availability of a large amount of modules have made it the language of choice for many penetration testers.  </p>\n<p>This talk will be divided into 4 domains:<br>\n1. Network penetration testing:<br>\nIntroduction to modules such as socket, scapy !@# for network based attacks and defences. After that attendees will learn how to create a sniffer, a packet crafter and more in Python utilizing the information learned.<br>\n2. Malware Analysis:<br>\npefile,yara,volatility and other malware analysis modules are introduced. Then a sample demonstration of how to create a yara based malware detection platform.<br>\n3. Web app testing:<br>\nIntroduction to modules such as requests,mechanize and BeautifulSoup and how it can help in a webapp pentest.<br>\n4. Exploit and payload generation:<br>\nThis section will mainly focus on memory based attacks and how to call various system API from within Python. Attendees will also learn how to inject payload into memory and create custom payloads using Python.</p>",
      "confirmed": true,
      "slides": "",
      "phone": null,
      "name": "115-security-toolsmithing-writing-security-tools-in-python",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/115-security-toolsmithing-writing-security-tools-in-python",
      "submitted": "2014-02-16T20:24:03.027692Z"
    },
    {
      "links": "https://speakerdeck.com/sanketsaurav/package-and-distribute-your-python-code\r\nhttp://campushash.com/\r\nhttp://github.com/sanketsaurav\r\n",
      "proposer": "Sanket Saurav",
      "votes_count": null,
      "comments": 5,
      "id": 114,
      "votes": 24,
      "requirements": "<ul>\n<li>\n<p>A laptop with your favorite OS. I'll be using <a href=\"http://www.ubuntu.com\">my favorite GNU/Linux distro</a>, though.</p>\n</li>\n<li>\n<p>Python 2.7.x. You can get it from <a href=\"http://python.org/download/\">here</a> in case you're on Windows.</p>\n</li>\n<li>\n<p>Google App Engine SDK for your OS. You can get the latest one from <a href=\"https://developers.google.com/appengine/downloads#Google_App_Engine_SDK_for_Python\">here</a>.</p>\n</li>\n<li>\n<p>Your favorite text editor. <a href=\"http://www.sublimetext.com/3\">Mine's</a> better than yours, though.</p>\n</li>\n<li>\n<p>A <a href=\"http://accounts.google.com\">Google account</a>. I guess you already have one, though.</p>\n</li>\n</ul>",
      "title": "Web-apps development with Google App Engine",
      "section": "Workshops",
      "votes_groups": null,
      "speaker": "Sanket Saurav",
      "objective": "<p>The attendees would learn how to create and deploy a fully scalable and reliable web application on the Google App Engine platform using its Python SDK, and all the batteries that the platform provides.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I love Python, the Web and speaking. I've been speaking at workshops across the country on Python and web applications development for over a year now. I'm a co-founder of <a href=\"http://campushash.com\">CampusHash</a> where we are building an advanced talent assessment and discovery platform. Our stack at CampusHash used to be on Google App Engine, before we moved to Django. On weekends, I try to solve small, real problems through my side-projects mostly in Python. You can peek a look at them <a href=\"http://github.com/sanketsaurav\">here</a>.</p>",
      "description": "<p>Developers mostly want to <strong>just</strong> write code, and not worry about deployment. Everyone hates configuring Apache against all the pitfalls and gotchas, and scaling databases is always a pain. Also, <strong>cloud</strong> is the buzzword.  </p>\n<p><a href=\"http://developers.google.com/appengine\">Google App Engine</a> is a <strong><a href=\"en.wikipedia.org/wiki/Platform_as_a_service\">Platform-as-a-Service</a></strong>. It allows you to create a web application using its SDK, and deploy it on the Google Cloud painlessly - with literally <strong>one</strong> command from your CLI. Also, <strong>scaling is automatic</strong>. Already impressed? There's more.</p>\n<p>Apart from the fact that your app lives on the same architecture as other Google services like Gmail, Google+, etc., you get to use the amazing Google APIs effortlessly - Channels, Memcache, Search, Task Queues, Sockets, XMPP, etc. No configuration at all! For persistence, you have an option to choose from Google NoSQL Datastore and Google Cloud SQL. Google Cloud Storage can be used to store static media.  </p>\n<p>The session will constitute a detailed introduction to Google App Engine architecture, and using webapp2 framework with the above mentioned services to create a fully functional application. We'll use Google NoSQL Datastore for persistence. We'll also see how we can deploy <a href=\"http://flask.pocoo.org\">Flask</a> and <a href=\"https://www.djangoproject.com/\">Django</a> apps on the platform.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "114-web-apps-development-with-google-app-engine",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/114-web-apps-development-with-google-app-engine",
      "submitted": "2014-02-16T15:28:50.981733Z"
    },
    {
      "links": "http://anuvrat.in\r\n- Scrape the web using Scrapy, Pycon '13: https://www.youtube.com/watch?v=JqabCQkJF3g&hd=1\r\n",
      "proposer": "Anuvrat Parashar",
      "votes_count": null,
      "comments": 2,
      "id": 113,
      "votes": 25,
      "requirements": "<p>A laptop running linux, having python 2.7 and Twisted 13.x installed. (preferably in a separate virtualenv).  </p>\n<p>Though it is not impossible to run Twisted on Windows, it would be smoother for everyone to try out the hands on experiences on a Linux box.</p>",
      "title": "Untwisting Twisted",
      "section": "Workshops",
      "votes_groups": null,
      "speaker": "Anuvrat Parashar",
      "objective": "<p>Understand the basics of twisted eg deferreds, protocols and factories.<br>\nUse the knowledge to build small applications.</p>",
      "type": "",
      "email": null,
      "bio": "<ul>\n<li>Been tinkering around twisted for over an year. </li>\n<li>Wrote a distributed web crawling/parsing system with twisted at work.  </li>\n<li>Been a fan of twisted ever since.</li>\n</ul>",
      "description": "<p>Twisted is an awesome tool for asynchronous programming. But it can be a bit daunting for beginners, basically because of the lack of extensive user friendly documentation.<br>\nThis session aims to get people comfortable with the basics with the help of some simple hands on examples.  </p>\n<ul>\n<li>Twisted: <a href=\"http://twistedmatrix.com/\">http://twistedmatrix.com/</a></li>\n<li>Best set of free tutorials on Twisted: <a href=\"http://krondo.com/?p=1209\">http://krondo.com/?p=1209</a></li>\n</ul>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "113-untwisting-twisted",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/113-untwisting-twisted",
      "submitted": "2014-02-14T05:27:42.333691Z"
    },
    {
      "links": "",
      "proposer": "vishal pai",
      "votes_count": null,
      "comments": 5,
      "id": 112,
      "votes": -4,
      "requirements": "<ol>\n<li>Requirements for audience  </li>\n</ol>\n<p>Laptop with following installed  </p>\n<ul>\n<li>\n<p>windows 7 or 8 (linux works as well but I am a novice on the os)</p>\n</li>\n<li>\n<p>Chrome Browser</p>\n</li>\n<li>\n<p>Python 2.7 \n<a href=\"http://www.python.org/ftp/python/2.7/python-2.7.msi\">http://www.python.org/ftp/python/2.7/python-2.7.msi</a></p>\n</li>\n<li>\n<p>Google app engine SDK\n<a href=\"http://googleappengine.googlecode.com/files/GoogleAppEngine-1.8.8.msi\">http://googleappengine.googlecode.com/files/GoogleAppEngine-1.8.8.msi</a></p>\n</li>\n<li>\n<p>Notepad++\n<a href=\"http://notepad-plus-plus.org/download/v6.5.html\">http://notepad-plus-plus.org/download/v6.5.html</a></p>\n</li>\n<li>\n<p>JQuery\n<a href=\"http://code.jquery.com/jquery-2.0.3.js\">http://code.jquery.com/jquery-2.0.3.js</a></p>\n</li>\n</ul>\n<p>Save the above file to the disk  </p>\n<ul>\n<li>\n<p>Bootstrap 3\n<a href=\"http://getbootstrap.com/\">http://getbootstrap.com/</a></p>\n</li>\n<li>\n<p>Create gmail account if participant does not have one</p>\n</li>\n<li>\n<p>Requirements for better presentation  </p>\n</li>\n<li>I would like to project the code I am typing in</li>\n<li>White board and marker</li>\n</ul>",
      "title": "Hands on Rapid application development using Python and Google App Engine",
      "section": "Workshops",
      "votes_groups": null,
      "speaker": "vishal pai",
      "objective": "<p>At the end of the session audience will understand how to create their own end to end cloud web application using HTML5, CSS, JS, Python, Google App Engine and Google NoSQL Datastore</p>",
      "type": "",
      "email": null,
      "bio": "<p>I am founder of Lumos initiative in Pune. Goal of Lumos is to create independent programmers.  </p>\n<p><a href=\"http://gdriv.es/lumos\">http://gdriv.es/lumos</a></p>\n<p>Prior to Lumos I worked with Persistent Systems Ltd for 9 years. I worked as exec assistant to CEO Persistent. Recently worked as Relationship manager for one of the top customers for Persistent.  </p>",
      "description": "<p>Workshop will be about me talking and typing code in HTML, JS and Python. At each stage I will show the output on what was achieved.  </p>\n<p>If audience has a laptop with necessary installations they can type along with me to see the results.  </p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "112-hands-on-rapid-application-development-using-python-and-google-app-engine",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/112-hands-on-rapid-application-development-using-python-and-google-app-engine",
      "submitted": "2014-02-13T02:24:52.866548Z"
    },
    {
      "links": "",
      "proposer": "Patrick Nsukami",
      "votes_count": null,
      "comments": 8,
      "id": 111,
      "votes": 3,
      "requirements": "<p>A Linux flavored operating system, being able to launch a terminal, being able to install python packages, being able to edit yaml files.</p>",
      "title": "Infrastructure management with Ansible",
      "section": "Infrastructure",
      "votes_groups": null,
      "speaker": "Patrick Nsukami",
      "objective": "<p>Present to you, another tool that will help you for tasks like servers infrastructure management, systems  configuration, software deployment, ...</p>",
      "type": "",
      "email": null,
      "bio": "<p>Web developer at Soon.SA since few months. But still able to meetups, barcamps, workshops, talks. Good experience in web development. Has spent some time and it is still the case, spreading the FLOSS philosophy.  </p>\n<p>As an independent, he always try to use open source tools for his personal work, and educate organizations and individuals on development and implementation of open source tools.  </p>\n<p>Python and open source advocate. When not training people, work to strengthen local open source communities in Dakar by organizing events, giving workshops/talks, raising business/government awareness and educating local trainers-to-be.  </p>\n<p>Open minded, like learning new stuff, interested by whatever can make a human, sport, music, reading, video games, Linux, Dr House, ...  </p>\n<p>You can find more about me here: <a href=\"http://about.me/lemeteore\">http://about.me/lemeteore</a></p>",
      "description": "<p>In this talk, I will introduce you to Ansible an IT automation tool, a radically simple model-driven configuration management, deployment, and command execution framework.</p>",
      "confirmed": false,
      "slides": "https://speakerdeck.com/lemeteore/infrastructure-management-with-ansible",
      "phone": null,
      "name": "111-infrastructure-management-with-ansible",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/111-infrastructure-management-with-ansible",
      "submitted": "2014-02-12T09:30:12.065283Z"
    },
    {
      "links": "http://www.cloudconnectevent.in/speaker-profiles\r\nhttp://www.cloudconnectevent.in/conference-ataglance",
      "proposer": "Venu Murthy",
      "votes_count": null,
      "comments": 2,
      "id": 110,
      "votes": 46,
      "requirements": "<p>Any one who can fire up their laptop and launch a terminal and (preferably have python installed on it already) are welcome!</p>",
      "title": "Leverage the power of the Cloud using Python",
      "section": "Workshops",
      "votes_groups": null,
      "speaker": "Venu Murthy",
      "objective": "<p>To demystify the cloud for those of us for whom the cloud is still cloudy and show how to tame the cloud using the power of Python!<br>\nAfter having attended this workshop the attendee would be able to understand the fundamentals of the cloud and concepts around \"Infrastructure Automation\" and \"Infrastructure as Code\".  </p>",
      "type": "",
      "email": null,
      "bio": "<p>Venu Murthy M K<br>\nSenior Cloud Consultant<br>\nThoughtWorks Technologies (India) Pvt Ltd  </p>\n<p>Venu Murthy has been fortunate to be the early adopters of Cloud technologies and hence has gained immense experience and knowledge on the Cloud Technologies. He has had the privilege to work on migrating large user bases along with their invaluable data on legacy systems to the Cloud. His decade long experience in all the phases of the cloud--from requirement gathering, analysis, spiking the cloud app to its deployment into the organisation and integrating it with other existing systems makes the cloud, magical! He is responsible for the most crucial cloud apps in ThoughtWorks (which has a sophisticated and large user base). He single handedly manages and monitors the cloud apps by automating most of the processes using the language he is passionate about--Python!  </p>\n<p>Courtesy: <a href=\"http://www.cloudconnectevent.in/speaker-profiles\">http://www.cloudconnectevent.in/speaker-profiles</a></p>",
      "description": "<p>\"Infrastructure Automation\" and \"Infrastructure as Code\" are the latest trends in the world of Cloud Computing. These terms shouldn't intimidate us once we get a \"hands on\" session!\nI had presented in the year of 2013 at the International Cloud Connect event on \"leveraging the power of the cloud using python\" and I will be improvising on it and being a python enthusiast will give you a hands on first hand experience on using the radically simple IT automation platform--Ansible.<br>\nAnsible is written in Python and has inherited its simplicity! You will get to try out how it makes your applications and systems easier to deploy. Which helps avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.  </p>",
      "confirmed": false,
      "slides": "http://www.slideshare.net/VenuMurthy/python-andcloud",
      "phone": null,
      "name": "110-leverage-the-power-of-the-cloud-using-python",
      "level": "Beginner",
      "url": "http://in.pycon.org/funnel/2014/110-leverage-the-power-of-the-cloud-using-python",
      "submitted": "2014-02-12T06:28:00.714309Z"
    },
    {
      "links": "http://github.com/svpmtrust/autotest \r\n",
      "proposer": "Eswar Vandanapu",
      "votes_count": null,
      "comments": 3,
      "id": 109,
      "votes": 4,
      "requirements": "",
      "title": "Automatic deployment and scaling of python in AWS",
      "section": "Infrastructure",
      "votes_groups": null,
      "speaker": "Eswar Vandanapu",
      "objective": "<p>To gain insights into how python code can be deployed for development operations purposes, and learn from the experiences of the fellow travelers.  </p>",
      "type": "",
      "email": null,
      "bio": "<p>I am a volunteer in SVPM Trust, and manage their VEBSnet2 initiative.  Aim of the trust is to help several colleges in Andhra area to have more exposure to the Industry.  Our aim is to bring awareness in students to know what is out there, and where they stand. We are building a network of alumni and people from area to take guest lectures in various colleges, conduct coding challenges and workshops.  </p>\n<p>In my professional life I have 21 years of experience in the IT industry in wide range of technologies and products, of which 15 is in Sillicon Valley.  I am currently working as a Platform Architect for Gnana for their python and SAS based predictive analytics product. Prior to Gnana, I was Director of Development in Oracle for their flagship Oracle Identity Manager product and I hold several patents in the area of deployment automation and micro-kernel based architectures and other general platform work.  </p>\n<p><a href=\"https://www.linkedin.com/in/eswarv\">https://www.linkedin.com/in/eswarv</a></p>",
      "description": "<p>We will share the lessons learned from implementing the autotester software we are using to conduct coding contests around Andhra Pradesh using AWS, Vagrant, built in Python.  </p>\n<p>This framework supports polyglot programming for the contests meaning students will be able able to submit their work in C, C++, Python or Java.  </p>\n<p>This is open source code and you can access the code at: <a href=\"http://github.com/svpmtrust/autotest\">http://github.com/svpmtrust/autotest</a>  </p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "109-automatic-deployment-and-scaling-of-python-in-aws",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/109-automatic-deployment-and-scaling-of-python-in-aws",
      "submitted": "2014-02-11T04:21:05.423306Z"
    },
    {
      "links": "https://github.com/jyotiska\r\nhttp://jyotiska.github.io\r\nhttp://in.linkedin.com/in/jyotiskank/\r\n\r\n\r\nhttp://spark-project.org/\r\nhttps://github.com/apache/spark",
      "proposer": "Jyotiska NK",
      "votes_count": null,
      "comments": 2,
      "id": 108,
      "votes": 46,
      "requirements": "<p>If you would like to try out example programs along with the demo, you will need:  </p>\n<p>Moderately powerful laptop (at least 4GB of RAM)  </p>\n<p>Linux Machine  </p>\n<p>Python 2.7  </p>\n<p>Pre-compiled local Spark installation (follow http://spark.incubator.apache.org/docs/latest/quick-start.html)  </p>\n<p>I will share the datasets to be used with the slide.</p>",
      "title": "Python + Spark: Lightning Fast Cluster Computing",
      "section": "Infrastructure",
      "votes_groups": null,
      "speaker": "Jyotiska NK",
      "objective": "<p>To give an overview and discussion on Apache Spark, a fast cluster computing framework for large-scale data processing. Also discuss use cases and demonstrate the advantages of Spark over Hadoop using programs written with PySpark API for analyzing large datasets.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I work as a Data Engineer at DataWeave, a Big Data startup based in Bangalore in retail and e-commerce domain. I finished my Masters Data Science from IIIT-Bangalore this year.  </p>\n<p>I am a committer at Apache Spark project. My main contributions are towards PySpark and improving the performance of Python API  along with building programming guides and documentations for PySpark to encourage Python programmers to use Spark.</p>",
      "description": "<p>Apache Spark is an in-memory cluster computing framework, originally developed in UC Berkeley. Spark runs either standalone, Amazon EC2 or on Apache Mesos(a cluster manager). Thats why, Spark can co-locate with Hadoop and can be deployed in a Hadoop cluster. Also, along with local data, Spark can be used to process data stored in HDFS, HBase, Hive, Cassandra. Spark is designed to perform both general data processing (similar to MapReduce) and new workloads like streaming, interactive queries, and machine learning.  </p>\n<p>Results have shown that Spark can be 10 times to upto 100 times faster than Hadoop on datasets scaling up to Terabytes. Currently, it supports Scala, Java and Python for writing programs.  </p>\n<p>In this talk, I will be explaining the following concepts on Spark - General Overview, RDD (Resilient Distributed Datasets) which is a read-only, partitioned collection of records through which Spark achieves memory abstraction, fault tolerance and fast in-memory computation, followed by Job Scheduling and Memory Management.  </p>\n<p>I will give a demonstration of PySpark, the Python API built on Spark, show different operations (map, reduce, sort, filter) on a large dataset. Then I plan to do a head-to-head comparison between two programs doing same work - one written in mrjob for Hadoop and the other written using PySpark.  </p>\n<p>I will conclude the presentation talking about the companies currently using Spark worldwide and their use cases.</p>",
      "confirmed": true,
      "slides": "",
      "phone": null,
      "name": "108-python-spark-lightning-fast-cluster-computing",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/108-python-spark-lightning-fast-cluster-computing",
      "submitted": "2014-02-10T11:48:57.867588Z"
    },
    {
      "links": "* Profile Links:\r\nhttps://github.com/VishrutMehta\r\nhttp://in.linkedin.com/pub/vishrut-mehta/4b/1b1/939\r\n\r\n* Project Links:\r\nhttp://lucene.apache.org/solr/\r\nhttp://lucene.apache.org/solr/4_3_1/tutorial.html\r\nhttp://opensource.timetric.com/sunburnt/index.html\r\nhttps://github.com/tow/sunburnt\r\n",
      "proposer": "Vishrut Mehta",
      "votes_count": null,
      "comments": 3,
      "id": 107,
      "votes": 2,
      "requirements": "<p>Laptop  </p>\n<p>A Linux Machine( preferably 64 bit )  </p>\n<p>Software: Python 2.6+  </p>\n<p>Internet Connection  </p>\n<p>Optional: Java Sun6</p>",
      "title": "Sunburnt: Python wrapper for Apache Solr - Search Engine",
      "section": null,
      "votes_groups": null,
      "speaker": "Vishrut Mehta",
      "objective": "<p>To teach people about Sunburnt which is a search engine wrapper over Apache Solr and how to write scripts for Indexing, Query, Highlighting, Optimization etc.</p>",
      "type": "",
      "email": null,
      "bio": "<p>I am currently a 3rd year BTech+MS Computer Science student at IIIT Hyderabad. I have been working for FOSS and Open Source Development since 2 years and have been actively contributing to organizations like Sahana Software Foundation, E-cidadania, Gnome, etc.  </p>\n<p>As a part of my Google Summer of Code Project'13, I have been learning Apache Solr and sunburnt and have worked quite a bit in this.  </p>\n<p>Also, have been selected as a Research intern at INRIA, France to work on dynamic multi-cloud application.  </p>\n<p>For more updates on my work, follow me on github:  </p>\n<p><a href=\"https://github.com/VishrutMehta\">https://github.com/VishrutMehta</a></p>",
      "description": "<p>Fed-up of Java ? :P Here's the solution for using Java's Apache Solr without actually touching any Java code.  </p>\n<p>Firstly To describe what Sunburnt is, it is a Python Wrapper over Apache Solr - a high-performance, full-featured text search engine which uses Apache Lucene search library written entirely in Java. It is a technology suitable for nearly any application that requires full-text search, especially cross-platform.  </p>\n<p>So to begin with the session, will show the users how to install Apache Solr, install sunburnt, configure Solr according to users needs.  </p>\n<p>Then would show how to start the Solr server and how to dissolve errors.  </p>\n<p>Then will show the users to write some basic scripts for in and then show how to create Indexes using Sunburnt and how to interact with Apache Solr.  </p>\n<p>Then will also try to demonstrate other features like Highlighting in Search, QueryParsing, Analyzers, etc using Sunburnt itself.  </p>\n<p>Also would like to demonstrate how I integrated Sunburnt in web2py framework in an Open Source Organization called Sahana Software Foundation.  </p>\n<p>This will be helpful to integrate Full-Text Search and other search optimizations techniques using this.</p>",
      "confirmed": false,
      "slides": "",
      "phone": null,
      "name": "107-sunburnt-python-wrapper-for-apache-solr-search-engine",
      "level": "Intermediate",
      "url": "http://in.pycon.org/funnel/2014/107-sunburnt-python-wrapper-for-apache-solr-search-engine",
      "submitted": "2014-02-10T04:46:13.785977Z"
    }
  ],
  "sections": [
    {
      "description": "Language features, Python implementations, Python 3.X, Standard Library",
      "name": "core-python",
      "title": "Core Python"
    },
    {
      "description": "Embedded Python, Device Interfacing, Robotics",
      "name": "embedded",
      "title": "Embedded Python"
    },
    {
      "description": "Deployments, System Configuration, Monitoring",
      "name": "infrastructure",
      "title": "Infrastructure"
    },
    {
      "description": "Scientific/Numeric Libraries, Cryptography, Data Engineering, Mathematics, Statistics, Visualizations",
      "name": "scipy",
      "title": "Scientific Computing"
    },
    {
      "description": "GUI programming, Testing tools",
      "name": "software-development-tools",
      "title": "Software Development Tools"
    },
    {
      "description": "Web Frameworks, Concurrency, Databases, NoSQL, Cloud Computing, Restful Interfaces",
      "name": "web-development",
      "title": "Web Development"
    },
    {
      "description": "3-hour long sessions",
      "name": "workshops",
      "title": "Workshops"
    }
  ],
  "space": {
    "status": 2,
    "datelocation": "September 26-28, 2014",
    "name": "2014",
    "title": "PyCon India 2014"
  }
}